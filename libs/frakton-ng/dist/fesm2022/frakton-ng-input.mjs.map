{"version":3,"file":"frakton-ng-input.mjs","sources":["../../input/src/fkt-input.component.ts","../../input/src/fkt-input.component.html","../../input/src/fkt-input.types.ts","../../input/frakton-ng-input.ts"],"sourcesContent":["import {\r\n\tChangeDetectionStrategy,\r\n\tComponent,\r\n\tcomputed,\r\n\tcontentChild,\r\n\tElementRef,\r\n\tinput,\r\n\tsignal,\r\n\tviewChild,\r\n} from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FktFieldErrorComponent } from 'frakton-ng/field-error';\r\nimport {\r\n\tcurrencyTransformer,\r\n\tFormControlSuffixDirective,\r\n\thourTransformer,\r\n\tpercentTransformer,\r\n\tSignalFormControl,\r\n\tSignalFormControlDirective\r\n} from 'frakton-ng/forms';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FktInputTransformer, FktInputType } from './fkt-input.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-input',\r\n\timports: [\r\n\t\tReactiveFormsModule,\r\n\t\tFktFieldErrorComponent,\r\n\t\tSignalFormControlDirective,\r\n\t\tNgTemplateOutlet,\r\n\t\tFktButtonComponent,\r\n\t],\r\n\ttemplateUrl: './fkt-input.component.html',\r\n\tstyleUrl: './fkt-input.component.scss',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FktInputComponent {\r\n\tcontrol = input.required<SignalFormControl<any>>();\r\n\tlabel = input('');\r\n\tplaceholder = input('');\r\n\tinputPadding = input('.5rem 1rem');\r\n\ttype = input<FktInputType>('text');\r\n\ttransformer = input<FktInputTransformer>();\r\n\tspellcheck = input(true);\r\n\r\n\tprotected suffix = contentChild(FormControlSuffixDirective);\r\n\r\n\tprotected showPassword = signal(false);\r\n\r\n\tprotected inputType = computed(() => {\r\n\t\tconst type = this.type();\r\n\t\tconst showPassword = this.showPassword();\r\n\r\n\t\tif (type !== 'password') return type;\r\n\r\n\t\treturn showPassword ? 'text' : 'password';\r\n\t});\r\n\r\n\tprotected transformerValue = computed(() => {\r\n\t\tconst transformer = this.transformer();\r\n\r\n\t\tif (transformer === 'currency') return currencyTransformer;\r\n\r\n\t\tif (transformer === 'percent') return percentTransformer;\r\n\r\n\t\tif (transformer === 'hour') return hourTransformer;\r\n\r\n\t\treturn transformer;\r\n\t});\r\n\r\n\tpublic element = viewChild('input', {read: ElementRef});\r\n}\r\n","<div class=\"label-container\">\r\n\t<div\r\n\t\t[class.error]=\"!!error.message()\"\r\n\t\t[class.float]=\"control().viewValue()\"\r\n\t\t[class.disabled]=\"control().disabled()\"\r\n\t\taria-hidden=\"true\"\r\n\t\tclass=\"label-wrapper\">\r\n\t\t<label\r\n\t\t>{{ label() }}</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"input\">\r\n\t<input\r\n\t\t[spellcheck]=\"spellcheck() ? 'true' : 'false'\"\r\n\t\t[class.password]=\"type() === 'password'\"\r\n\t\t[class.error]=\"!!error.message()\"\r\n\t\t#input\r\n\t\t[type]=\"inputType()\"\r\n\t\t[style.padding]=\"inputPadding()\"\r\n\t\t[placeholder]=\"placeholder()\"\r\n\t\t[signalFormControl]=\"control()\"\r\n\t\t[attr.aria-label]=\"label()\"\r\n\t\t[transformer]=\"transformerValue()\"\r\n\t/>\r\n\r\n\t<div class=\"input__suffix\">\r\n\t\t@if (type() === \"password\") {\r\n\t\t\t<div class=\"input__suffix-password\">\r\n\t\t\t\t@if (showPassword()) {\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t(click)=\"showPassword.set(false)\"\r\n\t\t\t\t\t\ttheme=\"basic\"\r\n\t\t\t\t\t\ticon=\"eye-slash\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t} @else {\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t(click)=\"showPassword.set(true)\"\r\n\t\t\t\t\t\ttheme=\"basic\"\r\n\t\t\t\t\t\ticon=\"eye\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t} @else if (suffix()) {\r\n\t\t\t<div class=\"input__suffix-content\">\r\n\t\t\t\t<ng-container\r\n\t\t\t\t\t[ngTemplateOutlet]=\"suffix()!.templateRef\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t</div>\r\n\r\n</div>\r\n\r\n<fkt-field-error #error [control]=\"control()\"/>\r\n","import { SignalFormControlTransformer } from 'frakton-ng/forms';\r\n\r\nexport const fktInputTypes = ['text', 'password', 'number', 'email'] as const;\r\nexport const fktInputTransformers = ['currency', 'percent', 'hour'] as const;\r\n\r\nexport type FktInputType = typeof fktInputTypes[number];\r\nexport type FktInputTransformer = typeof fktInputTransformers[number] | SignalFormControlTransformer;\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}