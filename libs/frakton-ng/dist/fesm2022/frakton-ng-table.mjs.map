{"version":3,"file":"frakton-ng-table.mjs","sources":["../../table/src/cells/default/fkt-table-cell-default.component.ts","../../table/src/cells/default/fkt-table-cell-default.component.html","../../table/src/cells/action/fkt-table-cell-with-action.component.ts","../../table/src/cells/action/fkt-table-cell-with-action.component.html","../../table/src/cells/badge/fkt-table-cell-badge.component.ts","../../table/src/cells/badge/fkt-table-cell-badge.component.html","../../table/src/cells/table-cells-mapping.ts","../../table/src/cell-renderer/table-cell-renderer.component.ts","../../table/src/fkt-table.component.ts","../../table/src/fkt-table.component.html","../../table/src/frakton-ng-table.ts"],"sourcesContent":["import { Component, input } from '@angular/core';\r\nimport { ToClassPipe } from 'frakton-ng/internal/pipes';\r\n\r\n@Component({\r\n\tselector: 'fkt-table-cell-default',\r\n\timports: [ToClassPipe],\r\n\ttemplateUrl: './fkt-table-cell-default.component.html',\r\n\tstyleUrl: './fkt-table-cell-default.component.scss'\r\n})\r\nexport class FktTableCellDefaultComponent {\r\n\tclasses = input<string[]>();\r\n\tvalue = input.required<string>();\r\n}\r\n","<div [class]=\"(classes() ?? []) | toClass\">\r\n  {{ value() }}\r\n</div>\r\n","import { Component, input } from '@angular/core';\r\nimport { CallPipe } from 'frakton-ng/internal/pipes';\r\nimport { FktButtonsListComponent } from 'frakton-ng/buttons-list';\r\nimport { FktButtonAction } from 'frakton-ng/button';\r\n\r\n\r\n@Component({\r\n\tselector: 'fkt-table-cells-action',\r\n\timports: [\r\n\t\tCallPipe,\r\n\t\tFktButtonsListComponent\r\n\t],\r\n\ttemplateUrl: './fkt-table-cell-with-action.component.html',\r\n\tstyleUrl: './fkt-table-cell-with-action.component.scss'\r\n})\r\nexport class FktTableCellWithActionComponent {\r\n\ttext = input.required<{\r\n\t\tvalue: string;\r\n\t\tclasses?: string[]\r\n\t}>()\r\n\tactions = input.required<FktButtonAction[]>();\r\n\r\n\r\n\tprotected getClasses(classes?: string[]) {\r\n\t\treturn classes?.join(' ') ?? '';\r\n\t}\r\n}\r\n","<p [class]=\"'flex-grow break-all  w-full block ' + (text().classes | call: getClasses)\">\r\n\t{{ text().value }}\r\n</p>\r\n\r\n<fkt-buttons-list\r\n\t[actions]=\"actions()\"\r\n/>\r\n","import { Component, input } from '@angular/core';\r\nimport { FktBadgeColor, FktBadgeComponent, FktBadgeVariant } from 'frakton-ng/badge';\r\n\r\n@Component({\r\n  selector: 'fkt-table-cell-badge',\r\n\timports: [\r\n\t\tFktBadgeComponent\r\n\t],\r\n  templateUrl: './fkt-table-cell-badge.component.html',\r\n  styleUrl: './fkt-table-cell-badge.component.scss'\r\n})\r\nexport class FktTableCellBadgeComponent {\r\n\ttext = input.required<string>();\r\n\tcolor = input.required<FktBadgeColor>();\r\n\tvariant = input<FktBadgeVariant>();\r\n}\r\n","<fkt-badge\r\n\t[text]=\"text()\"\r\n\t[color]=\"color()\"\r\n\t[variant]=\"variant() ?? 'opaque'\"\r\n/>\r\n","import { FktTableCellDefaultComponent } from './default/fkt-table-cell-default.component';\r\nimport { FktTableCellWithActionComponent } from './action/fkt-table-cell-with-action.component';\r\nimport { Type } from '@angular/core';\r\nimport { FktTableCellBadgeComponent } from './badge/fkt-table-cell-badge.component';\r\n\r\nexport const tableCellsMapping = {\r\n\tdefault: FktTableCellDefaultComponent,\r\n\t'with-action': FktTableCellWithActionComponent,\r\n\tbadge: FktTableCellBadgeComponent\r\n} as const satisfies Record<string, Type<any>>;\r\n","import { Component, ComponentRef, inject, input, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\nimport { tableCellsMapping } from '../cells/table-cells-mapping';\r\nimport { createComponentBindings } from 'frakton-ng/internal/utils';\r\nimport { FktTableColumn } from \"../fkt-table.types\";\r\n\r\n\r\n@Component({\r\n\tselector: 'fkt-table-cell-renderer',\r\n\timports: [],\r\n\ttemplate: '',\r\n\tstyles: ''\r\n})\r\nexport class TableCellRendererComponent implements OnInit, OnDestroy {\r\n\tcolumn = input.required<FktTableColumn>();\r\n\r\n\tprivate viewRef = inject(ViewContainerRef);\r\n\tprivate componentRef: ComponentRef<any> | null = null;\r\n\r\n\tngOnInit() {\r\n\t\tconst column = this.column();\r\n\r\n\t\tconst cell = column.cell;\r\n\r\n\t\tconst componentToRender = tableCellsMapping[cell.type] as Type<any>;\r\n\r\n\t\tthis.componentRef = this.viewRef.createComponent(componentToRender, {\r\n\t\t\tbindings: createComponentBindings(componentToRender, cell.options as any)\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.componentRef?.destroy();\r\n\t}\r\n}\r\n","import { booleanAttribute, Component, computed, input, } from '@angular/core';\r\nimport { TableCellRendererComponent } from './cell-renderer/table-cell-renderer.component';\r\nimport { FktSpinnerComponent } from 'frakton-ng/spinner';\r\nimport { FktButtonsListComponent } from 'frakton-ng/buttons-list';\r\nimport { CallPipe } from 'frakton-ng/internal/pipes';\r\nimport { FktIdentifiable } from 'frakton-ng/core';\r\nimport { FktButtonAction } from 'frakton-ng/button';\r\nimport { FktNoResults, FktNoResultsComponent } from 'frakton-ng/no-results';\r\nimport { FktTableActionFn, FktTableClassesFn, FktTableColumn, FktTableColumnFn } from './fkt-table.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-table',\r\n\timports: [\r\n\t\tCallPipe,\r\n\t\tTableCellRendererComponent,\r\n\t\tFktSpinnerComponent,\r\n\t\tFktButtonsListComponent,\r\n\t\tFktNoResultsComponent,\r\n\t],\r\n\ttemplateUrl: './fkt-table.component.html',\r\n\tstyleUrl: './fkt-table.component.scss',\r\n})\r\nexport class FktTableComponent<T extends FktIdentifiable> {\r\n\tdata = input.required<T[]>();\r\n\tcolumnsFn = input.required<FktTableColumnFn<T>>();\r\n\tclassesFn = input<FktTableClassesFn<T>>(() => '');\r\n\tactionsFn = input<FktTableActionFn<T>>();\r\n\tmainAction = input<FktButtonAction>();\r\n\tloading = input(false);\r\n\tnoHeaderWhenEmpty = input(false, {transform: booleanAttribute});\r\n\r\n\tnoResults = input<FktNoResults>({\r\n\t\tlabel: 'Sem resultados',\r\n\t});\r\n\r\n\theaders = computed(() => {\r\n\t\tconst columnsFn = this.columnsFn();\r\n\t\tconst data = this.data();\r\n\r\n\t\tif (!data.length) return [] as FktTableColumn[];\r\n\r\n\t\treturn columnsFn(this.data()[0]);\r\n\t});\r\n\r\n\tcolumns = computed(() => {\r\n\t\tconst columnsFn = this.columnsFn();\r\n\t\tconst data = this.data();\r\n\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\titem,\r\n\t\t\t\tcolumns: columnsFn(item),\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\r\n\tactions = computed(() => {\r\n\t\tconst actionsFn = this.actionsFn();\r\n\t\tconst data = this.data();\r\n\r\n\t\tif (!actionsFn)\r\n\t\t\treturn [];\r\n\r\n\t\treturn data.map(item => actionsFn(item));\r\n\t});\r\n}\r\n","@let action = mainAction();\r\n\r\n<div class=\"table-container\">\r\n\t@if ((loading() || !data().length)) {\r\n\t\t<div class=\"table-container__no-data\">\r\n\t\t\t@if (!noHeaderWhenEmpty() && !loading()) {\r\n\t\t\t\t<div class=\"table-container__no-data-header\">\r\n\t\t\t\t\t@if (action) {\r\n\t\t\t\t\t\t<fkt-buttons-list\r\n\t\t\t\t\t\t\t[actions]=\"[action]\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<div class=\"table-container__no-data-content\">\r\n\t\t\t\t@if (loading()) {\r\n\t\t\t\t\t<fkt-spinner [size]=\"80\" [stroke]=\"8\"/>\r\n\t\t\t\t} @else {\r\n\t\t\t\t\t@let noResultsVar = noResults();\r\n\r\n\t\t\t\t\t<fkt-no-results\r\n\t\t\t\t\t\tborderless\r\n\t\t\t\t\t\t[noResults]=\"noResultsVar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t} @else {\r\n\t\t<table class=\"table\">\r\n\t\t\t<thead class=\"table__header\">\r\n\t\t\t<tr>\r\n\t\t\t\t@for (header of headers(); track header.position) {\r\n\t\t\t\t\t<th class=\"table__header-title\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{{ header.name }}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t}\r\n\t\t\t\t@if (!!actionsFn() || !!action) {\r\n\t\t\t\t\t<th class=\"table__header-actions\">\r\n\t\t\t\t\t\t@if (action) {\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<fkt-buttons-list\r\n\t\t\t\t\t\t\t\t\t[actions]=\"[action]\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</th>\r\n\t\t\t\t}\r\n\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t@for (item of columns(); track item) {\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\t[class]=\"item.item | call: classesFn()\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t@for (column of item.columns; track column.position) {\r\n\t\t\t\t\t\t\t<td class=\"table__header-cell\">\r\n\t\t\t\t\t\t\t\t<fkt-table-cell-renderer\r\n\t\t\t\t\t\t\t\t\t[column]=\"column\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t@if (!!actionsFn() || !!action) {\r\n\t\t\t\t\t\t\t<td class=\"table__header-cell--actions\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<fkt-buttons-list\r\n\t\t\t\t\t\t\t\t\t\t[actions]=\"actions()[$index]\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t}\r\n</div>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}