{"version":3,"file":"frakton-ng-tabs.mjs","sources":["../../tabs/src/fkt-tab-lazy.directive.ts","../../tabs/src/tab/fkt-tab.component.ts","../../tabs/src/tab/fkt-tab.component.html","../../tabs/src/fkt-tabs-list.component.ts","../../tabs/src/fkt-tabs-list.component.html","../../tabs/src/frakton-ng-tabs.ts"],"sourcesContent":["import { Directive, inject, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[fktTabLazy]'\r\n})\r\nexport class FktTabLazyDirective {\r\n\ttemplate = inject(TemplateRef);\r\n}\r\n","import { Component, computed, contentChild, input, TemplateRef, viewChild } from '@angular/core';\r\nimport { FktIconName } from 'frakton-ng/icon';\r\nimport { FktTabLazyDirective } from '../fkt-tab-lazy.directive';\r\n\r\n@Component({\r\n\tselector: 'fkt-tab',\r\n\texportAs: 'fktTab',\r\n\timports: [],\r\n\ttemplateUrl: './fkt-tab.component.html',\r\n\tstyleUrl: './fkt-tab.component.scss'\r\n})\r\nexport class FktTabComponent {\r\n\tlabel = input.required<string>();\r\n\tkey = input.required<string>();\r\n\ticon = input<FktIconName>();\r\n\tprivate containerTemplate = viewChild.required('tab', {read: TemplateRef});\r\n\tprivate lazyContent = contentChild(FktTabLazyDirective);\r\n\r\n\ttemplate = computed(() => this.lazyContent()?.template ?? this.containerTemplate());\r\n}\r\n","<ng-template #tab>\r\n\t<ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, computed, contentChildren, effect, model, untracked } from '@angular/core';\r\nimport { FktIconComponent } from 'frakton-ng/icon';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { MarkUsed } from 'frakton-ng/internal/utils';\r\nimport { FktTabComponent } from './tab/fkt-tab.component';\r\n\r\n@Component({\r\n\tselector: 'fkt-tabs-list',\r\n\timports: [\r\n\t\tFktIconComponent,\r\n\t\tNgTemplateOutlet\r\n\t],\r\n\ttemplateUrl: './fkt-tabs-list.component.html',\r\n\tstyleUrl: './fkt-tabs-list.component.scss'\r\n})\r\nexport class FktTabsListComponent {\r\n\ttabs = contentChildren(FktTabComponent);\r\n\tactiveTab = model<string>();\r\n\r\n\tprotected activeTabComponent = computed(() => {\r\n\t\tconst activeTab = this.activeTab();\r\n\r\n\t\tif (!activeTab) return null;\r\n\r\n\t\treturn this.tabs().find(tab => tab.key()===activeTab) ?? null;\r\n\t});\r\n\r\n\t@MarkUsed()\r\n\tprotected selectFirstTab = effect(() => {\r\n\t\tconst tabs = this.tabs();\r\n\t\tconst activeTab = this.activeTab();\r\n\r\n\t\tuntracked(() => {\r\n\t\t\tif (activeTab) return;\r\n\r\n\t\t\tif (!tabs.length) return;\r\n\r\n\t\t\tconst firstTab = tabs[0];\r\n\r\n\t\t\tthis.activeTab.set(firstTab.key());\r\n\t\t});\r\n\t});\r\n\r\n\t@MarkUsed()\r\n\tprotected verifyUnique = effect(() => {\r\n\t\tconst tabs = this.tabs();\r\n\r\n\t\tuntracked(() => {\r\n\t\t\tconst seen = new Set<string>();\r\n\t\t\tfor (const item of tabs) {\r\n\t\t\t\tif (seen.has(item.key())) {\r\n\t\t\t\t\tthrow new Error(`Duplicate tab key: ${item.key()}`);\r\n\t\t\t\t}\r\n\t\t\t\tseen.add(item.key());\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t});\r\n\r\n\tselectTab(key: string) {\r\n\t\tthis.activeTab.set(key);\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t@for (tab of tabs(); track tab.key()) {\r\n\t\t<div\r\n\t\t\t(click)=\"selectTab(tab.key())\"\r\n\t\t\tclass=\"container__tab\"\r\n\t\t\t[class.container__tab--active]=\"tab.key() === activeTab()\"\r\n\t\t>\r\n\t\t\t@if (tab.icon()) {\r\n\t\t\t\t<fkt-icon [name]=\"tab.icon()!\"/>\r\n\t\t\t}\r\n\r\n\t\t\t<p class=\"m-0\">{{ tab.label() }}</p>\r\n\r\n\t\t</div>\r\n\t}\r\n</div>\r\n\r\n<div class=\"content\">\r\n\t@if (activeTabComponent()) {\r\n\t\t<ng-container [ngTemplateOutlet]=\"activeTabComponent()?.template()\"/>\r\n\t}\r\n</div>\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}