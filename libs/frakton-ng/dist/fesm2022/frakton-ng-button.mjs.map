{"version":3,"file":"frakton-ng-button.mjs","sources":["../../button/src/fkt-button.component.ts","../../button/src/fkt-button.component.html","../../button/src/fkt-button.types.ts","../../button/src/frakton-ng-button.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, computed, input, } from '@angular/core';\r\nimport { FktButtonTheme, FktButtonVariant } from './fkt-button.types';\r\nimport { FktIconComponent, FktIconName } from 'frakton-ng/icon';\r\nimport { FktColor } from 'frakton-ng/core';\r\n\r\n@Component({\r\n\tselector: 'fkt-button',\r\n\ttemplateUrl: './fkt-button.component.html',\r\n\tstyleUrl: './fkt-button.component.scss',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\timports: [FktIconComponent],\r\n})\r\nexport class FktButtonComponent {\r\n\tloading = input(false);\r\n\tdisabled = input(false);\r\n\ttext = input('');\r\n\tloadingText = input('');\r\n\tcolor = input<FktColor>('primary');\r\n\ttheme = input<FktButtonTheme>('raised');\r\n\tvariant = input<FktButtonVariant>('rounded');\r\n\ticon = input<FktIconName>();\r\n\ticonPosition = input<'left' | 'right'>('right');\r\n\r\n\tprotected classes = computed(() => {\r\n\t\tlet classes = '';\r\n\r\n\t\tclasses += `theme-${this.theme()}`;\r\n\t\tclasses += ` color-${this.color()}`;\r\n\r\n\t\tif (this.variant())\r\n\t\t\tclasses += ` variant-${this.variant()}`;\r\n\r\n\t\tif (!this.text())\r\n\t\t\tclasses += ` icon-only`;\r\n\r\n\t\treturn classes;\r\n\t})\r\n}\r\n","<button (click)=\"$event.preventDefault()\" [disabled]=\"disabled() || loading()\" [class]=\"classes()\">\r\n\t@if (loading()) {\r\n\t\t<div class=\"spinner\"></div>\r\n\t\t<p>{{ loadingText() || text() }}</p>\r\n\t} @else {\r\n\t\t<div\r\n\t\t\t[class.icon-left]=\"iconPosition() === 'left'\"\r\n\t\t\tclass=\"button-content\"\r\n\t\t>\r\n\t\t\t@let iconName = icon();\r\n\t\t\t@if (text()) {\r\n\t\t\t\t<p>{{ text() }}</p>\r\n\t\t\t}\r\n\t\t\t@if (iconName) {\r\n\t\t\t\t<fkt-icon [name]=\"iconName\"></fkt-icon>\r\n\t\t\t}\r\n\t\t</div>\r\n\t}\r\n</button>\r\n","import { FktComponentInputs, Prettify } from 'frakton-ng/internal/types';\r\nimport { FktButtonComponent } from './fkt-button.component';\r\n\r\nexport const fktButtonVariants = ['rounded', 'rect'];\r\nexport const fktButtonThemes = ['raised', 'stroked', 'basic'];\r\n\r\nexport type FktButtonVariant = typeof fktButtonVariants[number]\r\nexport type FktButtonTheme = typeof fktButtonThemes[number]\r\nexport type FktButtonAction<Context = any> = Prettify<Partial<FktComponentInputs<FktButtonComponent>> & {tooltip?: string; identifier: string; condition?: boolean; click?: (context: Context) => void}>;\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}