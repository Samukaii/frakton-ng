{"version":3,"file":"frakton-ng-forms.mjs","sources":["../../forms/src/validators/signal-validators.ts","../../forms/src/signal-form-array.ts","../../forms/src/signal-form-group.ts","../../forms/src/signal-form-control.ts","../../forms/src/signal-form-builder.ts","../../forms/src/signal-form-control.directive.ts","../../forms/src/form-control-suffix.directive.ts","../../forms/src/transformers/currency-transformer.ts","../../forms/src/transformers/date-transformer.ts","../../forms/src/transformers/hour-transformer.ts","../../forms/src/transformers/percent-transformer.ts","../../forms/src/frakton-ng-forms.ts"],"sourcesContent":["import { isNumber } from 'frakton-ng/internal/utils';\r\nimport { SignalValidatorFn } from '../types';\r\n\r\nexport const SignalValidators = {\r\n\trequired: () => options => {\r\n\t\tconst value = options.value;\r\n\r\n\t\tconst invalidConditions = [\r\n\t\t\tvalue === null,\r\n\t\t\ttypeof value === 'undefined',\r\n\t\t\tvalue === '',\r\n\t\t];\r\n\r\n\t\tif (invalidConditions.every(condition => !condition)) return null;\r\n\r\n\t\treturn {\r\n\t\t\trequired: true,\r\n\t\t};\r\n\t},\r\n\trequiredTrue: () => options => {\r\n\t\tconst value = options.value;\r\n\r\n\t\tif(value !== true)\r\n\t\t\treturn {\r\n\t\t\trequiredTrue: true,\r\n\t\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\tminLength: (length: number): SignalValidatorFn<any> => options => {\r\n\t\tconst value = options.value;\r\n\r\n\t\tif(typeof value !== \"string\")\r\n\t\t\treturn {\r\n\t\t\t\tcustom: {\r\n\t\t\t\t\tmessage: `\"${value}\" não é um texto`,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\treturn value.length >= length ? null : {\r\n\t\t\tcustom: {\r\n\t\t\t\tmessage: `O tamanho mínimo é ${length}`,\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tmaxLength: (length: number): SignalValidatorFn<any> => options => {\r\n\t\tconst value = options.value;\r\n\r\n\t\tif(typeof value !== \"string\")\r\n\t\t\treturn {\r\n\t\t\t\tcustom: {\r\n\t\t\t\t\tmessage: `\"${value}\" não é um texto`,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\treturn value.length <= length ? null : {\r\n\t\t\tcustom: {\r\n\t\t\t\tmessage: `O tamanho máximo é ${length}`,\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\temail: (): SignalValidatorFn<any> => options => {\r\n\t\tconst value = options.value;\r\n\r\n\t\tif (value === null || typeof value === 'undefined' || value === '') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n\t\tif (!emailRegex.test(value)) {\r\n\t\t\treturn {\r\n\t\t\t\temail: {\r\n\t\t\t\t\tmessage: 'E-mail inválido',\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\tmin:\r\n\t\t(minValue: number): SignalValidatorFn<any> =>\r\n\t\toptions => {\r\n\t\t\tconst value = options.value;\r\n\r\n\t\t\tif (!isNumber(value)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcustom: {\r\n\t\t\t\t\t\tmessage: `${value} não é um número`,\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (value < minValue)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcustom: {\r\n\t\t\t\t\t\tmessage: `O campo não pode ser menor que ${minValue}`,\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\tmax:\r\n\t\t(maxValue: number): SignalValidatorFn<any> =>\r\n\t\toptions => {\r\n\t\t\tconst value = options.value;\r\n\r\n\t\t\tif (!isNumber(value)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcustom: {\r\n\t\t\t\t\t\tmessage: `${value} não é um número`,\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (value > maxValue)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcustom: {\r\n\t\t\t\t\t\tmessage: `O campo não pode ser maior que ${maxValue}`,\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n} satisfies Record<\r\n\tstring,\r\n\t(...args: any[]) => SignalValidatorFn<any>\r\n>;\r\n","import { computed, signal, WritableSignal } from '@angular/core';\r\nimport { FormControlStatus, ValidationErrors } from '@angular/forms';\r\nimport { Prettify } from 'frakton-ng/internal/types';\r\nimport { SignalFormArrayControls, SignalFormArrayControlValue } from './types';\r\n\r\nexport class SignalFormArray<TControls extends SignalFormArrayControls<any>> {\r\n\treadonly #controls: WritableSignal<TControls>;\r\n\r\n\tcontrols = computed(() => this.#controls?.() ?? []);\r\n\r\n\tstatus = computed((): FormControlStatus => {\r\n\t\tconst valid = this.valid();\r\n\t\tconst disabled = this.disabled();\r\n\r\n\t\tif (disabled) return 'DISABLED';\r\n\r\n\t\treturn valid ? 'VALID' : 'INVALID';\r\n\t});\r\n\r\n\tdisabled = computed((): boolean => {\r\n\t\treturn this.#controls().every(control => control.disabled());\r\n\t});\r\n\r\n\tinvalid = computed((): boolean => {\r\n\t\treturn this.#controls().some(control => control.invalid());\r\n\t});\r\n\r\n\tvalid = computed((): boolean => {\r\n\t\treturn this.#controls().every(control => control.valid());\r\n\t});\r\n\r\n\terrors = computed(() => {\r\n\t\treturn this.getErrors();\r\n\t});\r\n\r\n\ttouched = computed((): boolean => {\r\n\t\treturn this.#controls().some(control => control.touched());\r\n\t});\r\n\r\n\tuntouched = computed((): boolean => {\r\n\t\treturn this.#controls().every(control => control.untouched());\r\n\t});\r\n\r\n\tpristine = computed((): boolean => {\r\n\t\treturn this.#controls().every(control => control.pristine());\r\n\t});\r\n\r\n\tdirty = computed((): boolean => {\r\n\t\treturn this.#controls().some(control => control.dirty());\r\n\t});\r\n\r\n\tvalue = computed((): Prettify<SignalFormArrayControlValue<TControls>> => {\r\n\t\treturn this.#controls().map(control => control.value()) as Prettify<\r\n\t\t\tSignalFormArrayControlValue<TControls>\r\n\t\t>;\r\n\t});\r\n\r\n\tconstructor(config: TControls) {\r\n\t\tthis.#controls = signal(config);\r\n\t}\r\n\r\n\tprivate getErrors() {\r\n\t\tlet result: ValidationErrors | null = null;\r\n\r\n\t\tthis.#controls().forEach((control, index) => {\r\n\t\t\tconst errors = control.errors() as ValidationErrors | null;\r\n\r\n\t\t\tif (!errors) return;\r\n\r\n\t\t\tresult = {\r\n\t\t\t\t...(result ?? {}),\r\n\t\t\t\t[index.toString()]: errors,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpatchValue(value: Partial<SignalFormArrayControlValue<TControls>>): void {\r\n\t\tthis.#controls().forEach((control, index) => {\r\n\t\t\tif (!value[index]) return;\r\n\r\n\t\t\tif (control instanceof SignalFormArray) {\r\n\t\t\t\tif (Array.isArray(value[index]))\r\n\t\t\t\t\tcontrol.patchValue(value[index]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.patchValue(value[index]);\r\n\t\t});\r\n\t}\r\n\r\n\tmarkAllAsTouched() {\r\n\t\tthis.#controls().forEach(control => {\r\n\t\t\tif ('markAllAsTouched' in control) {\r\n\t\t\t\tcontrol.markAllAsTouched();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcontrol.markAsTouched();\r\n\t\t});\r\n\t}\r\n\r\n\tmarkAllAsDirty() {\r\n\t\tthis.#controls().forEach(control => {\r\n\t\t\tif ('markAllAsDirty' in control) {\r\n\t\t\t\tcontrol.markAllAsDirty();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcontrol.markAsDirty();\r\n\t\t});\r\n\t}\r\n\r\n\tat(index: number) {\r\n\t\treturn this.#controls().at(index);\r\n\t}\r\n\r\n\tpush(control: TControls[number]) {\r\n\t\tconst controls = [...this.#controls()];\r\n\r\n\t\tcontrols.push(control);\r\n\r\n\t\tthis.#controls.set(controls as any);\r\n\t}\r\n\r\n\tinsert(index: number, control: TControls[number]) {\r\n\t\tconst controls = [...this.#controls()];\r\n\r\n\t\tcontrols.splice(index + 1, 0, control as TControls[number]);\r\n\r\n\t\tthis.#controls.set(controls as any);\r\n\t}\r\n\r\n\tremoveAt(index: number) {\r\n\t\tconst controls = [...this.#controls()];\r\n\r\n\t\tcontrols.splice(index, 1);\r\n\r\n\t\tthis.#controls.set(controls as any);\r\n\t}\r\n\r\n\treset(value: SignalFormArrayControlValue<TControls> = []) {\r\n\t\tthis.#controls().forEach((control, index) => {\r\n\t\t\tif (!value[index]) return;\r\n\r\n\t\t\tif (control instanceof SignalFormArray) {\r\n\t\t\t\tif (Array.isArray(value[index]))\r\n\t\t\t\t\tcontrol.reset(value[index]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.reset(value[index]);\r\n\t\t});\r\n\t}\r\n\r\n\tdisable() {\r\n\t\tthis.#controls().forEach(control => {\r\n\t\t\tcontrol.disable();\r\n\t\t});\r\n\t}\r\n\r\n\tenable() {\r\n\t\tthis.#controls().forEach(control => {\r\n\t\t\tcontrol.enable();\r\n\t\t});\r\n\t}\r\n}\r\n","import { computed } from '@angular/core';\r\nimport { FormControlStatus, ValidationErrors } from '@angular/forms';\r\nimport { Generic, Prettify } from 'frakton-ng/internal/types';\r\nimport { SignalFormGroupControls, SignalFormGroupValue } from './types';\r\nimport { SignalFormArray } from './signal-form-array';\r\n\r\nexport class SignalFormGroup<\r\n\tTControls extends SignalFormGroupControls<Generic>,\r\n> {\r\n\treadonly controls!: TControls;\r\n\r\n\tprivate controlsList: TControls[keyof TControls][];\r\n\r\n\tstatus = computed((): FormControlStatus => {\r\n\t\tconst valid = this.valid();\r\n\t\tconst disabled = this.disabled();\r\n\r\n\t\tif (disabled) return 'DISABLED';\r\n\r\n\t\treturn valid ? 'VALID' : 'INVALID';\r\n\t});\r\n\r\n\tdisabled = computed((): boolean => {\r\n\t\treturn this.controlsList.every(control => control.disabled());\r\n\t});\r\n\r\n\tinvalid = computed((): boolean => {\r\n\t\treturn this.controlsList.some(control => control.invalid());\r\n\t});\r\n\r\n\tvalid = computed((): boolean => {\r\n\t\treturn this.controlsList.every(control => control.valid());\r\n\t});\r\n\r\n\terrors = computed(() => {\r\n\t\treturn this.getErrors();\r\n\t});\r\n\r\n\ttouched = computed((): boolean => {\r\n\t\treturn this.controlsList.some(control => control.touched());\r\n\t});\r\n\r\n\tuntouched = computed((): boolean => {\r\n\t\treturn this.controlsList.every(control => control.untouched());\r\n\t});\r\n\r\n\tpristine = computed((): boolean => {\r\n\t\treturn this.controlsList.every(control => control.pristine());\r\n\t});\r\n\r\n\tdirty = computed((): boolean => {\r\n\t\treturn this.controlsList.some(control => control.dirty());\r\n\t});\r\n\r\n\tvalue = computed(() => {\r\n\t\tconst result = {} as TControls;\r\n\r\n\t\tfor (const key in this.controls) {\r\n\t\t\tconst controlKey = key as keyof TControls;\r\n\t\t\tconst control = this.controls[controlKey];\r\n\t\t\tresult[controlKey] = control.value();\r\n\t\t}\r\n\t\treturn result as unknown as Prettify<SignalFormGroupValue<SignalFormGroup<TControls>>>;\r\n\t});\r\n\r\n\tconstructor(config: TControls) {\r\n\t\tthis.controls = config;\r\n\t\tthis.controlsList = Object.values(\r\n\t\t\tconfig,\r\n\t\t) as TControls[keyof TControls][];\r\n\t}\r\n\r\n\tprivate getErrors() {\r\n\t\tlet result: ValidationErrors | null = null;\r\n\r\n\t\tfor (const key in this.controls) {\r\n\t\t\tconst controlKey = key as keyof typeof this.controls;\r\n\t\t\tconst control = this.controls[controlKey];\r\n\r\n\t\t\tconst errors = control.errors() as ValidationErrors | null;\r\n\r\n\t\t\tif (!errors) continue;\r\n\r\n\t\t\tresult = {\r\n\t\t\t\t...(result ?? {}),\r\n\t\t\t\t[controlKey]: errors,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpatchValue(value: Partial<Prettify<SignalFormGroupValue<SignalFormGroup<TControls>>>>): void {\r\n\t\tfor (const valueKey in value) {\r\n\t\t\tconst controlValue = value[valueKey];\r\n\t\t\tconst control = this.controls[valueKey];\r\n\r\n\t\t\tif (!control) continue;\r\n\r\n\t\t\tif (!controlValue) return;\r\n\r\n\t\t\tif (control instanceof SignalFormArray) {\r\n\t\t\t\tif (Array.isArray(controlValue))\r\n\t\t\t\t\tcontrol.patchValue(controlValue);\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.patchValue(controlValue);\r\n\t\t}\r\n\t}\r\n\r\n\tmarkAllAsTouched() {\r\n\t\tthis.controlsList.forEach(control => {\r\n\t\t\tif ('markAllAsTouched' in control) {\r\n\t\t\t\tcontrol.markAllAsTouched();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcontrol.markAsTouched();\r\n\t\t});\r\n\t}\r\n\r\n\tmarkAllAsDirty() {\r\n\t\tthis.controlsList.forEach(control => {\r\n\t\t\tif ('markAllAsDirty' in control) {\r\n\t\t\t\tcontrol.markAllAsDirty();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcontrol.markAsDirty();\r\n\t\t});\r\n\t}\r\n\r\n\treset(value: Partial<Prettify<SignalFormGroupValue<SignalFormGroup<TControls>>>> = {}) {\r\n\t\tconsole.log(value);\r\n\t\tfor (const valueKey in this.controls) {\r\n\t\t\tconst controlValue = value[valueKey];\r\n\t\t\tconst control = this.controls[valueKey];\r\n\r\n\t\t\tif (!control) continue;\r\n\r\n\t\t\tif (control instanceof SignalFormArray) {\r\n\t\t\t\tif (Array.isArray(controlValue))\r\n\t\t\t\t\tcontrol.reset(controlValue);\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.reset(controlValue);\r\n\t\t}\r\n\t}\r\n\r\n\tdisable() {\r\n\t\tthis.controlsList.forEach(control => {\r\n\t\t\tcontrol.disable();\r\n\t\t});\r\n\t}\r\n\r\n\tenable() {\r\n\t\tthis.controlsList.forEach(control => {\r\n\t\t\tcontrol.enable();\r\n\t\t});\r\n\t}\r\n\r\n\taddControl(name: keyof TControls, control: TControls[keyof TControls]) {\r\n\t\tthis.controls[name] = control;\r\n\t\tthis.controlsList = Object.values(\r\n\t\t\tthis.controls,\r\n\t\t) as TControls[keyof TControls][];\r\n\t}\r\n}\r\n","import { computed, signal, untracked, WritableSignal } from '@angular/core';\r\nimport { FormControlStatus, ValidationErrors } from '@angular/forms';\r\nimport { SignalFormControlOptions, SignalUpdateValueOptions, SignalValidatorFn } from './types';\r\n\r\nconst isTwoWaySetValue = (\r\n\tvalue: unknown,\r\n): value is { modelValue: any; viewValue: string } => {\r\n\tif (typeof value !== 'object') return false;\r\n\tif (value === null) return false;\r\n\r\n\tconst conditions = ['modelValue' in value, 'viewValue' in value];\r\n\r\n\treturn conditions.every(Boolean);\r\n};\r\n\r\nexport class SignalFormControl<T> {\r\n\treadonly #state!: WritableSignal<{\r\n\t\tmodelValue: T;\r\n\t\tviewValue: any;\r\n\t}>;\r\n\treadonly #disabled = signal(false);\r\n\treadonly #dirty = signal(false);\r\n\treadonly #touched = signal(false);\r\n\r\n\tprivate validations = signal<SignalValidatorFn<T>[]>([]);\r\n\r\n\tvalue = computed(() => this.#state?.().modelValue!);\r\n\tviewValue = computed(() => this.#state?.().viewValue!);\r\n\tdisabled = computed(() => this.#disabled());\r\n\ttouched = computed(() => this.#touched());\r\n\tdirty = computed(() => this.#dirty());\r\n\tpristine = computed(() => !this.#dirty());\r\n\tuntouched = computed(() => !this.#touched());\r\n\r\n\tstatus = computed((): FormControlStatus => {\r\n\t\tconst valid = this.valid();\r\n\t\tconst disabled = this.disabled();\r\n\r\n\t\tif (disabled) return 'DISABLED';\r\n\r\n\t\treturn valid ? 'VALID' : 'INVALID';\r\n\t});\r\n\r\n\terrors = computed(() => {\r\n\t\tlet errors: ValidationErrors | null = null;\r\n\r\n\t\tconst validations = this.validations();\r\n\t\tconst value = this.value();\r\n\r\n\t\tuntracked(() => {\r\n\t\t\tvalidations.forEach(validation => {\r\n\t\t\t\tconst result = validation({ value });\r\n\r\n\t\t\t\tif (!result) return;\r\n\r\n\t\t\t\terrors = {\r\n\t\t\t\t\t...result,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn errors;\r\n\t});\r\n\r\n\tinvalid = computed(() => !!this.errors(), { equal: (a, b) => a === b });\r\n\r\n\tvalid = computed(() => !this.invalid());\r\n\r\n\tconstructor(\r\n\t\tpublic initialValue: T,\r\n\t\toptions?: SignalFormControlOptions<T>,\r\n\t) {\r\n\t\tthis.validations.set(options?.validators ?? []);\r\n\r\n\t\tthis.#state = signal({\r\n\t\t\tmodelValue: initialValue,\r\n\t\t\tviewValue: initialValue,\r\n\t\t});\r\n\t}\r\n\r\n\tsetValue(\r\n\t\tvalue: T | { modelValue: any; viewValue: any },\r\n\t\t_?: SignalUpdateValueOptions,\r\n\t): void {\r\n\t\tif (isTwoWaySetValue(value)) {\r\n\t\t\tthis.#state.update(currentState => ({\r\n\t\t\t\t...currentState,\r\n\t\t\t\tmodelValue: value.modelValue,\r\n\t\t\t\tviewValue: value.viewValue,\r\n\t\t\t}));\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.#state.update(currentState => ({\r\n\t\t\t...currentState,\r\n\t\t\tmodelValue: value as T,\r\n\t\t\tviewValue: value,\r\n\t\t}));\r\n\t}\r\n\r\n\treset(value?: T) {\r\n\t\tthis.setValue(value ?? this.initialValue)\r\n\t}\r\n\r\n\tdisable() {\r\n\t\tthis.#disabled.set(true);\r\n\t}\r\n\r\n\tenable() {\r\n\t\tthis.#disabled.set(false);\r\n\t}\r\n\r\n\tmarkAsTouched() {\r\n\t\tthis.#touched.set(true);\r\n\t}\r\n\r\n\tmarkAsDirty() {\r\n\t\tthis.#dirty.set(true);\r\n\t}\r\n\r\n\tmarkAsUntouched() {\r\n\t\tthis.#touched.set(false);\r\n\t}\r\n\r\n\tmarkAsPristine() {\r\n\t\tthis.#dirty.set(false);\r\n\t}\r\n\r\n\tpatchValue(value: T) {\r\n\t\tthis.setValue(value);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\nimport { Generic, Prettify } from 'frakton-ng/internal/types';\r\nimport {\r\n\tArrayBuilderConfigToSignalFormArray,\r\n\tFormBuilderConfigToSignalFormGroup,\r\n\tInterfaceToFormConfig,\r\n\tSignalFormArrayBuilderConfig,\r\n\tSignalFormArrayControls,\r\n\tSignalFormControlBuilderConfig,\r\n\tSignalFormControlOptions,\r\n\tSignalFormGroupBuilderConfig,\r\n\tTypeToSignalFormGroupControls\r\n} from './types';\r\nimport { SignalFormGroup } from './signal-form-group';\r\nimport { SignalFormArray } from './signal-form-array';\r\nimport { SignalFormControl } from './signal-form-control';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class SignalFormBuilder {\r\n\tgroup<T extends SignalFormGroupBuilderConfig<any>>(config: T) {\r\n\t\tconst controls: Generic = {};\r\n\r\n\t\tObject.entries(config).forEach(([key, value]) => {\r\n\t\t\tconst controlConfig = value;\r\n\t\t\tconst controlKey = key as keyof typeof controls;\r\n\r\n\t\t\tif (value instanceof SignalFormGroup)\r\n\t\t\t\tcontrols[controlKey] = controlConfig;\r\n\t\t\telse if (value instanceof SignalFormArray)\r\n\t\t\t\tcontrols[controlKey] = controlConfig;\r\n\t\t\telse if (value instanceof SignalFormControl)\r\n\t\t\t\tcontrols[controlKey] = controlConfig;\r\n\t\t\telse controls[controlKey] = this.control(controlConfig);\r\n\t\t});\r\n\r\n\t\treturn new SignalFormGroup(controls) as SignalFormGroup<\r\n\t\t\tFormBuilderConfigToSignalFormGroup<T>\r\n\t\t>;\r\n\t}\r\n\r\n\tarray<T extends SignalFormArrayBuilderConfig<any>>(config: T) {\r\n\t\tconst controls: SignalFormArrayControls<any> = [];\r\n\r\n\t\tconfig.forEach(control => {\r\n\t\t\tif (control instanceof SignalFormGroup) controls.push(control);\r\n\t\t\telse if (control instanceof SignalFormArray) controls.push(control);\r\n\t\t\telse if (control instanceof SignalFormControl)\r\n\t\t\t\tcontrols.push(control);\r\n\t\t\telse controls.push(this.control(control));\r\n\t\t});\r\n\r\n\t\treturn new SignalFormArray(controls) as SignalFormArray<\r\n\t\t\tArrayBuilderConfigToSignalFormArray<T>[]\r\n\t\t>;\r\n\t}\r\n\r\n\tstrictGroup<T extends Generic>(config: Prettify<InterfaceToFormConfig<T>>) {\r\n\t\treturn this.group(config) as unknown as SignalFormGroup<\r\n\t\t\tTypeToSignalFormGroupControls<T>\r\n\t\t>;\r\n\t}\r\n\r\n\tcontrol<T>(config: SignalFormControlBuilderConfig<T>) {\r\n\t\tlet options: SignalFormControlOptions<T> | undefined;\r\n\t\tlet initialValue: T;\r\n\r\n\t\tif (Array.isArray(config) && config.length === 2) {\r\n\t\t\tinitialValue = config[0];\r\n\t\t\tconst controlConfig = config[1];\r\n\r\n\t\t\tif (Array.isArray(controlConfig)) {\r\n\t\t\t\tcontrolConfig.forEach(validator => {\r\n\t\t\t\t\tif (typeof validator !== 'function')\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t`Invalid control config: must be a function, got ${validator}`,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\t\toptions = {\r\n\t\t\t\t\tvalidators: controlConfig,\r\n\t\t\t\t};\r\n\t\t\t} else if (typeof controlConfig === 'function') {\r\n\t\t\t\toptions = {\r\n\t\t\t\t\tvalidators: [controlConfig],\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\toptions = controlConfig;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinitialValue = config as T;\r\n\t\t}\r\n\r\n\t\treturn new SignalFormControl<T>(initialValue, options);\r\n\t}\r\n}\r\n","import {\r\n\tDirective,\r\n\teffect,\r\n\tElementRef,\r\n\tinject,\r\n\tinput,\r\n\tlinkedSignal,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tuntracked,\r\n} from '@angular/core';\r\nimport { MarkUsed } from 'frakton-ng/internal/utils';\r\nimport { SignalFormControlTransformer } from './types';\r\nimport { SignalFormControl } from './signal-form-control';\r\n\r\n@Directive({\r\n\tselector: 'input[signalFormControl],textarea[signalFormControl]',\r\n\thost: {\r\n\t\t'[disabled]': 'signalFormControl().disabled()'\r\n\t}\r\n})\r\nexport class SignalFormControlDirective<T> implements OnInit, OnDestroy {\r\n\tsignalFormControl = input.required<SignalFormControl<T>>();\r\n\ttransformer = input<SignalFormControlTransformer>();\r\n\tupdateOn = input<'blur' | 'focus'>('blur');\r\n\r\n\tprivate elementRef = inject(ElementRef);\r\n\tprivate element = this.elementRef.nativeElement as HTMLInputElement;\r\n\r\n\tprivate cursorPosition: number | null = null;\r\n\tviewValue = linkedSignal<any>(() => this.signalFormControl().viewValue(), {\r\n\t\tequal: () => false,\r\n\t});\r\n\r\n\t@MarkUsed()\r\n\tprotected updateValue = effect(() => {\r\n\t\tthis.viewValue();\r\n\t\tthis.transformer();\r\n\r\n\t\tuntracked(() => {\r\n\t\t\tconst viewValue = this.getViewValue();\r\n\r\n\t\t\tif (this.element.value === viewValue) return;\r\n\t\t\tif (typeof viewValue !== \"string\" && typeof viewValue !== \"boolean\" && typeof viewValue !== \"number\") return;\r\n\r\n\t\t\tif (this.element.type === 'checkbox') {\r\n\t\t\t\tthis.element.checked = !!viewValue;\r\n\t\t\t\tconsole.log(viewValue)\r\n\r\n\t\t\t} else this.element.value = viewValue.toString();\r\n\r\n\t\t\tif (this.cursorPosition === null) return;\r\n\t\t\tthis.element.setSelectionRange(\r\n\t\t\t\tthis.cursorPosition,\r\n\t\t\t\tthis.cursorPosition,\r\n\t\t\t);\r\n\t\t});\r\n\t});\r\n\r\n\t@MarkUsed()\r\n\tprotected updateTransformer = effect(() => {\r\n\t\tconst transformer = this.transformer();\r\n\r\n\t\tif (transformer) this.onInput();\r\n\t});\r\n\r\n\tprivate onInput = () => {\r\n\t\tconst transformer = this.transformer();\r\n\t\tconst elementValue =\r\n\t\t\tthis.element.type === 'checkbox'\r\n\t\t\t\t? this.element.checked\r\n\t\t\t\t: this.element.value;\r\n\r\n\t\tif (!!transformer) {\r\n\t\t\tconst result = transformer(elementValue);\r\n\t\t\tthis.cursorPosition = result.cursorPosition ?? null;\r\n\t\t\tthis.viewValue.set(result.viewValue);\r\n\r\n\t\t\tthis.signalFormControl().setValue(result, {\r\n\t\t\t\tsource: 'ui',\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.signalFormControl().setValue(elementValue as any, {\r\n\t\t\t\tsource: 'ui',\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.signalFormControl().markAsDirty();\r\n\t};\r\n\r\n\tprivate getViewValue() {\r\n\t\tconst originalViewValue = this.viewValue();\r\n\t\tconst transformer = this.transformer();\r\n\r\n\t\tif (transformer) return transformer(originalViewValue).viewValue;\r\n\r\n\t\treturn originalViewValue;\r\n\t}\r\n\r\n\tprivate onKeyDown = () => {\r\n\t};\r\n\r\n\tprivate markAsTouched = () => {\r\n\t\tthis.signalFormControl().markAsTouched();\r\n\t};\r\n\r\n\tngOnInit() {\r\n\t\tthis.element.addEventListener('input', this.onInput);\r\n\t\tthis.element.addEventListener('keydown', this.onKeyDown);\r\n\t\tthis.element.addEventListener(this.updateOn(), this.markAsTouched);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.element.removeEventListener('input', this.onInput);\r\n\t\tthis.element.removeEventListener(this.updateOn(), this.markAsTouched);\r\n\t\tthis.element.removeEventListener('keydown', this.onKeyDown);\r\n\t}\r\n}\r\n","import { Directive, inject, TemplateRef } from '@angular/core';\r\nimport { MarkUsed } from 'frakton-ng/internal/utils';\r\n\r\n@Directive({\r\n  selector: '[fktFormControlSuffix]'\r\n})\r\nexport class FormControlSuffixDirective {\r\n\t@MarkUsed()\r\n\ttemplateRef = inject(TemplateRef);\r\n}\r\n","import { SignalFormControlTransformer } from '../types';\r\n\r\nexport const currencyTransformer: SignalFormControlTransformer = value => {\r\n\tconst raw =\r\n\t\ttypeof value === 'string' || typeof value === 'number'\r\n\t\t\t? value.toString()\r\n\t\t\t: '0';\r\n\r\n\tconst clean = raw\r\n\t\t.replace('R$', '')\r\n\t\t.replace(/\\./g, '')\r\n\t\t.replace(',', '')\r\n\t\t.trim();\r\n\r\n\tlet bigIntValue: bigint;\r\n\ttry {\r\n\t\tbigIntValue = BigInt(clean);\r\n\t} catch {\r\n\t\tbigIntValue = BigInt(0);\r\n\t}\r\n\r\n\tconst asNumber = Number(bigIntValue) / 100;\r\n\r\n\tconst viewValue = asNumber.toLocaleString('pt-BR', {\r\n\t\tstyle: 'currency',\r\n\t\tcurrency: 'BRL',\r\n\t});\r\n\r\n\treturn { modelValue: bigIntValue.toString(), viewValue: viewValue };\r\n};\r\n","import { clampNumber, isIsoDateString } from 'frakton-ng/internal/utils';\r\nimport { SignalFormControlTransformer } from '../types';\r\n\r\n\r\nconst transformIso = (value: string | Date) => {\r\n\tconst date = new Date(value);\r\n\tconst day = date.getDate().toString().padStart(2, '0');\r\n\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n\tconst year = date.getFullYear().toString();\r\n\r\n\treturn {\r\n\t\tviewValue: `${day}/${month}/${year}`,\r\n\t\tmodelValue: date.toISOString(),\r\n\t};\r\n};\r\n\r\nconst toNumber = (value: string) => {\r\n\treturn +value.replace(/\\D/g, '')\r\n}\r\n\r\nconst cleanDate = (value: string) => {\r\n\tlet clean = value.replace(/\\D/g, '');\r\n\r\n\tclean = clean.slice(0, 8);\r\n\r\n\treturn clean;\r\n};\r\n\r\nconst clampDay = (value: string) => {\r\n\treturn clampNumber(toNumber(value), 1, 31).toString();\r\n}\r\n\r\nconst clampDayByMonth = (value: string, month: string) => {\r\n\tconst dateMonth = toNumber(clampMonth(month)) - 1;\r\n\tconst date = new Date();\r\n\tdate.setMonth(dateMonth + 1);\r\n\tdate.setDate(0);\r\n\r\n\treturn clampNumber(toNumber(value), 1, date.getDate()).toString();\r\n}\r\n\r\n\r\nconst clampMonth = (value: string) => {\r\n\treturn clampNumber(toNumber(value), 1, 12).toString();\r\n}\r\n\r\nconst clampYear = (value: string) => {\r\n\tconst year = toNumber(value);\r\n\treturn clampNumber(year, 1, 9999).toString();\r\n};\r\n\r\n\r\nconst formatDate = (value: string) => {\r\n\tlet clean = cleanDate(value);\r\n\r\n\tconst chars = clean.split('');\r\n\r\n\tlet day = '';\r\n\tlet month = '';\r\n\tlet year = '';\r\n\r\n\tchars.forEach((char, index) => {\r\n\t\tif (index === 0) {\r\n\t\t\tday += char;\r\n\t\t\tconst dayNumber = toNumber(day);\r\n\r\n\t\t\tif (dayNumber > 3) day = '0' + dayNumber;\r\n\t\t}\r\n\r\n\t\tif (index === 1) {\r\n\t\t\tday += char;\r\n\t\t\tday = clampDay(day);\r\n\r\n\t\t\tday = day.padStart(2, '0');\r\n\t\t}\r\n\r\n\t\tif (index === 2) {\r\n\t\t\tmonth = `/${char}`;\r\n\t\t\tconst monthNumber = +month.replace(/\\D/g, '');\r\n\r\n\t\t\tif (monthNumber > 1) month = '/0' + monthNumber;\r\n\t\t}\r\n\r\n\t\tif (index === 3) {\r\n\t\t\tmonth += char;\r\n\t\t\tmonth = clampMonth(month).toString();\r\n\t\t\tmonth = month.padStart(2, '0');\r\n\t\t\tmonth = `/${month}`;\r\n\r\n\t\t\tday = clampDayByMonth(day, month);\r\n\t\t\tday = day.padStart(2, '0');\r\n\t\t}\r\n\r\n\t\tif (index === 4) year = `/${char}`;\r\n\r\n\t\tif (index > 4) year += char;\r\n\r\n\t\tif(index === 7)\r\n\t\t\tyear = `/${clampYear(year).padStart(4, '0')}`;\r\n\t});\r\n\r\n\treturn [day, month, year].join('');\r\n};\r\n\r\n\r\nexport const dateTransformer: SignalFormControlTransformer = value => {\r\n\tif (isIsoDateString(value) || value instanceof Date)\r\n\t\treturn transformIso(value);\r\n\r\n\tif (typeof value !== 'string') return { viewValue: '', modelValue: null };\r\n\r\n\tconst viewValue = formatDate(value);\r\n\tconst [modelDay, modelMonth, modelYear] = viewValue.split('/');\r\n\r\n\tlet modelValue = null;\r\n\r\n\tif (viewValue.length === 10) {\r\n\t\tmodelValue = new Date(\r\n\t\t\t+modelYear,\r\n\t\t\t+modelMonth - 1,\r\n\t\t\t+modelDay,\r\n\t\t).toISOString();\r\n\t}\r\n\r\n\treturn { viewValue, modelValue: modelValue };\r\n};\r\n","import { clampNumber } from 'frakton-ng/internal/utils';\r\nimport { SignalFormControlTransformer } from '../types';\r\n\r\n\r\nconst toNumber = (value: string) => {\r\n\treturn +value.replace(/\\D/g, '');\r\n};\r\n\r\nconst cleanHour = (value: string) => {\r\n\tlet clean = value.replace(/\\D/g, '');\r\n\r\n\tclean = clean.slice(0, 4);\r\n\r\n\treturn clean;\r\n};\r\n\r\nconst clampHour = (value: string) => {\r\n\treturn clampNumber(toNumber(value), 0, 24).toString();\r\n};\r\n\r\nconst clampMinutes = (value: string) => {\r\n\treturn clampNumber(toNumber(value), 0, 59).toString();\r\n};\r\n\r\nconst formatHour = (value: string) => {\r\n\tlet clean = cleanHour(value);\r\n\r\n\tconst chars = clean.split('');\r\n\r\n\tlet hours = '';\r\n\tlet minutes = '';\r\n\r\n\tchars.forEach((char, index) => {\r\n\t\tif (index === 0) {\r\n\t\t\thours += char;\r\n\t\t\tconst hoursNumber = toNumber(hours);\r\n\r\n\t\t\tif (hoursNumber > 2) hours = '0' + hoursNumber;\r\n\t\t}\r\n\r\n\t\tif (index === 1) {\r\n\t\t\thours += char;\r\n\t\t\thours = clampHour(hours);\r\n\r\n\t\t\thours = hours.padStart(2, '0');\r\n\t\t}\r\n\r\n\t\tif (index === 2) {\r\n\t\t\tminutes = `h${char}`;\r\n\t\t\tconst minutesNumber = toNumber(minutes);\r\n\r\n\t\t\tif (minutesNumber > 5) minutes = '/0' + minutesNumber;\r\n\t\t}\r\n\r\n\t\tif (index === 3) {\r\n\t\t\tminutes += char;\r\n\t\t\tminutes = clampMinutes(minutes).toString();\r\n\t\t\tminutes = minutes.padStart(2, '0');\r\n\t\t\tminutes = `h${minutes}`;\r\n\t\t}\r\n\t});\r\n\r\n\treturn [hours, minutes].join('');\r\n};\r\n\r\nexport const hourTransformer: SignalFormControlTransformer = value => {\r\n\tif (typeof value !== 'string') return { viewValue: '', modelValue: null };\r\n\r\n\tconst viewValue = formatHour(value);\r\n\r\n\tlet modelValue = null;\r\n\r\n\tif(viewValue.length === 5)\r\n\t\tmodelValue = viewValue;\r\n\r\n\treturn { viewValue, modelValue };\r\n};\r\n","import { SignalFormControlTransformer } from '../types';\r\n\r\nconst format = (raw: string, maxDecimals = 2) => {\r\n\tconst clean = raw\r\n\t\t.replace(/[^\\d.,]/g, '')\r\n\t\t.replace(',', '.')\r\n\t\t.trim();\r\n\r\n\tconst MAX_PERCENT_VALUE = '100';\r\n\tconst MAX_DIGITS_LESS_THAN_HUNDRED = 2;\r\n\tconst decimalChar = '.';\r\n\r\n\tconst hasDecimalChar = clean.includes(decimalChar);\r\n\r\n\tif (hasDecimalChar) {\r\n\t\tlet [base, ...decimals] = clean.split(decimalChar);\r\n\r\n\t\tif (base.includes(MAX_PERCENT_VALUE)) return MAX_PERCENT_VALUE;\r\n\t\telse base = base.slice(0, MAX_DIGITS_LESS_THAN_HUNDRED);\r\n\r\n\t\treturn `${base}.${(decimals.join('') || '0').slice(0, maxDecimals)}`;\r\n\t}\r\n\r\n\tif (clean.includes(MAX_PERCENT_VALUE)) return MAX_PERCENT_VALUE;\r\n\r\n\treturn clean.slice(0, MAX_DIGITS_LESS_THAN_HUNDRED);\r\n};\r\n\r\nexport const percentTransformer: SignalFormControlTransformer = value => {\r\n\tconst raw =\r\n\t\ttypeof value === 'string' || typeof value === 'number'\r\n\t\t\t? value.toString()\r\n\t\t\t: '0';\r\n\r\n\tlet clean = format(raw, 3);\r\n\r\n\tconst asNumber = +clean;\r\n\r\n\tlet formatted = asNumber.toString().replace('.', ',');\r\n\r\n\tif (clean.includes('.') && !formatted.includes(',')) {\r\n\t\tformatted += ',';\r\n\t}\r\n\r\n\tconst viewValue = formatted + '%';\r\n\r\n\treturn {\r\n\t\tmodelValue: +asNumber,\r\n\t\tviewValue: viewValue,\r\n\t\tcursorPosition: viewValue.length - 1,\r\n\t};\r\n};\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["toNumber"],"mappings":";;;;;AAGO,MAAM,gBAAgB,GAAG;AAC/B,IAAA,QAAQ,EAAE,MAAM,OAAO,IAAG;AACzB,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AAE3B,QAAA,MAAM,iBAAiB,GAAG;AACzB,YAAA,KAAK,KAAK,IAAI;YACd,OAAO,KAAK,KAAK,WAAW;AAC5B,YAAA,KAAK,KAAK,EAAE;SACZ;QAED,IAAI,iBAAiB,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC;AAAE,YAAA,OAAO,IAAI;QAEjE,OAAO;AACN,YAAA,QAAQ,EAAE,IAAI;SACd;IACF,CAAC;AACD,IAAA,YAAY,EAAE,MAAM,OAAO,IAAG;AAC7B,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;QAE3B,IAAG,KAAK,KAAK,IAAI;YAChB,OAAO;AACP,gBAAA,YAAY,EAAE,IAAI;aACjB;AAEF,QAAA,OAAO,IAAI;IACZ,CAAC;IACD,SAAS,EAAE,CAAC,MAAc,KAA6B,OAAO,IAAG;AAChE,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;QAE3B,IAAG,OAAO,KAAK,KAAK,QAAQ;YAC3B,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,CAAA,EAAI,KAAK,CAAA,gBAAA,CAAkB;AACpC;aACD;QAEF,OAAO,KAAK,CAAC,MAAM,IAAI,MAAM,GAAG,IAAI,GAAG;AACtC,YAAA,MAAM,EAAE;gBACP,OAAO,EAAE,CAAA,mBAAA,EAAsB,MAAM,CAAA,CAAE;AACvC;SACD;IACF,CAAC;IACD,SAAS,EAAE,CAAC,MAAc,KAA6B,OAAO,IAAG;AAChE,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;QAE3B,IAAG,OAAO,KAAK,KAAK,QAAQ;YAC3B,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,CAAA,EAAI,KAAK,CAAA,gBAAA,CAAkB;AACpC;aACD;QAEF,OAAO,KAAK,CAAC,MAAM,IAAI,MAAM,GAAG,IAAI,GAAG;AACtC,YAAA,MAAM,EAAE;gBACP,OAAO,EAAE,CAAA,mBAAA,EAAsB,MAAM,CAAA,CAAE;AACvC;SACD;IACF,CAAC;AACD,IAAA,KAAK,EAAE,MAA8B,OAAO,IAAG;AAC9C,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AAE3B,QAAA,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,EAAE,EAAE;AACnE,YAAA,OAAO,IAAI;QACZ;QAEA,MAAM,UAAU,GAAG,4BAA4B;QAE/C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC5B,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,OAAO,EAAE,iBAAiB;AAC1B;aACD;QACF;AAEA,QAAA,OAAO,IAAI;IACZ,CAAC;IACD,GAAG,EACF,CAAC,QAAgB,KACjB,OAAO,IAAG;AACT,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AAE3B,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACrB,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,EAAG,KAAK,CAAA,gBAAA,CAAkB;AACnC;aACD;QACF;QAEA,IAAI,KAAK,GAAG,QAAQ;YACnB,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,+BAAA,EAAkC,QAAQ,CAAA,CAAE;AACrD;aACD;AAEF,QAAA,OAAO,IAAI;IACZ,CAAC;IACF,GAAG,EACF,CAAC,QAAgB,KACjB,OAAO,IAAG;AACT,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AAE3B,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACrB,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,EAAG,KAAK,CAAA,gBAAA,CAAkB;AACnC;aACD;QACF;QAEA,IAAI,KAAK,GAAG,QAAQ;YACnB,OAAO;AACN,gBAAA,MAAM,EAAE;oBACP,OAAO,EAAE,CAAA,+BAAA,EAAkC,QAAQ,CAAA,CAAE;AACrD;aACD;AAEF,QAAA,OAAO,IAAI;IACZ,CAAC;;;MCtHU,eAAe,CAAA;AAClB,IAAA,SAAS;AAElB,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE,oDAAC;AAEnD,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAwB;AACzC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AAC1B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAEhC,QAAA,IAAI,QAAQ;AAAE,YAAA,OAAO,UAAU;QAE/B,OAAO,KAAK,GAAG,OAAO,GAAG,SAAS;AACnC,IAAA,CAAC,kDAAC;AAEF,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAc;AACjC,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC7D,IAAA,CAAC,oDAAC;AAEF,IAAA,OAAO,GAAG,QAAQ,CAAC,MAAc;AAChC,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;AAC3D,IAAA,CAAC,mDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAc;AAC9B,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AAC1D,IAAA,CAAC,iDAAC;AAEF,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAK;AACtB,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE;AACxB,IAAA,CAAC,kDAAC;AAEF,IAAA,OAAO,GAAG,QAAQ,CAAC,MAAc;AAChC,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;AAC3D,IAAA,CAAC,mDAAC;AAEF,IAAA,SAAS,GAAG,QAAQ,CAAC,MAAc;AAClC,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;AAC9D,IAAA,CAAC,qDAAC;AAEF,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAc;AACjC,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC7D,IAAA,CAAC,oDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAc;AAC9B,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AACzD,IAAA,CAAC,iDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAuD;AACvE,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAErD;AACF,IAAA,CAAC,iDAAC;AAEF,IAAA,WAAA,CAAY,MAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,qDAAC;IAChC;IAEQ,SAAS,GAAA;QAChB,IAAI,MAAM,GAA4B,IAAI;QAE1C,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;AAC3C,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAA6B;AAE1D,YAAA,IAAI,CAAC,MAAM;gBAAE;AAEb,YAAA,MAAM,GAAG;AACR,gBAAA,IAAI,MAAM,IAAI,EAAE,CAAC;AACjB,gBAAA,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,MAAM;aAC1B;AACF,QAAA,CAAC,CAAC;AAEF,QAAA,OAAO,MAAM;IACd;AAEA,IAAA,UAAU,CAAC,KAAsD,EAAA;QAChE,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;AAC3C,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAAE;AAEnB,YAAA,IAAI,OAAO,YAAY,eAAe,EAAE;gBACvC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC9B,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjC;YACD;YAEA,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACjC,QAAA,CAAC,CAAC;IACH;IAEA,gBAAgB,GAAA;QACf,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,OAAO,IAAG;AAClC,YAAA,IAAI,kBAAkB,IAAI,OAAO,EAAE;gBAClC,OAAO,CAAC,gBAAgB,EAAE;gBAC1B;YACD;YACA,OAAO,CAAC,aAAa,EAAE;AACxB,QAAA,CAAC,CAAC;IACH;IAEA,cAAc,GAAA;QACb,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,OAAO,IAAG;AAClC,YAAA,IAAI,gBAAgB,IAAI,OAAO,EAAE;gBAChC,OAAO,CAAC,cAAc,EAAE;gBACxB;YACD;YACA,OAAO,CAAC,WAAW,EAAE;AACtB,QAAA,CAAC,CAAC;IACH;AAEA,IAAA,EAAE,CAAC,KAAa,EAAA;QACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;IAClC;AAEA,IAAA,IAAI,CAAC,OAA0B,EAAA;QAC9B,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAEtC,QAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAEtB,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAe,CAAC;IACpC;IAEA,MAAM,CAAC,KAAa,EAAE,OAA0B,EAAA;QAC/C,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEtC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,OAA4B,CAAC;AAE3D,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAe,CAAC;IACpC;AAEA,IAAA,QAAQ,CAAC,KAAa,EAAA;QACrB,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAEtC,QAAA,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAEzB,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAe,CAAC;IACpC;IAEA,KAAK,CAAC,QAAgD,EAAE,EAAA;QACvD,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;AAC3C,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAAE;AAEnB,YAAA,IAAI,OAAO,YAAY,eAAe,EAAE;gBACvC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC9B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5B;YACD;YAEA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B,QAAA,CAAC,CAAC;IACH;IAEA,OAAO,GAAA;QACN,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,OAAO,IAAG;YAClC,OAAO,CAAC,OAAO,EAAE;AAClB,QAAA,CAAC,CAAC;IACH;IAEA,MAAM,GAAA;QACL,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,OAAO,IAAG;YAClC,OAAO,CAAC,MAAM,EAAE;AACjB,QAAA,CAAC,CAAC;IACH;AACA;;MC/JY,eAAe,CAAA;AAGlB,IAAA,QAAQ;AAET,IAAA,YAAY;AAEpB,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAwB;AACzC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AAC1B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAEhC,QAAA,IAAI,QAAQ;AAAE,YAAA,OAAO,UAAU;QAE/B,OAAO,KAAK,GAAG,OAAO,GAAG,SAAS;AACnC,IAAA,CAAC,kDAAC;AAEF,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAc;AACjC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC9D,IAAA,CAAC,oDAAC;AAEF,IAAA,OAAO,GAAG,QAAQ,CAAC,MAAc;AAChC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;AAC5D,IAAA,CAAC,mDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAc;AAC9B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AAC3D,IAAA,CAAC,iDAAC;AAEF,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAK;AACtB,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE;AACxB,IAAA,CAAC,kDAAC;AAEF,IAAA,OAAO,GAAG,QAAQ,CAAC,MAAc;AAChC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;AAC5D,IAAA,CAAC,mDAAC;AAEF,IAAA,SAAS,GAAG,QAAQ,CAAC,MAAc;AAClC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;AAC/D,IAAA,CAAC,qDAAC;AAEF,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAc;AACjC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC9D,IAAA,CAAC,oDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAc;AAC9B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AAC1D,IAAA,CAAC,iDAAC;AAEF,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAK;QACrB,MAAM,MAAM,GAAG,EAAe;AAE9B,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChC,MAAM,UAAU,GAAG,GAAsB;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACzC,MAAM,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE;QACrC;AACA,QAAA,OAAO,MAA+E;AACvF,IAAA,CAAC,iDAAC;AAEF,IAAA,WAAA,CAAY,MAAiB,EAAA;AAC5B,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM;QACtB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAChC,MAAM,CAC0B;IAClC;IAEQ,SAAS,GAAA;QAChB,IAAI,MAAM,GAA4B,IAAI;AAE1C,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChC,MAAM,UAAU,GAAG,GAAiC;YACpD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;AAEzC,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAA6B;AAE1D,YAAA,IAAI,CAAC,MAAM;gBAAE;AAEb,YAAA,MAAM,GAAG;AACR,gBAAA,IAAI,MAAM,IAAI,EAAE,CAAC;gBACjB,CAAC,UAAU,GAAG,MAAM;aACpB;QACF;AACA,QAAA,OAAO,MAAM;IACd;AAEA,IAAA,UAAU,CAAC,KAA0E,EAAA;AACpF,QAAA,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE;AAC7B,YAAA,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAEvC,YAAA,IAAI,CAAC,OAAO;gBAAE;AAEd,YAAA,IAAI,CAAC,YAAY;gBAAE;AAEnB,YAAA,IAAI,OAAO,YAAY,eAAe,EAAE;AACvC,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;AAC9B,oBAAA,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;gBAEjC;YACD;AAEA,YAAA,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;QACjC;IACD;IAEA,gBAAgB,GAAA;AACf,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAG;AACnC,YAAA,IAAI,kBAAkB,IAAI,OAAO,EAAE;gBAClC,OAAO,CAAC,gBAAgB,EAAE;gBAC1B;YACD;YACA,OAAO,CAAC,aAAa,EAAE;AACxB,QAAA,CAAC,CAAC;IACH;IAEA,cAAc,GAAA;AACb,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAG;AACnC,YAAA,IAAI,gBAAgB,IAAI,OAAO,EAAE;gBAChC,OAAO,CAAC,cAAc,EAAE;gBACxB;YACD;YACA,OAAO,CAAC,WAAW,EAAE;AACtB,QAAA,CAAC,CAAC;IACH;IAEA,KAAK,CAAC,QAA6E,EAAE,EAAA;AACpF,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;AAClB,QAAA,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AACrC,YAAA,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAEvC,YAAA,IAAI,CAAC,OAAO;gBAAE;AAEd,YAAA,IAAI,OAAO,YAAY,eAAe,EAAE;AACvC,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;AAC9B,oBAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;gBAE5B;YACD;AAEA,YAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;QAC5B;IACD;IAEA,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAG;YACnC,OAAO,CAAC,OAAO,EAAE;AAClB,QAAA,CAAC,CAAC;IACH;IAEA,MAAM,GAAA;AACL,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAG;YACnC,OAAO,CAAC,MAAM,EAAE;AACjB,QAAA,CAAC,CAAC;IACH;IAEA,UAAU,CAAC,IAAqB,EAAE,OAAmC,EAAA;AACpE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO;QAC7B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAChC,IAAI,CAAC,QAAQ,CACmB;IAClC;AACA;;ACpKD,MAAM,gBAAgB,GAAG,CACxB,KAAc,KACsC;IACpD,IAAI,OAAO,KAAK,KAAK,QAAQ;AAAE,QAAA,OAAO,KAAK;IAC3C,IAAI,KAAK,KAAK,IAAI;AAAE,QAAA,OAAO,KAAK;IAEhC,MAAM,UAAU,GAAG,CAAC,YAAY,IAAI,KAAK,EAAE,WAAW,IAAI,KAAK,CAAC;AAEhE,IAAA,OAAO,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC;AACjC,CAAC;MAEY,iBAAiB,CAAA;AAsDrB,IAAA,YAAA;AArDC,IAAA,MAAM;AAIN,IAAA,SAAS,GAAG,MAAM,CAAC,KAAK,qDAAC;AACzB,IAAA,MAAM,GAAG,MAAM,CAAC,KAAK,kDAAC;AACtB,IAAA,QAAQ,GAAG,MAAM,CAAC,KAAK,oDAAC;AAEzB,IAAA,WAAW,GAAG,MAAM,CAAyB,EAAE,uDAAC;AAExD,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,CAAC,UAAW,iDAAC;AACnD,IAAA,SAAS,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,CAAC,SAAU,qDAAC;IACtD,QAAQ,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IAC3C,OAAO,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IACzC,KAAK,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,OAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;AACrC,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;AACzC,IAAA,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,WAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;AAE5C,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAwB;AACzC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AAC1B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAEhC,QAAA,IAAI,QAAQ;AAAE,YAAA,OAAO,UAAU;QAE/B,OAAO,KAAK,GAAG,OAAO,GAAG,SAAS;AACnC,IAAA,CAAC,kDAAC;AAEF,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAK;QACtB,IAAI,MAAM,GAA4B,IAAI;AAE1C,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AACtC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;QAE1B,SAAS,CAAC,MAAK;AACd,YAAA,WAAW,CAAC,OAAO,CAAC,UAAU,IAAG;gBAChC,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC;AAEpC,gBAAA,IAAI,CAAC,MAAM;oBAAE;AAEb,gBAAA,MAAM,GAAG;AACR,oBAAA,GAAG,MAAM;iBACT;AACF,YAAA,CAAC,CAAC;AACH,QAAA,CAAC,CAAC;AAEF,QAAA,OAAO,MAAM;AACd,IAAA,CAAC,kDAAC;AAEF,IAAA,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAI,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAA1B,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAC;AAEvE,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,OAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IAEvC,WAAA,CACQ,YAAe,EACtB,OAAqC,EAAA;QAD9B,IAAA,CAAA,YAAY,GAAZ,YAAY;QAGnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC;AAE/C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACpB,YAAA,UAAU,EAAE,YAAY;AACxB,YAAA,SAAS,EAAE,YAAY;AACvB,SAAA,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,QAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IACH;IAEA,QAAQ,CACP,KAA8C,EAC9C,CAA4B,EAAA;AAE5B,QAAA,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,KAAK;AACnC,gBAAA,GAAG,YAAY;gBACf,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,SAAS,EAAE,KAAK,CAAC,SAAS;AAC1B,aAAA,CAAC,CAAC;YAEH;QACD;QAEA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,KAAK;AACnC,YAAA,GAAG,YAAY;AACf,YAAA,UAAU,EAAE,KAAU;AACtB,YAAA,SAAS,EAAE,KAAK;AAChB,SAAA,CAAC,CAAC;IACJ;AAEA,IAAA,KAAK,CAAC,KAAS,EAAA;QACd,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC;IAC1C;IAEA,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;IACzB;IAEA,MAAM,GAAA;AACL,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;IAC1B;IAEA,aAAa,GAAA;AACZ,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;IACxB;IAEA,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;IACtB;IAEA,eAAe,GAAA;AACd,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IACzB;IAEA,cAAc,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;IACvB;AAEA,IAAA,UAAU,CAAC,KAAQ,EAAA;AAClB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IACrB;AACA;;MC9GY,iBAAiB,CAAA;AAC7B,IAAA,KAAK,CAA8C,MAAS,EAAA;QAC3D,MAAM,QAAQ,GAAY,EAAE;AAE5B,QAAA,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAI;YAC/C,MAAM,aAAa,GAAG,KAAK;YAC3B,MAAM,UAAU,GAAG,GAA4B;YAE/C,IAAI,KAAK,YAAY,eAAe;AACnC,gBAAA,QAAQ,CAAC,UAAU,CAAC,GAAG,aAAa;iBAChC,IAAI,KAAK,YAAY,eAAe;AACxC,gBAAA,QAAQ,CAAC,UAAU,CAAC,GAAG,aAAa;iBAChC,IAAI,KAAK,YAAY,iBAAiB;AAC1C,gBAAA,QAAQ,CAAC,UAAU,CAAC,GAAG,aAAa;;gBAChC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AACxD,QAAA,CAAC,CAAC;AAEF,QAAA,OAAO,IAAI,eAAe,CAAC,QAAQ,CAElC;IACF;AAEA,IAAA,KAAK,CAA8C,MAAS,EAAA;QAC3D,MAAM,QAAQ,GAAiC,EAAE;AAEjD,QAAA,MAAM,CAAC,OAAO,CAAC,OAAO,IAAG;YACxB,IAAI,OAAO,YAAY,eAAe;AAAE,gBAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;iBACzD,IAAI,OAAO,YAAY,eAAe;AAAE,gBAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;iBAC9D,IAAI,OAAO,YAAY,iBAAiB;AAC5C,gBAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;;gBAClB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1C,QAAA,CAAC,CAAC;AAEF,QAAA,OAAO,IAAI,eAAe,CAAC,QAAQ,CAElC;IACF;AAEA,IAAA,WAAW,CAAoB,MAA0C,EAAA;AACxE,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAEvB;IACF;AAEA,IAAA,OAAO,CAAI,MAAyC,EAAA;AACnD,QAAA,IAAI,OAAgD;AACpD,QAAA,IAAI,YAAe;AAEnB,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACjD,YAAA,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC;AACxB,YAAA,MAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC;AAE/B,YAAA,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;AACjC,gBAAA,aAAa,CAAC,OAAO,CAAC,SAAS,IAAG;oBACjC,IAAI,OAAO,SAAS,KAAK,UAAU;AAClC,wBAAA,MAAM,IAAI,KAAK,CACd,mDAAmD,SAAS,CAAA,CAAE,CAC9D;AACH,gBAAA,CAAC,CAAC;AAEF,gBAAA,OAAO,GAAG;AACT,oBAAA,UAAU,EAAE,aAAa;iBACzB;YACF;AAAO,iBAAA,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;AAC/C,gBAAA,OAAO,GAAG;oBACT,UAAU,EAAE,CAAC,aAAa,CAAC;iBAC3B;YACF;iBAAO;gBACN,OAAO,GAAG,aAAa;YACxB;QACD;aAAO;YACN,YAAY,GAAG,MAAW;QAC3B;AAEA,QAAA,OAAO,IAAI,iBAAiB,CAAI,YAAY,EAAE,OAAO,CAAC;IACvD;uGA3EY,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAjB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFjB,MAAM,EAAA,CAAA;;2FAEN,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACX,oBAAA,UAAU,EAAE,MAAM;AAClB,iBAAA;;;MCAY,0BAA0B,CAAA;AACtC,IAAA,iBAAiB,GAAG,KAAK,CAAC,QAAQ,4DAAwB;IAC1D,WAAW,GAAG,KAAK,CAAA,IAAA,SAAA,GAAA,CAAA,SAAA,EAAA,EAAA,SAAA,EAAA,aAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAgC;AACnD,IAAA,QAAQ,GAAG,KAAK,CAAmB,MAAM,oDAAC;AAElC,IAAA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/B,IAAA,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAiC;IAE3D,cAAc,GAAkB,IAAI;AAC5C,IAAA,SAAS,GAAG,YAAY,CAAM,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,EAAE;AACzE,QAAA,KAAK,EAAE,MAAM,KAAK;AAClB,KAAA,CAAC;AAGQ,IAAA,WAAW,GAAG,MAAM,CAAC,MAAK;QACnC,IAAI,CAAC,SAAS,EAAE;QAChB,IAAI,CAAC,WAAW,EAAE;QAElB,SAAS,CAAC,MAAK;AACd,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;AAErC,YAAA,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS;gBAAE;AACtC,YAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ;gBAAE;YAEtG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;gBACrC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS;AAClC,gBAAA,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;YAEvB;;gBAAO,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE;AAEhD,YAAA,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI;gBAAE;AAClC,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAC7B,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,cAAc,CACnB;AACF,QAAA,CAAC,CAAC;AACH,IAAA,CAAC,uDAAC;AAGQ,IAAA,iBAAiB,GAAG,MAAM,CAAC,MAAK;AACzC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AAEtC,QAAA,IAAI,WAAW;YAAE,IAAI,CAAC,OAAO,EAAE;AAChC,IAAA,CAAC,6DAAC;IAEM,OAAO,GAAG,MAAK;AACtB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;QACtC,MAAM,YAAY,GACjB,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK;AACrB,cAAE,IAAI,CAAC,OAAO,CAAC;AACf,cAAE,IAAI,CAAC,OAAO,CAAC,KAAK;AAEtB,QAAA,IAAI,CAAC,CAAC,WAAW,EAAE;AAClB,YAAA,MAAM,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,IAAI;YACnD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AAEpC,YAAA,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;AACzC,gBAAA,MAAM,EAAE,IAAI;AACZ,aAAA,CAAC;QACH;aAAO;AACN,YAAA,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,YAAmB,EAAE;AACtD,gBAAA,MAAM,EAAE,IAAI;AACZ,aAAA,CAAC;QACH;AACA,QAAA,IAAI,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE;AACvC,IAAA,CAAC;IAEO,YAAY,GAAA;AACnB,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,EAAE;AAC1C,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AAEtC,QAAA,IAAI,WAAW;AAAE,YAAA,OAAO,WAAW,CAAC,iBAAiB,CAAC,CAAC,SAAS;AAEhE,QAAA,OAAO,iBAAiB;IACzB;IAEQ,SAAS,GAAG,MAAK;AACzB,IAAA,CAAC;IAEO,aAAa,GAAG,MAAK;AAC5B,QAAA,IAAI,CAAC,iBAAiB,EAAE,CAAC,aAAa,EAAE;AACzC,IAAA,CAAC;IAED,QAAQ,GAAA;QACP,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AACxD,QAAA,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;IACnE;IAEA,WAAW,GAAA;QACV,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;AACvD,QAAA,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;IAC5D;uGA9FY,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAA1B,0BAA0B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,sDAAA,EAAA,MAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA;;AAc5B,UAAA,CAAA;AADT,IAAA,QAAQ;AAuBN,CAAA,EAAA,0BAAA,CAAA,SAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;AAGO,UAAA,CAAA;AADT,IAAA,QAAQ;AAKN,CAAA,EAAA,0BAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;2FA3CS,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBANtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,sDAAsD;AAChE,oBAAA,IAAI,EAAE;AACL,wBAAA,YAAY,EAAE;AACd;AACD,iBAAA;AAeU,SAAA,CAAA,EAAA,cAAA,EAAA,EAAA,WAAW,MAyBX,iBAAiB,EAAA,EAAA,EAAA,EAAA,CAAA;;MCtDf,0BAA0B,CAAA;AAEtC,IAAA,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;uGAFrB,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAA1B,0BAA0B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA;;AAEtC,UAAA,CAAA;AADC,IAAA,QAAQ;AACyB,CAAA,EAAA,0BAAA,CAAA,SAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;2FAFtB,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAHtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE;AACX,iBAAA;8BAGA,WAAW,EAAA,EAAA,EAAA,EAAA,CAAA;;ACNL,MAAM,mBAAmB,GAAiC,KAAK,IAAG;IACxE,MAAM,GAAG,GACR,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK;AAC7C,UAAE,KAAK,CAAC,QAAQ;UACd,GAAG;IAEP,MAAM,KAAK,GAAG;AACZ,SAAA,OAAO,CAAC,IAAI,EAAE,EAAE;AAChB,SAAA,OAAO,CAAC,KAAK,EAAE,EAAE;AACjB,SAAA,OAAO,CAAC,GAAG,EAAE,EAAE;AACf,SAAA,IAAI,EAAE;AAER,IAAA,IAAI,WAAmB;AACvB,IAAA,IAAI;AACH,QAAA,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B;AAAE,IAAA,MAAM;AACP,QAAA,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC;IACxB;IAEA,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG;AAE1C,IAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,EAAE;AAClD,QAAA,KAAK,EAAE,UAAU;AACjB,QAAA,QAAQ,EAAE,KAAK;AACf,KAAA,CAAC;AAEF,IAAA,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE;AACpE;;ACzBA,MAAM,YAAY,GAAG,CAAC,KAAoB,KAAI;AAC7C,IAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC;AAC5B,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC/D,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE;IAE1C,OAAO;AACN,QAAA,SAAS,EAAE,CAAA,EAAG,GAAG,IAAI,KAAK,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE;AACpC,QAAA,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE;KAC9B;AACF,CAAC;AAED,MAAMA,UAAQ,GAAG,CAAC,KAAa,KAAI;IAClC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACjC,CAAC;AAED,MAAM,SAAS,GAAG,CAAC,KAAa,KAAI;IACnC,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEpC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAEzB,IAAA,OAAO,KAAK;AACb,CAAC;AAED,MAAM,QAAQ,GAAG,CAAC,KAAa,KAAI;AAClC,IAAA,OAAO,WAAW,CAACA,UAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;AACtD,CAAC;AAED,MAAM,eAAe,GAAG,CAAC,KAAa,EAAE,KAAa,KAAI;IACxD,MAAM,SAAS,GAAGA,UAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;AACjD,IAAA,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;AACvB,IAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5B,IAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAEf,IAAA,OAAO,WAAW,CAACA,UAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;AAClE,CAAC;AAGD,MAAM,UAAU,GAAG,CAAC,KAAa,KAAI;AACpC,IAAA,OAAO,WAAW,CAACA,UAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;AACtD,CAAC;AAED,MAAM,SAAS,GAAG,CAAC,KAAa,KAAI;AACnC,IAAA,MAAM,IAAI,GAAGA,UAAQ,CAAC,KAAK,CAAC;IAC5B,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE;AAC7C,CAAC;AAGD,MAAM,UAAU,GAAG,CAAC,KAAa,KAAI;AACpC,IAAA,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAE5B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;IAE7B,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,IAAI,GAAG,EAAE;IAEb,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;AAC7B,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,GAAG,IAAI,IAAI;AACX,YAAA,MAAM,SAAS,GAAGA,UAAQ,CAAC,GAAG,CAAC;YAE/B,IAAI,SAAS,GAAG,CAAC;AAAE,gBAAA,GAAG,GAAG,GAAG,GAAG,SAAS;QACzC;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,GAAG,IAAI,IAAI;AACX,YAAA,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YAEnB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC3B;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;AAChB,YAAA,KAAK,GAAG,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE;YAClB,MAAM,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;YAE7C,IAAI,WAAW,GAAG,CAAC;AAAE,gBAAA,KAAK,GAAG,IAAI,GAAG,WAAW;QAChD;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,KAAK,IAAI,IAAI;YACb,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;YACpC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC9B,YAAA,KAAK,GAAG,CAAA,CAAA,EAAI,KAAK,CAAA,CAAE;AAEnB,YAAA,GAAG,GAAG,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC;YACjC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC3B;QAEA,IAAI,KAAK,KAAK,CAAC;AAAE,YAAA,IAAI,GAAG,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE;QAElC,IAAI,KAAK,GAAG,CAAC;YAAE,IAAI,IAAI,IAAI;QAE3B,IAAG,KAAK,KAAK,CAAC;AACb,YAAA,IAAI,GAAG,CAAA,CAAA,EAAI,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AAC/C,IAAA,CAAC,CAAC;AAEF,IAAA,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACnC,CAAC;AAGM,MAAM,eAAe,GAAiC,KAAK,IAAG;AACpE,IAAA,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI;AAClD,QAAA,OAAO,YAAY,CAAC,KAAK,CAAC;IAE3B,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAEzE,IAAA,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;AACnC,IAAA,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;IAE9D,IAAI,UAAU,GAAG,IAAI;AAErB,IAAA,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,EAAE;AAC5B,QAAA,UAAU,GAAG,IAAI,IAAI,CACpB,CAAC,SAAS,EACV,CAAC,UAAU,GAAG,CAAC,EACf,CAAC,QAAQ,CACT,CAAC,WAAW,EAAE;IAChB;AAEA,IAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE;AAC7C;;ACzHA,MAAM,QAAQ,GAAG,CAAC,KAAa,KAAI;IAClC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACjC,CAAC;AAED,MAAM,SAAS,GAAG,CAAC,KAAa,KAAI;IACnC,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEpC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAEzB,IAAA,OAAO,KAAK;AACb,CAAC;AAED,MAAM,SAAS,GAAG,CAAC,KAAa,KAAI;AACnC,IAAA,OAAO,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;AACtD,CAAC;AAED,MAAM,YAAY,GAAG,CAAC,KAAa,KAAI;AACtC,IAAA,OAAO,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE;AACtD,CAAC;AAED,MAAM,UAAU,GAAG,CAAC,KAAa,KAAI;AACpC,IAAA,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAE5B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;IAE7B,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,OAAO,GAAG,EAAE;IAEhB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAI;AAC7B,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,KAAK,IAAI,IAAI;AACb,YAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;YAEnC,IAAI,WAAW,GAAG,CAAC;AAAE,gBAAA,KAAK,GAAG,GAAG,GAAG,WAAW;QAC/C;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,KAAK,IAAI,IAAI;AACb,YAAA,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAExB,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC/B;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;AAChB,YAAA,OAAO,GAAG,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE;AACpB,YAAA,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC;YAEvC,IAAI,aAAa,GAAG,CAAC;AAAE,gBAAA,OAAO,GAAG,IAAI,GAAG,aAAa;QACtD;AAEA,QAAA,IAAI,KAAK,KAAK,CAAC,EAAE;YAChB,OAAO,IAAI,IAAI;YACf,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;YAC1C,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAClC,YAAA,OAAO,GAAG,CAAA,CAAA,EAAI,OAAO,CAAA,CAAE;QACxB;AACD,IAAA,CAAC,CAAC;IAEF,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACjC,CAAC;AAEM,MAAM,eAAe,GAAiC,KAAK,IAAG;IACpE,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAEzE,IAAA,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;IAEnC,IAAI,UAAU,GAAG,IAAI;AAErB,IAAA,IAAG,SAAS,CAAC,MAAM,KAAK,CAAC;QACxB,UAAU,GAAG,SAAS;AAEvB,IAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE;AACjC;;AC1EA,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,WAAW,GAAG,CAAC,KAAI;IAC/C,MAAM,KAAK,GAAG;AACZ,SAAA,OAAO,CAAC,UAAU,EAAE,EAAE;AACtB,SAAA,OAAO,CAAC,GAAG,EAAE,GAAG;AAChB,SAAA,IAAI,EAAE;IAER,MAAM,iBAAiB,GAAG,KAAK;IAC/B,MAAM,4BAA4B,GAAG,CAAC;IACtC,MAAM,WAAW,GAAG,GAAG;IAEvB,MAAM,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;IAElD,IAAI,cAAc,EAAE;AACnB,QAAA,IAAI,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;AAElD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;AAAE,YAAA,OAAO,iBAAiB;;YACzD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,4BAA4B,CAAC;QAEvD,OAAO,CAAA,EAAG,IAAI,CAAA,CAAA,EAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAA,CAAE;IACrE;AAEA,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;AAAE,QAAA,OAAO,iBAAiB;IAE/D,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,4BAA4B,CAAC;AACpD,CAAC;AAEM,MAAM,kBAAkB,GAAiC,KAAK,IAAG;IACvE,MAAM,GAAG,GACR,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK;AAC7C,UAAE,KAAK,CAAC,QAAQ;UACd,GAAG;IAEP,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AAE1B,IAAA,MAAM,QAAQ,GAAG,CAAC,KAAK;AAEvB,IAAA,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AAErD,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACpD,SAAS,IAAI,GAAG;IACjB;AAEA,IAAA,MAAM,SAAS,GAAG,SAAS,GAAG,GAAG;IAEjC,OAAO;QACN,UAAU,EAAE,CAAC,QAAQ;AACrB,QAAA,SAAS,EAAE,SAAS;AACpB,QAAA,cAAc,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC;KACpC;AACF;;ACnDA;;AAEG;;;;"}