{"version":3,"file":"frakton-ng-calendar.mjs","sources":["../../calendar/src/selector/date/calendar-date-selector.component.ts","../../calendar/src/selector/date/calendar-date-selector.component.html","../../calendar/src/static/all-months.ts","../../calendar/src/selector/month/calendar-month-selector.component.ts","../../calendar/src/selector/month/calendar-month-selector.component.html","../../calendar/src/selector/year/calendar-year-selector.component.ts","../../calendar/src/selector/year/calendar-year-selector.component.html","../../calendar/src/header/year/calendar-year-header.component.ts","../../calendar/src/header/year/calendar-year-header.component.html","../../calendar/src/header/month/calendar-month-header.component.ts","../../calendar/src/header/month/calendar-month-header.component.html","../../calendar/src/header/multi-year-header/calendar-multi-year-header.component.ts","../../calendar/src/header/multi-year-header/calendar-multi-year-header.component.html","../../calendar/src/fkt-calendar.component.ts","../../calendar/src/fkt-calendar.component.html","../../calendar/src/fkt-calendar.types.ts","../../calendar/src/frakton-ng-calendar.ts"],"sourcesContent":["import { Component, computed, input, model, output } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToClassPipe } from 'frakton-ng/internal/pipes';\r\nimport { compareDates } from 'frakton-ng/internal/utils';\r\nimport { FktCalendarDateConfig, FktCalendarDateConfigFn } from '../../fkt-calendar.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-date-selector',\r\n\timports: [DatePipe, ToClassPipe],\r\n\ttemplateUrl: './calendar-date-selector.component.html',\r\n\tstyleUrl: './calendar-date-selector.component.scss',\r\n})\r\nexport class CalendarDateSelectorComponent {\r\n\theaderLess = input(false);\r\n\tcurrentDate = model(new Date());\r\n\tconfigFn = input<FktCalendarDateConfigFn>(() => ({}));\r\n\tafterSelect = output();\r\n\tyearClick = output();\r\n\tmonthClick = output();\r\n\r\n\tprotected monthPeriod = computed(() => {\r\n\t\tconst currentDate = this.currentDate();\r\n\r\n\t\tconst startDate = new Date();\r\n\t\tstartDate.setHours(0, 0, 0, 0);\r\n\t\tstartDate.setMonth(currentDate.getMonth());\r\n\t\tstartDate.setDate(1);\r\n\r\n\t\tconst endDate = new Date();\r\n\t\tendDate.setHours(23, 59, 59, 59);\r\n\t\tendDate.setMonth(currentDate.getMonth() + 1);\r\n\t\tendDate.setDate(0);\r\n\r\n\t\treturn { startDate, endDate, daysCount: endDate.getDate() };\r\n\t});\r\n\r\n\tprotected weekdays = computed(() => {\r\n\t\tconst weekdaysCount = 6;\r\n\r\n\t\tconst weekDays: string[] = [];\r\n\r\n\t\tfor (let weekday = 0; weekday <= weekdaysCount; weekday++) {\r\n\t\t\tconst now = new Date();\r\n\t\t\tnow.setDate(now.getDate() + now.getDay() + weekday);\r\n\r\n\t\t\tweekDays.push(now.toISOString());\r\n\t\t}\r\n\r\n\t\treturn weekDays;\r\n\t});\r\n\r\n\tprotected days = computed(() => {\r\n\t\tconst { daysCount } = this.monthPeriod();\r\n\t\tconst today = new Date();\r\n\r\n\t\tconst list: FktCalendarDateConfig[] = [];\r\n\r\n\t\tfor (let day = 1; day <= daysCount; day++) {\r\n\t\t\tconst date = new Date(this.currentDate());\r\n\t\t\tdate.setDate(day);\r\n\t\t\tconst isCurrentDate = compareDates(date, this.currentDate()) === 'equal';\r\n\t\t\tconst isToday = compareDates(date, today) === 'equal';\r\n\r\n\t\t\tif (day === 1) {\r\n\t\t\t\tconst weekdays = date.getDay();\r\n\r\n\t\t\t\tfor (let weekDay = 1; weekDay <= weekdays; weekDay++) {\r\n\t\t\t\t\tconst prevMonthDate = new Date(date);\r\n\t\t\t\t\tprevMonthDate.setDate(prevMonthDate.getDate() - weekDay);\r\n\r\n\t\t\t\t\tlist.unshift({\r\n\t\t\t\t\t\tdate: prevMonthDate.toISOString(),\r\n\t\t\t\t\t\tclasses: ['calendar__date--out-of-range'],\r\n\t\t\t\t\t\tisCurrentDate: false,\r\n\t\t\t\t\t\tisToday,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst { classes = [], onClick } = this.configFn()(date);\r\n\r\n\t\t\tlist.push({\r\n\t\t\t\tdate: date.toISOString(),\r\n\t\t\t\tonClick,\r\n\t\t\t\tclasses,\r\n\t\t\t\tisCurrentDate,\r\n\t\t\t\tisToday,\r\n\t\t\t});\r\n\r\n\t\t\tif (day === daysCount) {\r\n\t\t\t\tconst weekdays = 6 - date.getDay();\r\n\r\n\t\t\t\tfor (let weekDay = 1; weekDay <= weekdays; weekDay++) {\r\n\t\t\t\t\tconst nextMonthDate = new Date(date);\r\n\t\t\t\t\tnextMonthDate.setDate(nextMonthDate.getDate() + weekDay);\r\n\t\t\t\t\tlist.push({\r\n\t\t\t\t\t\tdate: nextMonthDate.toISOString(),\r\n\t\t\t\t\t\tclasses: ['calendar__date--out-of-range'],\r\n\t\t\t\t\t\tisCurrentDate: false,\r\n\t\t\t\t\t\tisToday,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t});\r\n}\r\n","<div class=\"calendar\">\r\n\t@for (weekday of weekdays(); track weekday) {\r\n\t\t<div class=\"calendar__weekday\">\r\n\t\t\t{{ weekday | date: 'EEE' }}\r\n\t\t</div>\r\n\t}\r\n\t@for (day of days(); track day.date) {\r\n\t\t<div\r\n\t\t\t[class.calendar__date--clickable]=\"day.onClick\"\r\n\t\t\t[class.calendar__date--today]=\"day.isToday\"\r\n\t\t\t[class.calendar__date--current-date]=\"day.isCurrentDate\"\r\n\t\t\t(click)=\"day.onClick?.()\"\r\n\t\t\t[class]=\"'calendar__date ' + (day.classes | toClass)\">\r\n\t\t\t{{ day.date | date: 'dd' }}\r\n\t\t</div>\r\n\t}\r\n</div>\r\n","export const allMonths = [\r\n\t{ value: 0, label: 'Janeiro' },\r\n\t{ value: 1, label: 'Fevereiro' },\r\n\t{ value: 2, label: 'Mar√ßo' },\r\n\t{ value: 3, label: 'Abril' },\r\n\t{ value: 4, label: 'Maio' },\r\n\t{ value: 5, label: 'Junho' },\r\n\t{ value: 6, label: 'Julho' },\r\n\t{ value: 7, label: 'Agosto' },\r\n\t{ value: 8, label: 'Setembro' },\r\n\t{ value: 9, label: 'Outubro' },\r\n\t{ value: 10, label: 'Novembro' },\r\n\t{ value: 11, label: 'Dezembro' },\r\n] as const;\r\n","import { Component, input, model, output } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { allMonths } from '../../static/all-months';\r\nimport { FktCalendarDateConfigFn } from '../../fkt-calendar.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-month-selector',\r\n\timports: [DatePipe],\r\n\ttemplateUrl: './calendar-month-selector.component.html',\r\n\tstyleUrl: './calendar-month-selector.component.scss',\r\n})\r\nexport class CalendarMonthSelectorComponent {\r\n\theaderLess = input(false);\r\n\tcurrentDate = model(new Date());\r\n\tconfigFn = input<FktCalendarDateConfigFn>(() => ({}));\r\n\tback = output();\r\n\tyearClick = output();\r\n\r\n\tprotected months = allMonths.map(month => {\r\n\t\tconst date = new Date();\r\n\t\tdate.setMonth(month.value);\r\n\r\n\t\treturn date;\r\n\t});\r\n\r\n\tselectMonth(selectedDate: Date) {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst currentDate = new Date(date);\r\n\t\t\tcurrentDate.setMonth(selectedDate.getMonth());\r\n\r\n\t\t\treturn currentDate;\r\n\t\t});\r\n\r\n\t\tthis.back.emit();\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t@for (month of months; track month) {\r\n\t\t<div\r\n\t\t\t(click)=\"selectMonth(month)\"\r\n\t\t\tclass=\"container__month\">\r\n\t\t\t{{ month | date: 'MMMM' }}\r\n\t\t</div>\r\n\t}\r\n</div>\r\n","import { Component, computed, input, model, output } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FktCalendarDateConfigFn } from '../../fkt-calendar.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-year-selector',\r\n\timports: [DatePipe],\r\n\ttemplateUrl: './calendar-year-selector.component.html',\r\n\tstyleUrl: './calendar-year-selector.component.scss',\r\n})\r\nexport class CalendarYearSelectorComponent {\r\n\theaderLess = input(false);\r\n\tcurrentDate = model(new Date());\r\n\tconfigFn = input<FktCalendarDateConfigFn>(() => ({}));\r\n\tback = output();\r\n\r\n\tyears = computed(() => {\r\n\t\tconst currentDate = this.currentDate();\r\n\t\tconst currentYear = currentDate.getFullYear();\r\n\r\n\t\tconst start = currentYear - (currentYear % 10);\r\n\t\tconst end = start + 10;\r\n\r\n\t\tconst allYears: Date[] = [];\r\n\r\n\t\tfor (let year = start; year <= end; year++) {\r\n\t\t\tconst date = new Date();\r\n\t\t\tdate.setFullYear(year);\r\n\r\n\t\t\tallYears.push(date);\r\n\t\t}\r\n\r\n\t\treturn allYears;\r\n\t});\r\n\r\n\tselectYear(selectedDate: Date) {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst currentDate = new Date(date);\r\n\t\t\tcurrentDate.setFullYear(selectedDate.getFullYear());\r\n\r\n\t\t\treturn currentDate;\r\n\t\t});\r\n\r\n\t\tthis.back.emit();\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t@for (year of years(); track $index) {\r\n\t\t<div\r\n\t\t\t(click)=\"selectYear(year)\"\r\n\t\t\tclass=\"container__year\">\r\n\t\t\t{{ year | date: 'yyyy' }}\r\n\t\t</div>\r\n\t}\r\n</div>\r\n","import { Component, model, output } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-year-header',\r\n\timports: [DatePipe, FktNavigatorComponent],\r\n\ttemplateUrl: './calendar-year-header.component.html',\r\n\tstyleUrl: './calendar-year-header.component.scss',\r\n})\r\nexport class CalendarYearHeaderComponent {\r\n\tcurrentDate = model(new Date());\r\n\tyearClick = output();\r\n\r\n\tprotected previous() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setFullYear(copy.getFullYear() - 1);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected next() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setFullYear(copy.getFullYear() + 1);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n}\r\n","<fkt-navigator\r\n\t(next)=\"next()\"\r\n\t(previous)=\"previous()\"\r\n>\r\n\t<div class=\"container\">\r\n\t\t<strong (click)=\"yearClick.emit()\">\r\n\t\t\t{{ currentDate() | date: 'yyyy' }}\r\n\t\t</strong>\r\n\t</div>\r\n</fkt-navigator>\r\n","import { Component, model, output } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-month-header',\r\n\timports: [DatePipe, FktNavigatorComponent],\r\n\ttemplateUrl: './calendar-month-header.component.html',\r\n\tstyleUrl: './calendar-month-header.component.scss',\r\n})\r\nexport class CalendarMonthHeaderComponent {\r\n\tcurrentDate = model(new Date());\r\n\tyearClick = output();\r\n\tmonthClick = output();\r\n\r\n\tprotected previous() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setMonth(copy.getMonth() - 1);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected next() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setMonth(copy.getMonth() + 1);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n}\r\n","<fkt-navigator\r\n\t(next)=\"next()\"\r\n\t(previous)=\"previous()\"\r\n>\r\n\t<div class=\"container\">\r\n\t\t<strong\r\n\t\t\t(click)=\"monthClick.emit()\"\r\n\t\t\tclass=\"container__month\">\r\n\t\t\t{{ currentDate() | date: 'MMMM' }}\r\n\t\t</strong>\r\n\r\n\t\t<strong\r\n\t\t\t(click)=\"yearClick.emit()\"\r\n\t\t\tclass=\"container__year\">\r\n\t\t\t{{ currentDate() | date: 'yyyy' }}\r\n\t\t</strong>\r\n\t</div>\r\n</fkt-navigator>\r\n","import { Component, computed, model } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar-multi-year-header',\r\n\timports: [FktNavigatorComponent],\r\n\ttemplateUrl: './calendar-multi-year-header.component.html',\r\n\tstyleUrl: './calendar-multi-year-header.component.scss',\r\n})\r\nexport class CalendarMultiYearHeaderComponent {\r\n\tcurrentDate = model(new Date());\r\n\r\n\tcurrentDecade = computed(() => {\r\n\t\tconst currentDate = this.currentDate();\r\n\t\tconst currentYear = currentDate.getFullYear();\r\n\r\n\t\tconst start = currentYear - (currentYear % 10);\r\n\t\tconst end = start + 10;\r\n\r\n\t\treturn `${start} - ${end}`;\r\n\t});\r\n\r\n\tprotected previous() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setFullYear(copy.getFullYear() - 10);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected next() {\r\n\t\tthis.currentDate.update(date => {\r\n\t\t\tconst copy = new Date(date);\r\n\t\t\tcopy.setFullYear(copy.getFullYear() + 10);\r\n\r\n\t\t\treturn copy;\r\n\t\t});\r\n\t}\r\n}\r\n","<fkt-navigator\r\n\t(next)=\"next()\"\r\n\t(previous)=\"previous()\"\r\n>\r\n\t<div class=\"container\">\r\n\t\t<strong>\r\n\t\t\t{{ currentDecade() }}\r\n\t\t</strong>\r\n\t</div>\r\n</fkt-navigator>\r\n","import { Component, input, model, signal } from '@angular/core';\r\nimport { CalendarDateSelectorComponent } from './selector/date/calendar-date-selector.component';\r\nimport { CalendarMonthSelectorComponent } from './selector/month/calendar-month-selector.component';\r\nimport { CalendarYearSelectorComponent } from './selector/year/calendar-year-selector.component';\r\nimport { CalendarYearHeaderComponent } from './header/year/calendar-year-header.component';\r\nimport { CalendarMonthHeaderComponent } from './header/month/calendar-month-header.component';\r\nimport { CalendarMultiYearHeaderComponent } from './header/multi-year-header/calendar-multi-year-header.component';\r\nimport { FktCalendarDateConfigFn, FktCalendarStep } from './fkt-calendar.types';\r\n\r\n@Component({\r\n\tselector: 'fkt-calendar',\r\n\timports: [\r\n\t\tCalendarDateSelectorComponent,\r\n\t\tCalendarMonthSelectorComponent,\r\n\t\tCalendarYearSelectorComponent,\r\n\t\tCalendarYearHeaderComponent,\r\n\t\tCalendarMonthHeaderComponent,\r\n\t\tCalendarMultiYearHeaderComponent,\r\n\t],\r\n\ttemplateUrl: './fkt-calendar.component.html',\r\n\tstyleUrl: './fkt-calendar.component.scss',\r\n\thost: {\r\n\t\t'[class.with-border]': '!borderless()',\r\n\t},\r\n})\r\nexport class FktCalendarComponent {\r\n\tconfigFn = input<FktCalendarDateConfigFn>(() => ({}));\r\n\tcurrentDate = model(new Date());\r\n\tborderless = input(false);\r\n\r\n\tprotected step = signal<FktCalendarStep>('date');\r\n\tprivate lastStep = this.step();\r\n\r\n\tprotected selectStep(step: FktCalendarStep) {\r\n\t\tthis.lastStep = this.step();\r\n\t\tthis.step.set(step);\r\n\t}\r\n\r\n\tprotected goBackToLastStep() {\r\n\t\tif (this.lastStep === 'year') this.selectStep('date');\r\n\t\telse this.selectStep(this.lastStep);\r\n\t}\r\n}\r\n","@switch (step()) {\r\n\t@case ('date') {\r\n\t\t<fkt-calendar-month-header\r\n\t\t\t(yearClick)=\"selectStep('year')\"\r\n\t\t\t(monthClick)=\"selectStep('month')\"\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t/>\r\n\t\t<hr class=\"vertical-separator\">\r\n\t\t<fkt-calendar-date-selector\r\n\t\t\t[configFn]=\"configFn()\"\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t/>\r\n\t}\r\n\t@case ('month') {\r\n\t\t<fkt-calendar-year-header\r\n\t\t\t(yearClick)=\"selectStep('year')\"\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t/>\r\n\t\t<hr class=\"vertical-separator\">\r\n\t\t<fkt-calendar-month-selector\r\n\t\t\t[configFn]=\"configFn()\"\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t\t(back)=\"goBackToLastStep()\"\r\n\t\t/>\r\n\t}\r\n\t@case ('year') {\r\n\t\t<fkt-calendar-multi-year-header\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t/>\r\n\t\t<hr class=\"vertical-separator\">\r\n\t\t<fkt-calendar-year-selector\r\n\t\t\t[configFn]=\"configFn()\"\r\n\t\t\t[(currentDate)]=\"currentDate\"\r\n\t\t\t(back)=\"goBackToLastStep()\"\r\n\t\t/>\r\n\t}\r\n}\r\n","import { Prettify } from 'frakton-ng/internal/types';\r\n\r\nexport interface FktCalendarDateConfig {\r\n\tdate: string;\r\n\tonClick?: () => void;\r\n\tisCurrentDate: boolean;\r\n\tisToday: boolean;\r\n\tclasses: string[];\r\n}\r\n\r\n\r\nexport type FktCalendarDateOptions = Prettify<\r\n\tPartial<Omit<FktCalendarDateConfig, 'date' | 'isCurrentDate'>>\r\n>;\r\n\r\nexport type FktCalendarDateConfigFn = (date: Date) => FktCalendarDateOptions;\r\nexport const fktCalendarStep = ['date', 'month', 'year'] as const;\r\nexport type FktCalendarStep = typeof fktCalendarStep[number];\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;MAYa,6BAA6B,CAAA;AACzC,IAAA,UAAU,GAAG,KAAK,CAAC,KAAK,sDAAC;AACzB,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;IAC/B,QAAQ,GAAG,KAAK,CAA0B,OAAO,EAAE,CAAC,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IACrD,WAAW,GAAG,MAAM,EAAE;IACtB,SAAS,GAAG,MAAM,EAAE;IACpB,UAAU,GAAG,MAAM,EAAE;AAEX,IAAA,WAAW,GAAG,QAAQ,CAAC,MAAK;AACrC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AAEtC,QAAA,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE;QAC5B,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;AAC1C,QAAA,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;AAEpB,QAAA,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE;QAC1B,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAChC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAC5C,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAElB,QAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE;AAC5D,IAAA,CAAC,uDAAC;AAEQ,IAAA,QAAQ,GAAG,QAAQ,CAAC,MAAK;QAClC,MAAM,aAAa,GAAG,CAAC;QAEvB,MAAM,QAAQ,GAAa,EAAE;AAE7B,QAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,aAAa,EAAE,OAAO,EAAE,EAAE;AAC1D,YAAA,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE;AACtB,YAAA,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC;YAEnD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACjC;AAEA,QAAA,OAAO,QAAQ;AAChB,IAAA,CAAC,oDAAC;AAEQ,IAAA,IAAI,GAAG,QAAQ,CAAC,MAAK;QAC9B,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE;AACxC,QAAA,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE;QAExB,MAAM,IAAI,GAA4B,EAAE;AAExC,QAAA,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,SAAS,EAAE,GAAG,EAAE,EAAE;YAC1C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AACzC,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AACjB,YAAA,MAAM,aAAa,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,OAAO;YACxE,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,OAAO;AAErD,YAAA,IAAI,GAAG,KAAK,CAAC,EAAE;AACd,gBAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE;AAE9B,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,QAAQ,EAAE,OAAO,EAAE,EAAE;AACrD,oBAAA,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;oBACpC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC;oBAExD,IAAI,CAAC,OAAO,CAAC;AACZ,wBAAA,IAAI,EAAE,aAAa,CAAC,WAAW,EAAE;wBACjC,OAAO,EAAE,CAAC,8BAA8B,CAAC;AACzC,wBAAA,aAAa,EAAE,KAAK;wBACpB,OAAO;AACP,qBAAA,CAAC;gBACH;YACD;AAEA,YAAA,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;YAEvD,IAAI,CAAC,IAAI,CAAC;AACT,gBAAA,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;gBACxB,OAAO;gBACP,OAAO;gBACP,aAAa;gBACb,OAAO;AACP,aAAA,CAAC;AAEF,YAAA,IAAI,GAAG,KAAK,SAAS,EAAE;gBACtB,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;AAElC,gBAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,QAAQ,EAAE,OAAO,EAAE,EAAE;AACrD,oBAAA,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;oBACpC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC;oBACxD,IAAI,CAAC,IAAI,CAAC;AACT,wBAAA,IAAI,EAAE,aAAa,CAAC,WAAW,EAAE;wBACjC,OAAO,EAAE,CAAC,8BAA8B,CAAC;AACzC,wBAAA,aAAa,EAAE,KAAK;wBACpB,OAAO;AACP,qBAAA,CAAC;gBACH;YACD;QACD;AAEA,QAAA,OAAO,IAAI;AACZ,IAAA,CAAC,gDAAC;uGA9FU,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAA7B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,6BAA6B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECZ1C,6kBAiBA,EAAA,MAAA,EAAA,CAAA,osBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EDTW,QAAQ,wCAAE,WAAW,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,EAAA,CAAA;;2FAInB,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBANzC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,4BAA4B,EAAA,OAAA,EAC7B,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAA,QAAA,EAAA,6kBAAA,EAAA,MAAA,EAAA,CAAA,osBAAA,CAAA,EAAA;;;AER1B,MAAM,SAAS,GAAG;AACxB,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;AAC9B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE;AAChC,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AAC3B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;AAC7B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE;AAC/B,IAAA,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;AAC9B,IAAA,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE;AAChC,IAAA,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE;CACvB;;MCFG,8BAA8B,CAAA;AAC1C,IAAA,UAAU,GAAG,KAAK,CAAC,KAAK,sDAAC;AACzB,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;IAC/B,QAAQ,GAAG,KAAK,CAA0B,OAAO,EAAE,CAAC,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IACrD,IAAI,GAAG,MAAM,EAAE;IACf,SAAS,GAAG,MAAM,EAAE;AAEV,IAAA,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,IAAG;AACxC,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;AAE1B,QAAA,OAAO,IAAI;AACZ,IAAA,CAAC,CAAC;AAEF,IAAA,WAAW,CAAC,YAAkB,EAAA;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAClC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AAE7C,YAAA,OAAO,WAAW;AACnB,QAAA,CAAC,CAAC;AAEF,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IACjB;uGAvBY,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAA9B,8BAA8B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECX3C,sOASA,EAAA,MAAA,EAAA,CAAA,0YAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EDFW,QAAQ,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;;2FAIN,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAN1C,SAAS;+BACC,6BAA6B,EAAA,OAAA,EAC9B,CAAC,QAAQ,CAAC,EAAA,QAAA,EAAA,sOAAA,EAAA,MAAA,EAAA,CAAA,0YAAA,CAAA,EAAA;;;MEGP,6BAA6B,CAAA;AACzC,IAAA,UAAU,GAAG,KAAK,CAAC,KAAK,sDAAC;AACzB,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;IAC/B,QAAQ,GAAG,KAAK,CAA0B,OAAO,EAAE,CAAC,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;IACrD,IAAI,GAAG,MAAM,EAAE;AAEf,IAAA,KAAK,GAAG,QAAQ,CAAC,MAAK;AACrB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AACtC,QAAA,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE;QAE7C,MAAM,KAAK,GAAG,WAAW,IAAI,WAAW,GAAG,EAAE,CAAC;AAC9C,QAAA,MAAM,GAAG,GAAG,KAAK,GAAG,EAAE;QAEtB,MAAM,QAAQ,GAAW,EAAE;AAE3B,QAAA,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AAC3C,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;AACvB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AAEtB,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACpB;AAEA,QAAA,OAAO,QAAQ;AAChB,IAAA,CAAC,iDAAC;AAEF,IAAA,UAAU,CAAC,YAAkB,EAAA;AAC5B,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAClC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AAEnD,YAAA,OAAO,WAAW;AACnB,QAAA,CAAC,CAAC;AAEF,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IACjB;uGAlCY,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAA7B,6BAA6B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECV1C,mOASA,EAAA,MAAA,EAAA,CAAA,wYAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EDHW,QAAQ,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;;2FAIN,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBANzC,SAAS;+BACC,4BAA4B,EAAA,OAAA,EAC7B,CAAC,QAAQ,CAAC,EAAA,QAAA,EAAA,mOAAA,EAAA,MAAA,EAAA,CAAA,wYAAA,CAAA,EAAA;;;MEIP,2BAA2B,CAAA;AACvC,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;IAC/B,SAAS,GAAG,MAAM,EAAE;IAEV,QAAQ,GAAA;AACjB,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAExC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;IAEU,IAAI,GAAA;AACb,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAExC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;uGApBY,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAA3B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECVxC,wPAUA,EAAA,MAAA,EAAA,CAAA,4UAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EDJqB,qBAAqB,gIAA/B,QAAQ,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;;2FAIN,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,0BAA0B,EAAA,OAAA,EAC3B,CAAC,QAAQ,EAAE,qBAAqB,CAAC,EAAA,QAAA,EAAA,wPAAA,EAAA,MAAA,EAAA,CAAA,4UAAA,CAAA,EAAA;;;MEI9B,4BAA4B,CAAA;AACxC,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;IAC/B,SAAS,GAAG,MAAM,EAAE;IACpB,UAAU,GAAG,MAAM,EAAE;IAEX,QAAQ,GAAA;AACjB,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAElC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;IAEU,IAAI,GAAA;AACb,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAElC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;uGArBY,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAA5B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECVzC,gcAkBA,EAAA,MAAA,EAAA,CAAA,6mBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EDZqB,qBAAqB,gIAA/B,QAAQ,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;;2FAIN,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBANxC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,2BAA2B,EAAA,OAAA,EAC5B,CAAC,QAAQ,EAAE,qBAAqB,CAAC,EAAA,QAAA,EAAA,gcAAA,EAAA,MAAA,EAAA,CAAA,6mBAAA,CAAA,EAAA;;;MEG9B,gCAAgC,CAAA;AAC5C,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;AAE/B,IAAA,aAAa,GAAG,QAAQ,CAAC,MAAK;AAC7B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;AACtC,QAAA,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE;QAE7C,MAAM,KAAK,GAAG,WAAW,IAAI,WAAW,GAAG,EAAE,CAAC;AAC9C,QAAA,MAAM,GAAG,GAAG,KAAK,GAAG,EAAE;AAEtB,QAAA,OAAO,CAAA,EAAG,KAAK,CAAA,GAAA,EAAM,GAAG,EAAE;AAC3B,IAAA,CAAC,yDAAC;IAEQ,QAAQ,GAAA;AACjB,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;AAEzC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;IAEU,IAAI,GAAA;AACb,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAG;AAC9B,YAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;AAEzC,YAAA,OAAO,IAAI;AACZ,QAAA,CAAC,CAAC;IACH;uGA7BY,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAAhC,gCAAgC,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECT7C,8MAUA,EAAA,MAAA,EAAA,CAAA,+KAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EDLW,qBAAqB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;2FAInB,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAN5C,SAAS;+BACC,gCAAgC,EAAA,OAAA,EACjC,CAAC,qBAAqB,CAAC,EAAA,QAAA,EAAA,8MAAA,EAAA,MAAA,EAAA,CAAA,+KAAA,CAAA,EAAA;;;MEoBpB,oBAAoB,CAAA;IAChC,QAAQ,GAAG,KAAK,CAA0B,OAAO,EAAE,CAAC,EAAA,IAAA,SAAA,GAAA,CAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAC;AACrD,IAAA,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,uDAAC;AAC/B,IAAA,UAAU,GAAG,KAAK,CAAC,KAAK,sDAAC;AAEf,IAAA,IAAI,GAAG,MAAM,CAAkB,MAAM,gDAAC;AACxC,IAAA,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE;AAEpB,IAAA,UAAU,CAAC,IAAqB,EAAA;AACzC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE;AAC3B,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IACpB;IAEU,gBAAgB,GAAA;AACzB,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;;AAChD,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;IACpC;uGAhBY,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAApB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECzBjC,mjCAqCA,EAAA,MAAA,EAAA,CAAA,sOAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EDzBE,6BAA6B,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,aAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAC7B,8BAA8B,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,aAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAC9B,6BAA6B,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,aAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAC7B,2BAA2B,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAC3B,4BAA4B,0JAC5B,gCAAgC,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;2FAQrB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAhBhC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EAAA,OAAA,EACf;wBACR,6BAA6B;wBAC7B,8BAA8B;wBAC9B,6BAA6B;wBAC7B,2BAA2B;wBAC3B,4BAA4B;wBAC5B,gCAAgC;qBAChC,EAAA,IAAA,EAGK;AACL,wBAAA,qBAAqB,EAAE,eAAe;AACtC,qBAAA,EAAA,QAAA,EAAA,mjCAAA,EAAA,MAAA,EAAA,CAAA,sOAAA,CAAA,EAAA;;;AEPK,MAAM,eAAe,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM;;AChBvD;;AAEG;;;;"}