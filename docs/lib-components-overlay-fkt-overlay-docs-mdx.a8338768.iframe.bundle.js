(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[453,2065],{"./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/.pnpm/@storybook+addon-docs@9.1.1_95b484d1674ba6b5eb76c19551a23f20/node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/@storybook+addon-docs@9.1.1_95b484d1674ba6b5eb76c19551a23f20/node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/.pnpm/storybook@9.1.1_@testing-li_3dc862b1dd73835431e01e564cae9dd4/node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/storybook@9.1.1_@testing-li_3dc862b1dd73835431e01e564cae9dd4/node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/.pnpm/storybook@9.1.1_@testing-li_3dc862b1dd73835431e01e564cae9dd4/node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/storybook@9.1.1_@testing-li_3dc862b1dd73835431e01e564cae9dd4/node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./projects/core/src/lib/components/overlay/fkt-overlay.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_95b484d1674ba6b5eb76c19551a23f20_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_95b484d1674ba6b5eb76c19551a23f20/node_modules/@storybook/addon-docs/dist/blocks.mjs"),_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./projects/core/src/lib/components/overlay/fkt-overlay.stories.ts");function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_95b484d1674ba6b5eb76c19551a23f20_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.W8,{of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"FktOverlay"})," service provides a powerful and flexible system for creating positioned overlays in your Angular applications.\r\nBuilt with modern Angular signals and reactive patterns, it supports dynamic positioning, intelligent repositioning, and seamless data binding between parent and overlay components."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Advanced TypeScript Inference"}),": Automatic type inference for overlay data based on component signal inputs, outputs, and models"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Signal-Based Architecture"}),": Built for Angular's new signal APIs with full reactivity support"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Component Agnostic Design"}),": Overlay components work anywhere - in overlays, dialogs, or standalone"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Intelligent Positioning"}),": Automatic positioning with 12 different anchor positions and smart fallbacks"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Dynamic Styling"}),": Real-time style updates and theme-aware overlays"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Memory Safe"}),": Automatic lifecycle management with proper cleanup and destroy callbacks"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Performance Optimized"}),": Efficient DOM management and minimal re-renders"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Advanced Control"}),": Outside click handling, auto-repositioning, and custom overlay IDs"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Responsive Design"}),": Smart viewport detection and mobile-friendly positioning"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"simple-overlay",children:"Simple Overlay"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Basic overlay positioning examples. Demonstrates how overlays can be positioned relative to anchor elements with different alignment options (top, bottom, left, right, center)."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.Hl,{sourceState:"none",of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__.SimpleOverlay}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:'@Component({\r\n\tselector: \'fkt-simple-overlay-dialog\',\r\n\timports: [\r\n\t\tFktButtonComponent\r\n\t],\r\n\ttemplate: `\r\n\t\t<div class="container">\r\n\t\t\t<h3 class="container__title">{{ title() }}</h3>\r\n\t\t\t<p class="container__description">{{ message() }}</p>\r\n\t\t\t<div class="container__actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Close"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t(click)="handleClose()"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: \'./fkt-simple-overlay-dialog.component.scss\'\r\n})\r\nexport class FktSimpleOverlayDialogComponent {\r\n\ttitle = input(\'Simple Overlay\');\r\n\tmessage = input(\'This is a basic overlay example with signal support.\');\r\n\r\n\tonClose = output<void>();\r\n\r\n\thandleClose() {\r\n\t\tthis.onClose.emit();\r\n\t}\r\n}\r\n\r\n\r\n@Component({\r\n\tselector: \'simple-overlay-example\',\r\n\ttemplate: `\r\n\t\t<div class="container">\r\n\t\t\t<div #left>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Left Center"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\tcolor="yellow"\r\n\t\t\t\t\t(click)="openOverlay(left, \'left-center\')"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #right>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Right Center"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\tcolor="primary"\r\n\t\t\t\t\t(click)="openOverlay(right, \'right-center\')"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #top>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Top Center"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\tcolor="green"\r\n\t\t\t\t\t(click)="openOverlay(top, \'top-center\')"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #bottom>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Bottom Center (Default)"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t(click)="openOverlay(bottom, \'bottom-center\')"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    `,\r\n\tstandalone: true,\r\n\tstyleUrl: \'./fkt-simple-overlay-example.component.scss\',\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktSimpleOverlayExampleComponent {\r\n\tprivate overlayService = inject(FktOverlayService);\r\n\r\n\tmessageSignal = signal(\'This overlay is positioned relative to the button!\');\r\n\r\n\topenOverlay(nativeElement: HTMLElement, position: FktGeometryPosition) {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktSimpleOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: `Simple Overlay - ${position}`,\r\n\t\t\t\tmessage: this.messageSignal,\r\n\t\t\t\tonClose: () => {\r\n\t\t\t\t\tconsole.log(\'Simple overlay closed\');\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: position,\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\twidth: \'300px\',\r\n\t\t\t\tpadding: \'0\',\r\n\t\t\t\tborderRadius: \'8px\'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"custom-tooltip-overlay",children:"Custom Tooltip Overlay"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Dark-themed tooltip-style overlays with auto-close functionality. Perfect for contextual help, status messages, and informational content. Tooltips automatically close after 3 seconds."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.Hl,{sourceState:"none",of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__.TooltipOverlay}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-1",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"@Component({\r\n\tselector: 'fkt-tooltip-overlay-dialog',\r\n\timports: [\r\n\t\tFktIconComponent\r\n\t],\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t@if (type() === 'info') {\r\n\t\t\t\t<fkt-icon name=\"information-circle\" size=\"16\"></fkt-icon>\r\n\t\t\t}\r\n\t\t\t@if (type() === 'warning') {\r\n\t\t\t\t<fkt-icon name=\"exclamation-triangle\" size=\"16\"></fkt-icon>\r\n\t\t\t}\r\n\t\t\t@if (type() === 'error') {\r\n\t\t\t\t<fkt-icon name=\"x-circle\" size=\"16\"></fkt-icon>\r\n\t\t\t}\r\n\t\t\t@if (type() === 'success') {\r\n\t\t\t\t<fkt-icon name=\"check-circle\" size=\"16\"></fkt-icon>\r\n\t\t\t}\r\n\t\t\t<span class=\"container__text\">{{ text() }}</span>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: './fkt-tooltip-overlay-dialog.component.scss'\r\n})\r\nexport class FktTooltipOverlayDialogComponent {\r\n\ttext = input('Tooltip message');\r\n\ttype = input<'info' | 'warning' | 'error' | 'success'>('info');\r\n}\r\n\r\n@Component({\r\n\tselector: 'custom-tooltip-overlay-example',\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t<div #infoButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Info Tooltip\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"openTooltip(infoButton, 'info', 'This is an informational tooltip message.')\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div #warningButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Warning Tooltip\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t(click)=\"openTooltip(warningButton, 'warning', 'This is a warning tooltip message.')\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div #errorButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Error Tooltip\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t(click)=\"openTooltip(errorButton, 'error', 'This is an error tooltip message.')\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div #successButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Success Tooltip\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t(click)=\"openTooltip(successButton, 'success', 'This is a success tooltip message.')\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: './fkt-custom-tooltip-overlay-example.component.scss',\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktCustomTooltipOverlayExampleComponent {\r\n\tprivate overlayService = inject(FktOverlayService);\r\n\r\n\tprivate overlayRef: FktOverlayRef<FktTooltipOverlayDialogComponent> | null = null;\r\n\r\n\topenTooltip(\r\n\t\tnativeElement: HTMLElement,\r\n\t\ttype: 'info' | 'warning' | 'error' | 'success',\r\n\t\ttext: string,\r\n\t\tposition: FktGeometryPosition = 'bottom-center'\r\n\t) {\r\n\t\tif(this.overlayRef) return;\r\n\r\n\t\tconst colors: Record<'info' | 'warning' | 'error' | 'success', string> = {\r\n\t\t\tinfo: \"#3b82f6\",\r\n\t\t\twarning: \"#eab308\",\r\n\t\t\terror: \"#ef4444\",\r\n\t\t\tsuccess: \"#22c55e\",\r\n\t\t}\r\n\r\n\t\tthis.overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktTooltipOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttype: type\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: position,\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\tpadding: '0.5rem 1rem',\r\n\t\t\t\tbackgroundColor: colors[type],\r\n\t\t\t\tborderRadius: '6px',\r\n\t\t\t\tboxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n\t\t\t\tmaxHeight: 'fit-content',\r\n\t\t\t\tminWidth: 'fit-content',\r\n\t\t\t\twidth: 'fit-content',\r\n\t\t\t\toutsideClick: () => {\r\n\t\t\t\t\tthis.overlayRef = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"dropdown-menu-overlay",children:"Dropdown Menu Overlay"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Action menus and dropdown selectors with icons and various configurations. Demonstrates how to create context menus, navigation dropdowns, and action buttons with custom styling."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.Hl,{sourceState:"none",of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__.DropdownMenuOverlay}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-2",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface DropdownOption {\r\n\tlabel: string;\r\n\ticon: FktIconName;\r\n\taction: string;\r\n\tdisabled?: boolean;\r\n}\r\n\r\n@Component({\r\n\tselector: 'fkt-dropdown-overlay-dialog',\r\n\timports: [FktButtonComponent],\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t@for (option of options(); track option.action) {\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t[text]=\"option.label\"\r\n\t\t\t\t\t[icon]=\"option.icon\"\r\n\t\t\t\t\t[disabled]=\"option.disabled ?? false\"\r\n\t\t\t\t\t(click)=\"handleOptionClick(option)\"\r\n\t\t\t\t>\r\n\t\t\t\t</fkt-button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\tstyleUrl: './fkt-dropdown-overlay-dialog.component.scss'\r\n})\r\nexport class FktDropdownOverlayDialogComponent {\r\n\toptions = input<DropdownOption[]>([]);\r\n\r\n\tonOptionSelect = output<string>();\r\n\r\n\thandleOptionClick(option: DropdownOption) {\r\n\t\tif (!option.disabled) {\r\n\t\t\tthis.onOptionSelect.emit(option.action);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'dropdown-overlay-example',\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t<div #fileActionsButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"File Actions\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\ticonPosition=\"right\"\r\n\t\t\t\t\ticon=\"chevron-down\"\r\n\t\t\t\t\t(click)=\"openFileActionsMenu(fileActionsButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #userProfileButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"User Profile\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\ticonPosition=\"right\"\r\n\t\t\t\t\ticon=\"chevron-down\"\r\n\t\t\t\t\t(click)=\"openUserProfileMenu(userProfileButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #settingsButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Settings\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\ticonPosition=\"right\"\r\n\t\t\t\t\ticon=\"chevron-down\"\r\n\t\t\t\t\t(click)=\"openSettingsMenu(settingsButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #adminButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Admin Actions\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\ticonPosition=\"right\"\r\n\t\t\t\t\ticon=\"chevron-down\"\r\n\t\t\t\t\t(click)=\"openAdminMenu(adminButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: './fkt-dropdown-overlay-example.component.scss',\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktDropdownOverlayExampleComponent {\r\n\tprivate overlayService = inject(FktOverlayService);\r\n\r\n\topenFileActionsMenu(nativeElement: HTMLElement) {\r\n\t\tconst options: DropdownOption[] = [\r\n\t\t\t{ label: 'New File', icon: 'document-plus', action: 'new' },\r\n\t\t\t{ label: 'Open File', icon: 'folder-open', action: 'open' },\r\n\t\t\t{ label: 'Save', icon: 'document-check', action: 'save' },\r\n\t\t\t{ label: 'Save As...', icon: 'document-duplicate', action: 'saveas' },\r\n\t\t\t{ label: 'Export', icon: 'arrow-up-tray', action: 'export' },\r\n\t\t];\r\n\r\n\t\tthis.openDropdownMenu(nativeElement, options, 'File action');\r\n\t}\r\n\r\n\topenUserProfileMenu(nativeElement: HTMLElement) {\r\n\t\tconst options: DropdownOption[] = [\r\n\t\t\t{ label: 'View Profile', icon: 'user', action: 'profile' },\r\n\t\t\t{ label: 'Edit Profile', icon: 'pencil', action: 'edit' },\r\n\t\t\t{ label: 'Settings', icon: 'cog-6-tooth', action: 'settings' },\r\n\t\t\t{ label: 'Notifications', icon: 'bell', action: 'notifications' },\r\n\t\t\t{ label: 'Sign Out', icon: 'arrow-right-end-on-rectangle', action: 'signout' },\r\n\t\t];\r\n\r\n\t\tthis.openDropdownMenu(nativeElement, options, 'Profile action');\r\n\t}\r\n\r\n\topenSettingsMenu(nativeElement: HTMLElement) {\r\n\t\tconst options: DropdownOption[] = [\r\n\t\t\t{ label: 'General', icon: 'adjustments-horizontal', action: 'general' },\r\n\t\t\t{ label: 'Appearance', icon: 'swatch', action: 'appearance' },\r\n\t\t\t{ label: 'Privacy', icon: 'shield-check', action: 'privacy' },\r\n\t\t\t{ label: 'Security', icon: 'lock-closed', action: 'security' },\r\n\t\t\t{ label: 'Advanced', icon: 'wrench-screwdriver', action: 'advanced', disabled: true },\r\n\t\t];\r\n\r\n\t\tthis.openDropdownMenu(nativeElement, options, 'Settings');\r\n\t}\r\n\r\n\topenAdminMenu(nativeElement: HTMLElement) {\r\n\t\tconst options: DropdownOption[] = [\r\n\t\t\t{ label: 'User Management', icon: 'users', action: 'users' },\r\n\t\t\t{ label: 'System Logs', icon: 'document-text', action: 'logs' },\r\n\t\t\t{ label: 'Database', icon: 'circle-stack', action: 'database' },\r\n\t\t\t{ label: 'Backup', icon: 'archive-box', action: 'backup' },\r\n\t\t\t{ label: 'System Reset', icon: 'exclamation-triangle', action: 'reset' },\r\n\t\t];\r\n\r\n\t\tthis.openDropdownMenu(nativeElement, options, 'Admin action');\r\n\t}\r\n\r\n\tprivate openDropdownMenu(nativeElement: HTMLElement, options: DropdownOption[], actionType: string) {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktDropdownOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\toptions: options,\r\n\t\t\t\tonOptionSelect: (action: string) => {\r\n\t\t\t\t\tconsole.log(`${actionType} selected:`, action);\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: 'bottom-start',\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\twidth: 'fit-content',\r\n\t\t\t\tpadding: '0',\r\n\t\t\t\tborderRadius: '8px',\r\n\t\t\t\tboxShadow: '0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"form-overlay",children:"Form Overlay"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Forms and input collections within overlays. Shows how to handle form validation, submission, cancellation, and data binding in overlay contexts with different positioning options."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.Hl,{sourceState:"none",of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__.FormOverlay}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-3",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FormData {\r\n\tname: string;\r\n\temail: string;\r\n\tmessage: string;\r\n}\r\n\r\n@Component({\r\n\tselector: 'fkt-form-overlay-dialog',\r\n\timports: [\r\n\t\tFktInputComponent,\r\n\t\tFormsModule,\r\n\t\tFktIconComponent,\r\n\t\tFktButtonComponent,\r\n\t\tFktTextareaComponent\r\n\t],\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"container__header\">\r\n\t\t\t\t<fkt-icon name=\"document-text\" class=\"container__header-icon\"></fkt-icon>\r\n\t\t\t\t<h3 class=\"container__header-title\">{{ title() }}</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p class=\"container__description\">{{ description() }}</p>\r\n\r\n\t\t\t<form class=\"container__form\" (ngSubmit)=\"handleSubmit()\">\r\n\t\t\t\t<fkt-input\r\n\t\t\t\t\t[control]=\"form.controls.name\"\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tplaceholder=\"Enter your name\"\r\n\t\t\t\t></fkt-input>\r\n\r\n\t\t\t\t<fkt-input\r\n\t\t\t\t\t[control]=\"form.controls.email\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t></fkt-input>\r\n\r\n\t\t\t\t<fkt-textarea\r\n\t\t\t\t\t[control]=\"form.controls.message\"\r\n\t\t\t\t\tlabel=\"Message\"\r\n\t\t\t\t\tplaceholder=\"Enter a message\"\r\n\t\t\t\t></fkt-textarea>\r\n\r\n\t\t\t\t<div class=\"container__form-actions\">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"Cancel\"\r\n\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t(click)=\"handleCancel()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"Submit\"\r\n\t\t\t\t\t\ttheme=\"raised\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t[disabled]=\"!form.valid()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: './fkt-form-overlay-dialog.component.scss'\r\n})\r\nexport class FktFormOverlayDialogComponent implements OnInit {\r\n\ttitle = input('Contact Form');\r\n\tdescription = input('Please fill out your information below:');\r\n\tinitialData = input<FormData>();\r\n\r\n\tonFormSubmit = output<FormData>();\r\n\tonFormCancel = output<void>();\r\n\r\n\tprivate fb = inject(SignalFormBuilder);\r\n\tprotected form = this.fb.group({\r\n\t\tname: ['', SignalValidators.required()],\r\n\t\temail: ['', [SignalValidators.required(), SignalValidators.email()]],\r\n\t\tmessage: ['', SignalValidators.required()],\r\n\t})\r\n\r\n\tngOnInit() {\r\n\t\tconst initialData = this.initialData();\r\n\r\n\t\tif (!initialData) return;\r\n\r\n\t\tthis.form.patchValue(initialData);\r\n\t}\r\n\r\n\tprotected handleSubmit() {\r\n\t\tif (!this.form.valid()) return;\r\n\r\n\t\tthis.onFormSubmit.emit(this.form.value());\r\n\t}\r\n\r\n\tprotected handleCancel() {\r\n\t\tthis.onFormCancel.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'form-overlay-example',\r\n\ttemplate: `\r\n\t\t<div class=\"container\">\r\n\t\t\t<div #contactFormButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Contact Form\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"openContactForm(contactFormButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t\t<div #feedbackFormButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Feedback Form\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t(click)=\"openFeedbackForm(feedbackFormButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div #settingsFormButton>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"User Settings\"\r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"openSettingsForm(settingsFormButton)\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: './fkt-form-overlay-example.component.scss',\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktFormOverlayExampleComponent {\r\n\tprivate overlayService = inject(FktOverlayService);\r\n\r\n\topenContactForm(nativeElement: HTMLElement) {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktFormOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Contact Us',\r\n\t\t\t\tdescription: 'We would love to hear from you. Send us a message and we will respond as soon as possible.',\r\n\t\t\t\tonFormSubmit: (formData: FormData) => {\r\n\t\t\t\t\tconsole.log('Contact form submitted:', formData);\r\n\t\t\t\t\talert(`Thank you ${formData.name}! We received your message and will get back to you soon.`);\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t},\r\n\t\t\t\tonFormCancel: () => {\r\n\t\t\t\t\tconsole.log('Contact form cancelled');\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: 'bottom-start',\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\tpadding: '0',\r\n\t\t\t\twidth: 'fit-content',\r\n\t\t\t\tmaxHeight: 'fit-content',\r\n\t\t\t\tborderRadius: '8px',\r\n\t\t\t\tboxShadow: '0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenFeedbackForm(nativeElement: HTMLElement) {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktFormOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Share Your Feedback',\r\n\t\t\t\tdescription: 'Help us improve by sharing your thoughts and suggestions.',\r\n\t\t\t\tinitialData: {\r\n\t\t\t\t\tname: 'John Doe',\r\n\t\t\t\t\temail: 'john@example.com',\r\n\t\t\t\t\tmessage: '',\r\n\t\t\t\t},\r\n\t\t\t\tonFormSubmit: (formData: FormData) => {\r\n\t\t\t\t\tconsole.log('Feedback form submitted:', formData);\r\n\t\t\t\t\talert(`Thanks for your feedback, ${formData.name}!`);\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t},\r\n\t\t\t\tonFormCancel: () => {\r\n\t\t\t\t\tconsole.log('Feedback form cancelled');\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: 'bottom-start',\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\tpadding: '0',\r\n\t\t\t\twidth: 'fit-content',\r\n\t\t\t\tmaxHeight: 'fit-content',\r\n\t\t\t\tborderRadius: '8px',\r\n\t\t\t\tboxShadow: '0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenSettingsForm(nativeElement: HTMLElement) {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: {nativeElement},\r\n\t\t\tcomponent: FktFormOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Update Profile',\r\n\t\t\t\tdescription: 'Update your profile information below.',\r\n\t\t\t\tinitialData: {\r\n\t\t\t\t\tname: 'Jane Smith',\r\n\t\t\t\t\temail: 'jane.smith@company.com',\r\n\t\t\t\t\tmessage: 'Full-stack developer with 5+ years of experience.',\r\n\t\t\t\t},\r\n\t\t\t\tonFormSubmit: (formData: FormData) => {\r\n\t\t\t\t\tconsole.log('Settings form submitted:', formData);\r\n\t\t\t\t\talert(`Profile updated successfully, ${formData.name}!`);\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t},\r\n\t\t\t\tonFormCancel: () => {\r\n\t\t\t\t\tconsole.log('Settings form cancelled');\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: 'bottom-start',\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\tpadding: '0',\r\n\t\t\t\twidth: 'fit-content',\r\n\t\t\t\tmaxHeight: 'fit-content',\r\n\t\t\t\tborderRadius: '8px',\r\n\t\t\t\tboxShadow: '0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"interactive-overlay",children:"Interactive Overlay"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Advanced overlays with bidirectional data binding and reactive content. Demonstrates signal-based communication between parent and overlay components, including counters, lists, and complex state management."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.Hl,{sourceState:"none",of:_fkt_overlay_stories__WEBPACK_IMPORTED_MODULE_4__.InteractiveOverlay}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-4",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:'@Component({\r\n\tselector: \'fkt-interactive-overlay-dialog\',\r\n\timports: [\r\n\t\tFktBadgeComponent,\r\n\t\tFktIconComponent,\r\n\t\tFktButtonComponent\r\n\t],\r\n\ttemplate: `\r\n\t\t<div class="container">\r\n\t\t\t<div class="container__header">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<fkt-icon name="cursor-arrow-ripple" size="20" class="container__header-icon"></fkt-icon>\r\n\t\t\t\t\t<h3 class="container__header-title">{{ title() }}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p class="container__description">{{ description() }}</p>\r\n\r\n\t\t\t<hr>\r\n\r\n\t\t\t<div class="container__counter">\r\n\t\t\t\t<div class="container__counter-title">\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tCounter:\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<fkt-badge\r\n\t\t\t\t\t\t[text]="counter().toString()"\r\n\t\t\t\t\t\tcolor="green"\r\n\t\t\t\t\t></fkt-badge>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="container__counter-actions">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ticon="minus-circle"\r\n\t\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\t\tcolor="red"\r\n\t\t\t\t\t\t(click)="decrement()"\r\n\t\t\t\t\t\t[disabled]="counter() <= 0"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ticon="plus-circle"\r\n\t\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\t\tcolor="green"\r\n\t\t\t\t\t\t(click)="increment()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext="Reset"\r\n\t\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t\tcolor="primary"\r\n\t\t\t\t\t\tsize="sm"\r\n\t\t\t\t\t\t(click)="reset()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr>\r\n\r\n\t\t\t@if (currentItems().length > 0) {\r\n\t\t\t\t<div class="container__items">\r\n\t\t\t\t\t<h4 class="container__items-title">Items</h4>\r\n\t\t\t\t\t<div class="container__items-list">\r\n\t\t\t\t\t\t@for (item of currentItems(); track $index) {\r\n\t\t\t\t\t\t\t<div class="container__items-item">\r\n\t\t\t\t\t\t\t\t<span class="text-sm">{{ item }}</span>\r\n\t\t\t\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t\t\t\ticon="x-mark"\r\n\t\t\t\t\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\t\t\t\t\tcolor="red"\r\n\t\t\t\t\t\t\t\t\t[disabled]="currentItems().length <= 1"\r\n\t\t\t\t\t\t\t\t\t(click)="removeItem($index)"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<div class="container__items-actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\tclass="w-fit h-fit"\r\n\t\t\t\t\ttext="Add Item"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\tcolor="primary"\r\n\t\t\t\t\t(click)="addItem()"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Clear All"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\tcolor="red"\r\n\t\t\t\t\t(click)="clearItems()"\r\n\t\t\t\t\t[disabled]="currentItems().length <= 1"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<hr>\r\n\r\n\t\t\t<div class="container__actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext="Done"\r\n\t\t\t\t\ttheme="raised"\r\n\t\t\t\t\t(click)="handleDone()"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstyleUrl: \'./fkt-interactive-overlay-dialog.component.scss\'\r\n})\r\nexport class FktInteractiveOverlayDialogComponent {\r\n\ttitle = input(\'Interactive Demo\');\r\n\tdescription = input(\'This overlay demonstrates reactive signals and interactive components.\');\r\n\r\n\tcounter = model(0);\r\n\tcurrentItems = model<string[]>([]);\r\n\r\n\tonDone = output<void>();\r\n\r\n\tincrement() {\r\n\t\tconst newValue = this.counter() + 1;\r\n\t\tthis.counter.set(newValue);\r\n\t}\r\n\r\n\tdecrement() {\r\n\t\tif (this.counter() > 0) {\r\n\t\t\tconst newValue = this.counter() - 1;\r\n\t\t\tthis.counter.set(newValue);\r\n\t\t}\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.counter.set(0);\r\n\t}\r\n\r\n\taddItem() {\r\n\t\tconst itemNumber = this.currentItems().length + 1;\r\n\t\tconst newItem = `Item ${itemNumber}`;\r\n\t\tconst newItems = [...this.currentItems(), newItem];\r\n\t\tthis.currentItems.set(newItems);\r\n\t}\r\n\r\n\tremoveItem(index: number) {\r\n\t\tconst newItems = this.currentItems().filter((_, i) => i !== index);\r\n\t\tthis.currentItems.set(newItems);\r\n\t}\r\n\r\n\tclearItems() {\r\n\t\tthis.currentItems.set([\'Initial Item\']);\r\n\t}\r\n\r\n\thandleDone() {\r\n\t\tthis.onDone.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: \'interactive-overlay-example\',\r\n\ttemplate: `\r\n\t\t<div class="header">\r\n\t\t\t<h4 class="header__title">Shared State</h4>\r\n\t\t\t<hr>\r\n\t\t\t<div class="header__info">\r\n\t\t\t\t<span>Counter: <fkt-badge [text]="sharedCounter().toString()" color="green"></fkt-badge></span>\r\n\t\t\t\t<span>Items: <fkt-badge [text]="sharedItems().length.toString()" color="orange"></fkt-badge></span>\r\n\t\t\t</div>\r\n\t\t\t<div class="header__description">\r\n\t\t\t\tChanges made in overlays will update this shared state automatically.\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<hr>\r\n\r\n\t\t<div class="actions">\r\n\t\t\t<fkt-button\r\n\t\t\t\ttext="Reset All"\r\n\t\t\t\ttheme="stroked"\r\n\t\t\t\tcolor="red"\r\n\t\t\t\t(click)="resetAll()"\r\n\t\t\t></fkt-button>\r\n\t\t\t<fkt-button\r\n\t\t\t\ttext="Counter Overlay"\r\n\t\t\t\ttheme="stroked"\r\n\t\t\t\tcolor="primary"\r\n\t\t\t\t(click)="openCounterOverlay()"\r\n\t\t\t></fkt-button>\r\n\t\t</div>\r\n    `,\r\n\tstandalone: true,\r\n\tstyleUrl: \'./fkt-interactive-overlay-example.component.scss\',\r\n\timports: [FktButtonComponent, FktBadgeComponent]\r\n})\r\nexport class FktInteractiveOverlayExampleComponent {\r\n\tprivate overlayService = inject(FktOverlayService);\r\n\r\n\tsharedCounter = signal(0);\r\n\tsharedItems = signal<string[]>([\'Initial Item\']);\r\n\r\n\tprivate elementRef = inject(ElementRef);\r\n\r\n\topenCounterOverlay() {\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\tanchorElementRef: this.elementRef,\r\n\t\t\tcomponent: FktInteractiveOverlayDialogComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: \'Counter Demo\',\r\n\t\t\t\tdescription: \'This overlay demonstrates reactive counter functionality.\',\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tcurrentItems: this.sharedItems,\r\n\t\t\t\tonDone: () => {\r\n\t\t\t\t\tconsole.log(\'Counter overlay done\');\r\n\t\t\t\t\toverlayRef.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: {\r\n\t\t\t\tposition: \'bottom-center\',\r\n\t\t\t\tpadding: \'0\',\r\n\t\t\t\twidth: \'600px\',\r\n\t\t\t\tdisableAutoReposition: true,\r\n\t\t\t\tmaxHeight: \'fit-content\',\r\n\t\t\t\tborderRadius: \'8px\',\r\n\t\t\t\tboxShadow: \'0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)\'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tresetAll() {\r\n\t\tthis.sharedCounter.set(0);\r\n\t\tthis.sharedItems.set([\'Initial Item\']);\r\n\t}\r\n}\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"fktoverlayoptions-interface",children:"FktOverlayOptions Interface"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FktOverlayOptions<T> {\r\n\tanchorElementRef?: ElementRef<HTMLElement>;\r\n\tcomponent: Type<T>;\r\n\tdata: FktReactiveComponentData<T>;\r\n\tpanelOptions?: {\r\n\t\toverflow?: 'hidden' | 'visible' | 'scroll' | 'auto';\r\n\t\tid?: string;\r\n\t\tmaxHeight?: string;\r\n\t\tminWidth?: string;\r\n\t\tborderRadius?: string;\r\n\t\tbackgroundColor?: string;\r\n\t\twidth?: string;\r\n\t\tpadding?: string;\r\n\t\tboxShadow?: string;\r\n\t\tposition?: FktGeometryPosition;\r\n\t\tdisableAutoReposition?: boolean;\r\n\t\tdisableAutoClose?: boolean;\r\n\t\toutsideClick?: (element: HTMLElement) => void;\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"fktoverlayref-interface",children:"FktOverlayRef Interface"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FktOverlayRef<T> {\r\n  componentRef: ComponentRef<T>;              // Reference to the overlay component\r\n  close: () => void;                          // Method to close the overlay\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"positioning-options",children:"Positioning Options"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The overlay supports intelligent positioning with the following options:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"top-start"})}),": Above anchor, aligned to the left"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"top-center"})}),": Above anchor, centered"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"top-end"})}),": Above anchor, aligned to the right"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"bottom-start"})}),": Below anchor, aligned to the left"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"bottom-center"})}),": Below anchor, centered (default)"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"bottom-end"})}),": Below anchor, aligned to the right"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"left-start"})}),": Left of anchor, aligned to the top"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"left-center"})}),": Left of anchor, centered"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"left-end"})}),": Left of anchor, aligned to the bottom"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"right-start"})}),": Right of anchor, aligned to the top"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"right-center"})}),": Right of anchor, centered"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"right-end"})}),": Right of anchor, aligned to the bottom"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"typescript-inference--component-design",children:"TypeScript Inference & Component Design"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"required-signal-based-component-apis",children:"Required: Signal-Based Component APIs"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Important"}),": The FktOverlay service requires components to use Angular's signal-based APIs (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"input()"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"output()"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model()"}),") for proper TypeScript inference. Decorator-based components (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Input"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Output"}),") are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"not supported"})," due to TypeScript compilation limitations."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// ✅ REQUIRED: Signal-based component (fully supported)\r\n@Component({\r\n\tselector: 'my-overlay-component',\r\n\ttemplate: `...`\r\n})\r\nexport class MyOverlayComponent {\r\n\t// Signal inputs - Required for TypeScript inference\r\n\ttitle = input('Default Title');\r\n\tuserData = input<User>();\r\n\tconfig = input<OverlayConfig>({ theme: 'light' });\r\n\r\n\t// Signal outputs - Required for callback type inference\r\n\tonSave = output<FormData>();\r\n\tonCancel = output<void>();\r\n\tonAction = output<{ type: string, payload: any }>();\r\n\r\n\t// Signal models - Required for two-way binding\r\n\tcounter = model(0);\r\n\titems = model<string[]>([]);\r\n}\r\n\r\n// Perfect TypeScript inference when using signal-based components:\r\nconst overlayRef = this.overlayService.open({\r\n\tanchorElementRef: anchor,\r\n\tcomponent: MyOverlayComponent,\r\n\tdata: {\r\n\t\t// ✅ Full IntelliSense for all inputs\r\n\t\ttitle: 'Custom Title',          // string - auto-completed\r\n\t\tuserData: this.currentUser,     // User type enforced\r\n\t\tconfig: { theme: 'dark' },      // OverlayConfig type enforced\r\n\r\n\t\t// ✅ TypeScript automatically infers callback parameter types\r\n\t\tonSave: (data) => {             // data is automatically typed as FormData\r\n\t\t\tconsole.log('Form saved:', data);\r\n\t\t\toverlayRef.close();\r\n\t\t},\r\n\t\tonCancel: () => {               // void - no parameters\r\n\t\t\toverlayRef.close();\r\n\t\t},\r\n\t\tonAction: (event) => {          // event is automatically typed as { type: string, payload: any }\r\n\t\t\tthis.handleAction(event.type, event.payload);\r\n\t\t},\r\n\r\n\t\t// ✅ Two-way signal binding with type safety\r\n\t\tcounter: this.sharedCounter,    // WritableSignal<number>\r\n\t\titems: this.sharedItems,        // WritableSignal<string[]>\r\n\t}\r\n});\r\n\r\n// ❌ NOT SUPPORTED: Decorator-based components won't compile\r\n@Component({\r\n\tselector: 'decorator-component',\r\n\ttemplate: `...`\r\n})\r\nexport class DecoratorComponent {\r\n\t@Input() title: string = 'Default';         // ❌ Won't work\r\n\t@Input() userData?: User;                   // ❌ Won't work\r\n\t@Output() onSave = new EventEmitter<FormData>(); // ❌ Won't work\r\n}\r\n\r\n// This will result in TypeScript compilation errors:\r\nconst willNotCompile = this.overlayService.open({\r\n\tcomponent: DecoratorComponent,  // ❌ TypeScript error\r\n\tdata: { /* ... */ }             // ❌ No inference available\r\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"component-agnostic-design-benefits",children:"Component Agnostic Design Benefits"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Using signal-based APIs makes your overlay components truly ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"reusable"})," across different contexts:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:'@Component({\r\n\tselector: \'user-profile-form\',\r\n\ttemplate: `\r\n\t\t<div class="p-4">\r\n\t\t\t<h3>{{ title() }}</h3>\r\n\t\t\t<form (ngSubmit)="handleSubmit()">\r\n\t\t\t\t<input [(ngModel)]="name" placeholder="Name" [readonly]="readonly()" />\r\n\t\t\t\t<input [(ngModel)]="email" placeholder="Email" [readonly]="readonly()" />\r\n\t\t\t\t<div class="flex gap-2">\r\n\t\t\t\t\t@if (!readonly()) {\r\n\t\t\t\t\t\t<button type="submit" [disabled]="!isValid()">Save</button>\r\n\t\t\t\t\t\t<button type="button" (click)="handleCancel()">Cancel</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true\r\n})\r\nexport class UserProfileFormComponent {\r\n\t// Signal inputs - work everywhere\r\n\ttitle = input(\'Edit Profile\');\r\n\tinitialName = input(\'\');\r\n\tinitialEmail = input(\'\');\r\n\treadonly = input(false);\r\n\r\n\t// Signal outputs - work everywhere\r\n\tonSubmit = output<{ name: string, email: string }>();\r\n\tonCancel = output<void>();\r\n\r\n\t// Internal component state\r\n\tname = signal(\'\');\r\n\temail = signal(\'\');\r\n\r\n\tngOnInit() {\r\n\t\tthis.name.set(this.initialName());\r\n\t\tthis.email.set(this.initialEmail());\r\n\t}\r\n\r\n\tisValid = computed(() =>\r\n\t\tthis.name().trim().length > 0 &&\r\n\t\tthis.email().includes(\'@\')\r\n\t);\r\n\r\n\thandleSubmit() {\r\n\t\tif (this.isValid()) {\r\n\t\t\tthis.onSubmit.emit({\r\n\t\t\t\tname: this.name(),\r\n\t\t\t\temail: this.email()\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thandleCancel() {\r\n\t\tthis.onCancel.emit();\r\n\t}\r\n}\r\n\r\n// This component works seamlessly in ALL contexts:\r\n\r\n// 1. ✅ In FktOverlay (with automatic type inference)\r\nthis.overlayService.open({\r\n\tcomponent: UserProfileFormComponent,\r\n\tdata: {\r\n\t\ttitle: \'Create New User\',\r\n\t\tinitialName: \'\',\r\n\t\tinitialEmail: \'\',\r\n\t\treadonly: false,\r\n\t\tonSubmit: (userData) => {\r\n\t\t\t// userData is automatically typed as { name: string, email: string }\r\n\t\t\tthis.userService.create(userData);\r\n\t\t\toverlayRef.close();\r\n\t\t},\r\n\t\tonCancel: () => overlayRef.close()\r\n\t}\r\n});\r\n\r\n// 2. ✅ In other overlay systems (like CDK Dialog)\r\nthis.dialog.open(UserProfileFormComponent, {\r\n\tdata: {\r\n\t\ttitle: \'Edit User\',\r\n\t\tinitialName: user.name,\r\n\t\tinitialEmail: user.email,\r\n\t\treadonly: !canEdit,\r\n\t\tonSubmit: (userData) => this.updateUser(userData),\r\n\t\tonCancel: () => dialogRef.close()\r\n\t}\r\n});\r\n\r\n// 3. ✅ As standalone component in templates\r\n@Component({\r\n\ttemplate: `\r\n\t\t<user-profile-form\r\n\t\t\t[title]="\'User Settings\'"\r\n\t\t\t[initialName]="currentUser.name"\r\n\t\t\t[initialEmail]="currentUser.email"\r\n\t\t\t[readonly]="!canEditProfile"\r\n\t\t\t(onSubmit)="updateProfile($event)"\r\n\t\t\t(onCancel)="navigateBack()"\r\n\t\t/>\r\n\t`\r\n})\r\nexport class ProfilePageComponent { /* ... */ }\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"how-the-typescript-inference-works",children:"How the TypeScript Inference Works"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The FktOverlay service uses advanced TypeScript reflection to analyze your component's signal-based API at compile time:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// The overlay service automatically extracts:\r\ntype ComponentInputs<T> = {\r\n\t[K in keyof T as T[K] extends InputSignal<any> ? K : never]: InputValue<T[K]>\r\n};\r\n\r\ntype ComponentOutputs<T> = {\r\n\t[K in keyof T as T[K] extends OutputEmitterRef<any> ? K : never]: CallbackFor<T[K]>\r\n};\r\n\r\ntype ComponentModels<T> = {\r\n\t[K in keyof T as T[K] extends ModelSignal<any> ? K : never]: WritableSignal<ModelValue<T[K]>>\r\n};\r\n\r\n// Results in perfectly typed overlay data:\r\ntype FktOverlayData<T> =\r\n\t& Partial<ComponentInputs<T>>   // All inputs become optional data properties\r\n\t& ComponentOutputs<T>           // All outputs become required callback functions\r\n\t& Partial<ComponentModels<T>>;  // All models become optional signal bindings\r\n\r\n// This magic only works with signal-based APIs!\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"migration-from-decorator-components",children:"Migration from Decorator Components"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If you have existing decorator-based components, here's how to migrate them:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// Before: Decorator-based (won't work with FktOverlay)\r\n@Component({ /* ... */ })\r\nexport class OldComponent {\r\n\t@Input() title: string = '';\r\n\t@Input() data?: MyData;\r\n\t@Input() config: Config = { theme: 'light' };\r\n\t@Output() save = new EventEmitter<FormData>();\r\n\t@Output() cancel = new EventEmitter<void>();\r\n}\r\n\r\n// After: Signal-based (works perfectly with FktOverlay)\r\n@Component({ /* ... */ })\r\nexport class NewComponent {\r\n\ttitle = input('');\r\n\tdata = input<MyData>();\r\n\tconfig = input<Config>({ theme: 'light' });\r\n\tsave = output<FormData>();\r\n\tcancel = output<void>();\r\n\r\n\t// Migration tip: Keep the same logic, just change the API\r\n\thandleSave() {\r\n\t\tconst formData = this.buildFormData();\r\n\t\tthis.save.emit(formData); // Same emit pattern\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"advanced-features--tips",children:"Advanced Features & Tips"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"reactive-data-binding-optional",children:"Reactive Data Binding (Optional)"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"While not required, signals enable powerful reactive patterns when you need real-time updates:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// Option 1: Static data (simple and fine for most cases)\r\ndata: {\r\n\ttitle: 'Static Title',\r\n\tmessage: 'This won't change after overlay opens'\r\n}\r\n\r\n// Option 2: Reactive data (when you need live updates)\r\ndata: {\r\n\ttitle: this.dynamicTitle, // Signal that can update\r\n\tmessage: this.liveMessage, // Updates reflect in overlay\r\n\tcounter: this.sharedCounter // Two-way binding with models\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"outside-click-customization",children:"Outside Click Customization"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Customize behavior when users click outside the overlay:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"panelOptions: {\r\n\toutsideClick: (clickedElement: HTMLElement) => {\r\n\t\tconsole.log('Clicked outside:', clickedElement);\r\n\t\t// Add custom logic before closing\r\n\t\tif (this.hasUnsavedChanges()) {\r\n\t\t\tif (confirm('Discard changes?')) {\r\n\t\t\t\toverlayRef.close();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toverlayRef.close();\r\n\t\t}\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"positioning-control",children:"Positioning Control"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Fine-tune overlay positioning behavior:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"panelOptions: {\r\n\tposition: 'bottom-start',\r\n\tdisableAutoReposition: true, // Stays in position even if off-screen\r\n\twidth: 'fit-content', // Adapts to content size\r\n\tmaxHeight: '400px', // Prevents oversized overlays\r\n\toverflow: 'auto' // Adds scrolling when needed\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"managing-multiple-overlays",children:"Managing Multiple Overlays"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Track and control multiple overlays independently:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"class MyComponent {\r\n\tprivate activeOverlays = new Map<string, FktOverlayRef<any>>();\r\n\r\n\topenNamedOverlay(id: string, config: any) {\r\n\t\t// Close existing overlay with same ID\r\n\t\tthis.closeOverlay(id);\r\n\r\n\t\tconst overlayRef = this.overlayService.open({\r\n\t\t\t...config,\r\n\t\t\tpanelOptions: { ...config.panelOptions, id }\r\n\t\t});\r\n\r\n\t\tthis.activeOverlays.set(id, overlayRef);\r\n\t\treturn overlayRef;\r\n\t}\r\n\r\n\tcloseOverlay(id: string) {\r\n\t\tconst overlay = this.activeOverlays.get(id);\r\n\t\tif (overlay) {\r\n\t\t\toverlay.close();\r\n\t\t\tthis.activeOverlays.delete(id);\r\n\t\t}\r\n\t}\r\n\r\n\tcloseAllOverlays() {\r\n\t\tthis.activeOverlays.forEach(overlay => overlay.close());\r\n\t\tthis.activeOverlays.clear();\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"data-binding-approaches",children:"Data Binding Approaches"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Static data"}),": Perfect for simple overlays that don't need updates after opening"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Reactive data"}),": Use signals/models when you need live updates between parent and overlay"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Callback functions"}),": Handle overlay outputs by passing callback functions in the data object"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Mixed approach"}),": Combine static and reactive data as needed for your use case"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Store references"}),": Keep overlay references when you need programmatic control"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Clean up properly"}),": Close overlays in component destruction to prevent memory leaks"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use unique IDs"}),": Assign custom IDs when managing multiple overlays independently"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Handle edge cases"}),": Consider what happens when users navigate away or refresh"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"positioning--responsiveness",children:"Positioning & Responsiveness"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Test different viewports"}),": Ensure overlays work well on various screen sizes"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Consider anchor positioning"}),": Choose appropriate positions based on content and layout"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use auto-repositioning wisely"}),": Enable by default, disable only when you need fixed positioning"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Handle overflow"}),": Set appropriate maxHeight and overflow for content that might be large"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Limit concurrent overlays"}),": Avoid opening too many overlays simultaneously"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Optimize component templates"}),": Keep overlay component templates lightweight"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use appropriate sizing"}),": Prefer 'fit-content' and specific sizes over 'auto' when possible"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Consider lazy loading"}),": For complex overlay content, consider loading data only when needed"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Overlays are properly positioned to avoid viewport edges"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Keyboard navigation is supported within overlay content"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Focus management is handled automatically"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"ARIA attributes should be added to overlay content as needed"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"performance",children:"Performance"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Overlays use efficient positioning calculations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Components are properly destroyed when overlays close"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Memory leaks are prevented through proper cleanup"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Positioning updates only when necessary"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Tooltips"}),":\r\nPerfect for contextual help and information displays."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Dropdown Menus"}),":\r\nIdeal for action menus and option selectors."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Popovers"}),":\r\nGreat for detailed information without navigation."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Form Helpers"}),":\r\nUseful for inline form assistance and validation messages."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Context Menus"}),":\r\nRight-click context menus and contextual actions."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Date Pickers"}),":\r\nCustom date selection overlays."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Color Pickers"}),":\r\nColor selection interfaces."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Search Results"}),":\r\nAutocomplete and search suggestion displays."]}),"\n"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_95b484d1674ba6b5eb76c19551a23f20_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);