"use strict";(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[2407],{"./libs/frakton-ng/textarea/src/fkt-textarea.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_a28e18d91e0886f85aadeddb70a4d92b/node_modules/@storybook/addon-docs/dist/blocks.mjs"),fkt_textarea_stories=__webpack_require__("./libs/frakton-ng/textarea/src/fkt-textarea.stories.ts"),StoryDoc=__webpack_require__("./libs/frakton-ng/.storybook/blocks/StoryDoc.tsx");const rawExamples={autoExpandExample:{name:"AutoExpandExample",files:[{name:"auto-expand-example.component.html",content:'<div class="container">\r\n\t<div class="container__info">\r\n\t\t<p class="container__info-text">Auto-expand is {{ autoExpand() ? \'enabled\' : \'disabled\' }}</p>\r\n\t\t<p>The textarea will {{ autoExpand() ? \'automatically grow\' : \'maintain fixed height\' }} as you type.</p>\r\n\t</div>\r\n\r\n\t<fkt-textarea\r\n\t\t[control]="control()"\r\n\t\t[label]="label()"\r\n\t\t[placeholder]="placeholder()"\r\n\t\t[autoExpand]="autoExpand()"\r\n\t/>\r\n\r\n\t<div class="container__hint">\r\n\t\t<p>Try typing multiple lines to see the auto-expand behavior.</p>\r\n\t\t<p>Lines count: {{ lineCount() }}</p>\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"auto-expand-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'textarea-auto-expand-example',\r\n\timports: [FktTextareaComponent],\r\n\ttemplateUrl: './auto-expand-example.component.html',\r\n\tstyleUrl: './auto-expand-example.component.scss'\r\n})\r\nexport class AutoExpandExampleComponent {\r\n\tcontrol = input(new SignalFormControl('Type here and press Enter to add new lines.\\nThe textarea will automatically expand to fit the content when auto-expand is enabled.'));\r\n\tlabel = input('Notes');\r\n\tplaceholder = input('Start typing...');\r\n\tautoExpand = input(true);\r\n\r\n\tlineCount() {\r\n\t\tconst value = this.control().value();\r\n\t\treturn value ? value.split('\\n').length : 0;\r\n\t}\r\n}\r\n",language:"typescript"},{name:"auto-expand-example.component.scss",content:".container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t\tbackground-color: var(--color-blue-50);\r\n\t\tpadding: var(--space-sm);\r\n\t\tborder-radius: var(--border-radius-md);\r\n\r\n\t\t&-text {\r\n\t\t\tfont-weight: var(--font-medium);\r\n\t\t}\r\n\t}\r\n\r\n\t&__hint {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n}\r\n",language:"css"}]},basicExample:{name:"BasicExample",files:[{name:"basic-example.component.html",content:'<div class="container">\r\n\t<fkt-textarea\r\n\t\t[control]="control()"\r\n\t\t[label]="label()"\r\n\t\t[placeholder]="placeholder()"\r\n\t/>\r\n\r\n\t<div class="container__info">\r\n\t\t<p>Current value: {{ control().value() || \'(empty)\' }}</p>\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"basic-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'textarea-basic-example',\r\n\timports: [FktTextareaComponent],\r\n\ttemplateUrl: './basic-example.component.html',\r\n\tstyleUrl: './basic-example.component.scss'\r\n})\r\nexport class BasicExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Description');\r\n\tplaceholder = input('Enter a detailed description...');\r\n}\r\n",language:"typescript"},{name:"basic-example.component.scss",content:".container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n}\r\n",language:"css"}]},characterCounterExample:{name:"CharacterCounterExample",files:[{name:"character-counter-example.component.html",content:'<div class="container">\r\n\t<fkt-textarea\r\n\t\tautoExpand\r\n\t\t[control]="control"\r\n\t\t[label]="label()"\r\n\t\t[placeholder]="placeholder()"\r\n\t/>\r\n\r\n\t<div class="container__elements">\r\n\t\t\x3c!-- Character counter --\x3e\r\n\t\t<div class="container__character-counter">\r\n\t\t\t<span class="container__character-counter__text">Character count:</span>\r\n\t\t\t<span\r\n\t\t\t\tclass="container__character-counter__indicator"\r\n\t\t\t\t[class.container__character-counter__indicator--valid]="characterCount() <= warningThreshold()"\r\n\t\t\t\t[class.container__character-counter__indicator--warning]="characterCount() > warningThreshold() && characterCount() <= maxLength()"\r\n\t\t\t\t[class.container__character-counter__indicator--invalid]="characterCount() > maxLength()"\r\n\t\t\t>\r\n\t\t\t\t{{ characterCount() }} / {{ maxLength() }}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t\x3c!-- Progress bar --\x3e\r\n\t\t<div class="container__progress-bar">\r\n\t\t\t<div\r\n\t\t\t\t[class.container__progress-bar--valid]="characterCount() <= warningThreshold()"\r\n\t\t\t\t[class.container__progress-bar--warning]="characterCount() > warningThreshold() && characterCount() <= maxLength()"\r\n\t\t\t\t[class.container__progress-bar--invalid]="characterCount() > maxLength()"\r\n\t\t\t\t[style.width.%]="progressPercentage()"\r\n\t\t\t></div>\r\n\t\t</div>\r\n\r\n\t\t\x3c!-- Stats --\x3e\r\n\t\t<div class="container__stats">\r\n\t\t\t<div>\r\n\t\t\t\t<span>Words:</span> {{ wordCount() }}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>Lines:</span> {{ lineCount() }}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>Remaining:</span> {{ remainingCharacters() }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t\x3c!-- Warning messages --\x3e\r\n\t\t@if (characterCount() > warningThreshold()) {\r\n\t\t\t<div class="container__warning-messages">\r\n\t\t\t\t@if (characterCount() <= maxLength()) {\r\n\t\t\t\t\t<p class="container__warning-messages--warning">⚠️ You\'re approaching the character limit</p>\r\n\t\t\t\t}\r\n\t\t\t\t@if (characterCount() > maxLength()) {\r\n\t\t\t\t\t<p class="container__warning-messages--invalid">❌ Character limit exceeded by {{ characterCount() - maxLength() }}\r\n\t\t\t\t\t\tcharacters</p>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t}\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"character-counter-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { SignalFormControl, SignalValidators } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'textarea-character-counter-example',\r\n\timports: [FktTextareaComponent],\r\n\ttemplateUrl: './character-counter-example.component.html',\r\n\tstyleUrl: './character-counter-example.component.scss'\r\n})\r\nexport class CharacterCounterExampleComponent {\r\n\tmaxLength = input(280); // Twitter-like limit\r\n\twarningThreshold = computed(() => Math.floor(this.maxLength() * 0.8));\r\n\tlabel = input('Tweet');\r\n\tplaceholder = input(\"What's happening?\");\r\n\r\n\tprotected control = new SignalFormControl<string>('', {\r\n\t\tvalidators: [\r\n\t\t\tSignalValidators.maxLength(this.maxLength())\r\n\t\t]\r\n\t});\r\n\r\n\tprotected characterCount = computed(() => {\r\n\t\tconst value = this.control.value();\r\n\t\treturn value?.length || 0;\r\n\t});\r\n\r\n\tprotected wordCount = computed(() => {\r\n\t\tconst value = this.control.value();\r\n\t\tif (!value) return 0;\r\n\t\tconst text = value.trim();\r\n\t\treturn text ? text.split(/\\s+/).length : 0;\r\n\t});\r\n\r\n\tprotected lineCount = computed(() => {\r\n\t\tconst value = this.control.value();\r\n\t\tif (!value) return 1;\r\n\t\treturn value.split('\\n').length;\r\n\t});\r\n\r\n\tprotected remainingCharacters = computed(() => {\r\n\t\tconst remaining = this.maxLength() - this.characterCount();\r\n\t\treturn remaining >= 0 ? remaining : 0;\r\n\t});\r\n\r\n\tprotected progressPercentage = computed(() => {\r\n\t\tconst percentage = (this.characterCount() / this.maxLength()) * 100;\r\n\t\treturn Math.min(percentage, 100);\r\n\t});\r\n}\r\n",language:"typescript"},{name:"character-counter-example.component.scss",content:".container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\tfkt-textarea {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t&__elements {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-xs);\r\n\t}\r\n\r\n\t&__character-counter {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\r\n\t\t&__text {\r\n\t\t\tfont-size: var(--font-size-sm);\r\n\t\t\tcolor: var(--color-gray-600);\r\n\t\t}\r\n\r\n\t\t&__indicator {\r\n\t\t\tfont-size: var(--font-size-sm);\r\n\t\t\tfont-weight: var(--font-medium);\r\n\r\n\t\t\t&--valid {\r\n\t\t\t\tcolor: var(--color-gray-700);\r\n\t\t\t}\r\n\r\n\t\t\t&--warning {\r\n\t\t\t\tcolor: var(--color-yellow-600);\r\n\t\t\t}\r\n\r\n\t\t\t&--invalid {\r\n\t\t\t\tcolor: var(--color-red-600);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t&__progress-bar {\r\n\t\twidth: 100%;\r\n\t\tbackground-color: var(--color-gray-200);\r\n\t\tborder-radius: var(--radius-full);\r\n\t\theight: .5rem;\r\n\r\n\t\tdiv {\r\n\t\t\theight: 100%;\r\n\t\t\ttransition: var(--transition-base);\r\n\t\t}\r\n\r\n\t\t&--valid {\r\n\t\t\tbackground-color: var(--color-green-500);\r\n\t\t}\r\n\r\n\t\t&--warning {\r\n\t\t\tbackground-color: var(--color-yellow-500);\r\n\t\t}\r\n\r\n\t\t&--invalid {\r\n\t\t\tbackground-color: var(--color-red-500);\r\n\t\t}\r\n\t}\r\n\r\n\t&__stats {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(3, minmax(0, 1fr));\r\n\t\tgap: var(--space-xs);\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tline-height: 1rem;\r\n\t\tcolor: var(--color-gray-600);\r\n\r\n\t\tspan {\r\n\t\t\tfont-weight: var(--font-medium);\r\n\t\t}\r\n\t}\r\n\r\n\t&__warning-messages {\r\n\t\tfont-size: var(--font-size-sm);\r\n\r\n\t\t&--warning {\r\n\t\t\tcolor: var(--color-yellow-600);\r\n\t\t}\r\n\r\n\t\t&--invalid {\r\n\t\t\tcolor: var(--color-red-600);\r\n\t\t}\r\n\t}\r\n}\r\n",language:"css"}]},disabledExample:{name:"DisabledExample",files:[{name:"disabled-example.component.html",content:'<div class="container">\r\n\t<fkt-textarea\r\n\t\tautoExpand\r\n\t\t[control]="control"\r\n\t\t[label]="label()"\r\n\t\t[placeholder]="placeholder()"\r\n\t/>\r\n\r\n\t<div class="container__status">\r\n\t\t<fkt-button\r\n\t\t\t(click)="toggleDisabled()"\r\n\t\t\t[text]="(control.disabled() ? \'Enable\' : \'Disable\') + \' textarea\'"\r\n\t\t>\r\n\t\t</fkt-button>\r\n\r\n\t\t<span>\r\n\t\t\tStatus: <strong>{{ control.disabled() ? \'Disabled\' : \'Enabled\' }}</strong>\r\n\t\t</span>\r\n\t</div>\r\n\r\n\t<div class="container__message">\r\n\t\t<p>Disabled textareas prevent user interaction while preserving the current value.</p>\r\n\t\t<p>Common use cases include read-only views, locked fields, or conditional editing.</p>\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"disabled-example.component.ts",content:"import { Component, input, OnInit } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\n\r\n@Component({\r\n\tselector: 'textarea-disabled-example',\r\n\timports: [FktTextareaComponent, FktButtonComponent],\r\n\ttemplateUrl: './disabled-example.component.html',\r\n\tstyleUrl: './disabled-example.component.scss'\r\n})\r\nexport class DisabledExampleComponent implements OnInit {\r\n\tlabel = input('Terms and Conditions');\r\n\tplaceholder = input('Content will appear here...');\r\n\tinitialDisabled = input(true);\r\n\r\n\tcontrol = new SignalFormControl(`\r\nThis is a sample legal text that cannot be edited by the user.\r\nBy using our service, you agree to these terms and conditions. This text field is disabled to prevent modifications to the legal agreement.\r\nThe disabled state is useful for displaying read-only content while maintaining the form field structure.`.trim()\r\n\t);\r\n\r\n\tngOnInit() {\r\n\t\tthis.control.disable();\r\n\t}\r\n\r\n\ttoggleDisabled() {\r\n\t\tif (this.control.disabled()) {\r\n\t\t\tthis.control.enable();\r\n\t\t} else {\r\n\t\t\tthis.control.disable();\r\n\t\t}\r\n\t}\r\n}\r\n",language:"typescript"},{name:"disabled-example.component.scss",content:".container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__status {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tgap: var(--space-md);\r\n\r\n\t\tspan {\r\n\t\t\tfont-size: var(--font-size-sm);\r\n\t\t\tcolor: var(--color-gray-600);\r\n\t\t}\r\n\t}\r\n\r\n\t&__message {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n}\r\n",language:"css"}]},formIntegrationExample:{name:"FormIntegrationExample",files:[{name:"form-integration-example.component.html",content:'<div class="container">\r\n\t<h3>Contact Form</h3>\r\n\r\n\t<fkt-form (submit)="handleSubmit()" [form]="form">\r\n\t\t<div class="container__form">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="form.controls.name"\r\n\t\t\t\t[label]="\'Name\'"\r\n\t\t\t\t[placeholder]="\'Your name\'"\r\n\t\t\t\t[type]="\'text\'"\r\n\t\t\t/>\r\n\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="form.controls.email"\r\n\t\t\t\t[label]="\'Email\'"\r\n\t\t\t\t[placeholder]="\'your@email.com\'"\r\n\t\t\t\t[type]="\'email\'"\r\n\t\t\t/>\r\n\r\n\t\t\t<fkt-textarea\r\n\t\t\t\t[control]="form.controls.message"\r\n\t\t\t\t[label]="\'Message\'"\r\n\t\t\t\t[placeholder]="\'Please describe your inquiry in detail...\'"\r\n\t\t\t/>\r\n\r\n\t\t\t<fkt-textarea\r\n\t\t\t\t[control]="form.controls.additionalInfo"\r\n\t\t\t\t[label]="\'Additional Information (Optional)\'"\r\n\t\t\t\t[placeholder]="\'Any other details you would like to share...\'"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__form__footer">\r\n\t\t\t\t<div class="container__form__footer-message">\r\n\t\t\t\t\t\t<span [class.container__form__footer-message--valid]="form.valid()">\r\n\t\t\t\t\t\t\t{{ form.valid() ? \'✓ Form is valid\' : \'Please fill all required fields\' }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="container__form__actions">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t(click)="resetForm()"\r\n\t\t\t\t\t\ttext="Reset"\r\n\t\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttype="submit"\r\n\t\t\t\t\t\ttext="Submit"\r\n\t\t\t\t\t\t[disabled]="!form.valid()"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</fkt-form>\r\n\r\n\t@if (submittedData()) {\r\n\t\t<div class="container__success-message">\r\n\t\t\t<h4>Form Submitted Successfully!</h4>\r\n\t\t\t<pre>{{ submittedData() | json }}</pre>\r\n\t\t</div>\r\n\t}\r\n</div>\r\n',language:"html"},{name:"form-integration-example.component.ts",content:"import { Component, inject, signal } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { FktInputComponent } from 'frakton-ng/input';\r\nimport { SignalFormBuilder, SignalFormGroupValue, SignalValidators } from 'frakton-ng/forms';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FktFormComponent } from 'frakton-ng/form';\r\n\r\n@Component({\r\n\tselector: 'textarea-form-integration-example',\r\n\timports: [FktTextareaComponent, FktInputComponent, JsonPipe, FktButtonComponent, FktFormComponent],\r\n\ttemplateUrl: './form-integration-example.component.html',\r\n\tstyleUrl: './form-integration-example.component.scss'\r\n})\r\nexport class FormIntegrationExampleComponent {\r\n\tprivate fb = inject(SignalFormBuilder);\r\n\r\n\tprotected form = this.fb.group({\r\n\t\tname: ['', SignalValidators.required()],\r\n\t\temail: ['', [SignalValidators.required(), SignalValidators.email()]],\r\n\t\tmessage: ['', [\r\n\t\t\tSignalValidators.required(),\r\n\t\t\tSignalValidators.minLength(10),\r\n\t\t\tSignalValidators.maxLength(1000)\r\n\t\t]],\r\n\t\tadditionalInfo: ''\r\n\t});\r\n\r\n\tsubmittedData = signal<SignalFormGroupValue<typeof this.form> | null>(null);\r\n\r\n\thandleSubmit() {\r\n\t\tif (this.form.valid()) {\r\n\t\t\tconst formData = {\r\n\t\t\t\t...this.form.value(),\r\n\t\t\t\tsubmittedAt: new Date().toISOString()\r\n\t\t\t};\r\n\r\n\t\t\tthis.submittedData.set(formData);\r\n\r\n\t\t\tconsole.log('Form submitted:', formData);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.resetForm();\r\n\t\t\t\tthis.submittedData.set(null);\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t}\r\n\r\n\tresetForm() {\r\n\t\tthis.form.reset();\r\n\t\tthis.form.markAllAsUntouched();\r\n\t\tthis.submittedData.set(null);\r\n\t}\r\n}\r\n",language:"typescript"},{name:"form-integration-example.component.scss",content:"h3, h4 {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\th3 {\r\n\t\tfont-size: var(--font-size-lg);\r\n\t\tfont-weight: var(--font-semibold);\r\n\t}\r\n\r\n\t&__form {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-xs);\r\n\r\n\t\t&__footer {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\r\n\t\t\t&-message {\r\n\t\t\t\tfont-size: var(--font-size-sm);\r\n\t\t\t\tcolor: var(--color-gray-600);\r\n\r\n\t\t\t\t&--valid {\r\n\t\t\t\t\tcolor: var(--color-green-600);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&__actions {\r\n\t\t\tdisplay: flex;\r\n\t\t\tgap: var(--space-xs);\r\n\t\t}\r\n\t}\r\n\r\n\t&__success-message {\r\n\t\tmargin-top: var(--space-md);\r\n\t\tpadding: var(--space-md);\r\n\t\tbackground-color: var(--color-green-50);\r\n\t\tborder: solid 1px var(--color-green-200);\r\n\t\tborder-radius: var(--radius-md);\r\n\r\n\t\th4 {\r\n\t\t\tfont-weight: var(--font-medium);\r\n\t\t\tcolor: var(--color-green-800);\r\n\t\t}\r\n\r\n\t\tpre {\r\n\t\t\tmargin-top: var(--space-xs);\r\n\t\t\tfont-size: var(--font-size-sm);\r\n\t\t\tcolor: var(--color-gray-700);\r\n\t\t}\r\n\t}\r\n}\r\n",language:"css"}]},validationExample:{name:"ValidationExample",files:[{name:"validation-example.component.html",content:'<div class="validation-example">\r\n\t\t\t<fkt-textarea\r\n\t\t\t\t[control]="control"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="validation-example__container">\r\n\t\t\t\t<div class="validation-example__status">\r\n\t\t\t\t\t<span class="validation-example__status-label">Status:</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass="validation-example__status-content"\r\n\t\t\t\t\t\t[class.validation-example__status-content--valid]="control.valid()"\r\n\t\t\t\t\t\t[class.validation-example__status-content--invalid]="control.invalid()">\r\n\t\t\t\t\t\t{{ control.valid() ? \'Valid\' : \'Invalid\' }}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="validation-example__info">\r\n\t\t\t\t\t<div class="validation-example__info-label">\r\n\t\t\t\t\t\t<strong>Character count:</strong>\r\n\t\t\t\t\t\t<span>{{ characterCount() }}/{{ maxLength() }}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class="validation-example__info-label">\r\n\t\t\t\t\t\t<strong>Required minimum:</strong>\r\n\t\t\t\t\t\t<span>{{ minLength() }} characters</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"validation-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktTextareaComponent } from 'frakton-ng/textarea';\r\nimport { SignalFormControl, SignalValidators } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'textarea-validation-example',\r\n\timports: [FktTextareaComponent],\r\n\ttemplateUrl: './validation-example.component.html',\r\n\tstyleUrl: './validation-example.component.scss'\r\n})\r\nexport class ValidationExampleComponent {\r\n\tminLength = input(20);\r\n\tmaxLength = input(500);\r\n\tlabel = input('Bio');\r\n\tplaceholder = input('Tell us about yourself...');\r\n\r\n\tcontrol = new SignalFormControl('', {\r\n\t\tvalidators: [\r\n\t\t\tSignalValidators.required(),\r\n\t\t\tSignalValidators.minLength(this.minLength()),\r\n\t\t\tSignalValidators.maxLength(this.maxLength())\r\n\t\t]\r\n\t});\r\n\r\n\tcharacterCount = computed(() => {\r\n\t\treturn this.control.value()?.length || 0;\r\n\t});\r\n}\r\n",language:"typescript"},{name:"validation-example.component.scss",content:".validation-example {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-xs);\r\n\t}\r\n\r\n\t&__status {\r\n\t\tfont-size: var(--font-size-sm);\r\n\r\n\t\t&-label {\r\n\t\t\tfont-weight: var(--font-semibold);\r\n\t\t}\r\n\r\n\t\t&-content {\r\n\t\t\t&--valid {\r\n\t\t\t\tcolor: var(--color-green-600);\r\n\t\t\t}\r\n\r\n\t\t\t&--invalid {\r\n\t\t\t\tcolor: var(--color-red-600);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-xs);\r\n\r\n\t\t&-label {\r\n\t\t\tdisplay: flex;\r\n\t\t\tgap: var(--space-xs);\r\n\r\n\t\t\tstrong {\r\n\t\t\t\tfont-weight: var(--font-semibold);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n",language:"css"}]}};function _createMdxContent(props){const _components={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{of:fkt_textarea_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"fkttextarea",children:"FktTextarea"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"A multi-line text input component with reactive form integration, validation support, and optional auto-expand functionality for capturing longer text content from users._"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Multi-line Text Input"}),": Expandable textarea for capturing longer text content"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Auto-expand Mode"}),": Automatically adjusts height to fit content (optional)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Form Integration"}),": Seamless integration with Angular reactive forms via SignalFormControl"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Validation Support"}),": Built-in error display with customizable validation rules"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Programmatic Focus"}),": Public method for focusing the textarea programmatically"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Disabled State"}),": Support for disabled/read-only states with visual feedback"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Responsive Design"}),": Adapts to container width and screen sizes"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,jsx_runtime.jsx)(blocks.ov,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.BasicUsage,code:rawExamples.basicExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.Validation,code:rawExamples.validationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.AutoExpand,code:rawExamples.autoExpandExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.FormIntegration,code:rawExamples.formIntegrationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.CharacterCounter,code:rawExamples.characterCounterExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_textarea_stories.DisabledState,code:rawExamples.disabledExample}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Contact Forms"}),": Capture detailed messages and inquiries from users"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Content Management"}),": Create and edit articles, blog posts, and documentation"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Feedback Collection"}),": Gather user reviews, comments, and suggestions"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Data Entry"}),": Input descriptions, notes, and multi-line data in business applications"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Social Media"}),": Compose posts, tweets, and status updates with character limits"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Code Editors"}),": Input and display code snippets with proper formatting"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Support Tickets"}),": Describe issues and provide detailed problem reports"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Full keyboard support with Tab for focus and standard text navigation"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Screen Reader Support"}),": Proper ARIA labels and error announcements"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Focus Management"}),": Clear visual focus indicators and programmatic focus control via the ",(0,jsx_runtime.jsx)(_components.code,{children:"focus()"})," method"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Error Communication"}),": Validation errors are properly associated with the textarea and announced to assistive technologies"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);