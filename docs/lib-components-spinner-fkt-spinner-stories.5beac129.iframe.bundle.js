(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[3681],{"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./projects/core/src/lib/components/spinner/fkt-spinner.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n.spinner {\n  width: var(--size, 80px);\n  height: var(--size, 80px);\n  border: solid var(--stroke, 6px) var(--color-gray-200);\n  border-radius: var(--radius-full);\n  animation: spin 1s linear infinite;\n}\n.spinner.primary {\n  border-top-color: var(--color-gray-500);\n}\n.spinner.yellow {\n  border-top-color: var(--color-yellow-500);\n}\n.spinner.red {\n  border-top-color: var(--color-red-500);\n}\n.spinner.green {\n  border-top-color: var(--color-green-500);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/core/src/lib/components/spinner/fkt-spinner.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>FktSpinnerComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var fkt_spinner_componentngResource=__webpack_require__("./projects/core/src/lib/components/spinner/fkt-spinner.component.scss?ngResource"),fkt_spinner_componentngResource_default=__webpack_require__.n(fkt_spinner_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.2_@angul_abcfcf6a9409fdd9084622a4644a8bda/node_modules/@angular/core/fesm2022/core.mjs"),debug_node=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.2_@angul_abcfcf6a9409fdd9084622a4644a8bda/node_modules/@angular/core/fesm2022/debug_node.mjs");let FktSpinnerComponent=class FktSpinnerComponent{size=(0,core.input)(40);stroke=(0,core.input)(4);color=(0,core.input)("primary");static propDecorators={size:[{type:debug_node.pde,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],stroke:[{type:debug_node.pde,args:[{isSignal:!0,alias:"stroke",required:!1,transform:void 0}]}],color:[{type:debug_node.pde,args:[{isSignal:!0,alias:"color",required:!1,transform:void 0}]}]}};FktSpinnerComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"fkt-spinner",imports:[],template:"<div\r\n\t[style.--stroke]=\"stroke() + 'px'\"\r\n\t[style.--size]=\"size() +  'px'\"\r\n\t[class]=\"'spinner ' + color()\">\r\n</div>\r\n",styles:[fkt_spinner_componentngResource_default()]})],FktSpinnerComponent)},"./projects/core/src/lib/components/spinner/fkt-spinner.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ButtonIntegration:()=>ButtonIntegration,ColorThemes:()=>ColorThemes,CustomConfiguration:()=>CustomConfiguration,Default:()=>Default,LargeOverlay:()=>LargeOverlay,LoadingState:()=>LoadingState,SizeVariations:()=>SizeVariations,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.2_@angul_abcfcf6a9409fdd9084622a4644a8bda/node_modules/@angular/core/fesm2022/debug_node.mjs"),_shared_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/core/src/lib/shared/types/fkt-color.ts"),_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/core/src/lib/components/spinner/fkt-spinner.component.ts");const meta={title:"Components/Spinner",component:_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o,argTypes:{color:{control:"select",options:_shared_types__WEBPACK_IMPORTED_MODULE_2__.U},size:{control:"number"},stroke:{control:"number"}}};let DefaultStoryComponent=class DefaultStoryComponent{};DefaultStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"default-story",template:"\n        <fkt-spinner />\n    ",standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],DefaultStoryComponent);const Default={render:args=>({component:DefaultStoryComponent,props:args})};let SizeVariationsStoryComponent=class SizeVariationsStoryComponent{};SizeVariationsStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"size-variations-story",template:'\n        <div class="flex items-center gap-6">\n            <div class="text-center">\n                <fkt-spinner [size]="24" />\n                <p class="mt-2 text-sm text-gray-600">Small (24px)</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner [size]="48" />\n                <p class="mt-2 text-sm text-gray-600">Medium (48px)</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner [size]="72" />\n                <p class="mt-2 text-sm text-gray-600">Large (72px)</p>\n            </div>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],SizeVariationsStoryComponent);const SizeVariations={render:args=>({component:SizeVariationsStoryComponent,props:args})};let ColorThemesStoryComponent=class ColorThemesStoryComponent{};ColorThemesStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"color-themes-story",template:'\n        <div class="flex items-center gap-6">\n            <div class="text-center">\n                <fkt-spinner color="primary" />\n                <p class="mt-2 text-sm text-gray-600">Primary</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner color="green" />\n                <p class="mt-2 text-sm text-gray-600">Green</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner color="yellow" />\n                <p class="mt-2 text-sm text-gray-600">Yellow</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner color="red" />\n                <p class="mt-2 text-sm text-gray-600">Red</p>\n            </div>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],ColorThemesStoryComponent);const ColorThemes={render:args=>({component:ColorThemesStoryComponent,props:args})};let LoadingStateStoryComponent=class LoadingStateStoryComponent{isLoading=!1;toggleLoading(){this.isLoading=!this.isLoading}};LoadingStateStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"loading-state-story",template:'\n        <div class="space-y-4">\n            <button\n                (click)="toggleLoading()"\n                class="px-4 py-2 bg-blue-500 text-white rounded"\n            >\n                {{ isLoading ? \'Stop Loading\' : \'Start Loading\' }}\n            </button>\n            <div class="flex items-center gap-3" *ngIf="isLoading">\n                <fkt-spinner [size]="24" />\n                <span>Loading data...</span>\n            </div>\n            <div *ngIf="!isLoading" class="text-green-600">\n                âœ“ Data loaded successfully!\n            </div>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],LoadingStateStoryComponent);const LoadingState={render:args=>({component:LoadingStateStoryComponent,props:args})};let ButtonIntegrationStoryComponent=class ButtonIntegrationStoryComponent{isSaving=!1;isDeleting=!1;save(){this.isSaving=!0,setTimeout(()=>{this.isSaving=!1,console.log("Saved!")},2e3)}delete(){this.isDeleting=!0,setTimeout(()=>{this.isDeleting=!1,console.log("Deleted!")},2e3)}};ButtonIntegrationStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"button-integration-story",template:'\n        <div class="flex gap-4">\n            <button\n                (click)="save()"\n                [disabled]="isSaving"\n                class="flex items-center gap-2 px-4 py-2 bg-blue-500 text-white rounded disabled:opacity-50"\n            >\n                <fkt-spinner *ngIf="isSaving" [size]="16" color="primary" />\n                {{ isSaving ? \'Saving...\' : \'Save\' }}\n            </button>\n            <button\n                (click)="delete()"\n                [disabled]="isDeleting"\n                class="flex items-center gap-2 px-4 py-2 bg-red-500 text-white rounded disabled:opacity-50"\n            >\n                <fkt-spinner *ngIf="isDeleting" [size]="16" color="red" />\n                {{ isDeleting ? \'Deleting...\' : \'Delete\' }}\n            </button>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],ButtonIntegrationStoryComponent);const ButtonIntegration={render:args=>({component:ButtonIntegrationStoryComponent,props:args})};let LargeOverlayStoryComponent=class LargeOverlayStoryComponent{showOverlay=!1;toggleOverlay(){this.showOverlay=!this.showOverlay}};LargeOverlayStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"large-overlay-story",template:'\n        <div class="space-y-4">\n            <button\n                (click)="toggleOverlay()"\n                class="px-4 py-2 bg-blue-500 text-white rounded"\n            >\n                {{ showOverlay ? \'Hide Overlay\' : \'Show Overlay\' }}\n            </button>\n            <div class="relative w-full h-64 bg-gray-100 rounded border-2 border-dashed border-gray-300 flex items-center justify-center">\n                <div *ngIf="!showOverlay" class="text-gray-500">Content area</div>\n                <div *ngIf="showOverlay" class="absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center">\n                    <div class="text-center">\n                        <fkt-spinner [size]="64" />\n                        <p class="mt-4 text-gray-600">Processing...</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],LargeOverlayStoryComponent);const LargeOverlay={render:args=>({component:LargeOverlayStoryComponent,props:args})};let CustomConfigurationStoryComponent=class CustomConfigurationStoryComponent{};CustomConfigurationStoryComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.uAl)({selector:"custom-configuration-story",template:'\n        <div class="space-y-6">\n            <div class="text-center">\n                <fkt-spinner\n                    [size]="96"\n                    [stroke]="2"\n                    color="primary"\n                />\n                <p class="mt-2 text-sm text-gray-600">Thin stroke (2px)</p>\n            </div>\n            <div class="text-center">\n                <fkt-spinner\n                    [size]="96"\n                    [stroke]="8"\n                    color="green"\n                />\n                <p class="mt-2 text-sm text-gray-600">Thick stroke (8px)</p>\n            </div>\n        </div>\n    ',standalone:!0,imports:[_fkt_spinner_component__WEBPACK_IMPORTED_MODULE_3__.o]})],CustomConfigurationStoryComponent);const CustomConfiguration={render:args=>({component:CustomConfigurationStoryComponent,props:args})},__WEBPACK_DEFAULT_EXPORT__=meta,__namedExportsOrder=["Default","SizeVariations","ColorThemes","LoadingState","ButtonIntegration","LargeOverlay","CustomConfiguration"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: DefaultStoryComponent,\n    props: args\n  })\n}",...Default.parameters?.docs?.source}}},SizeVariations.parameters={...SizeVariations.parameters,docs:{...SizeVariations.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: SizeVariationsStoryComponent,\n    props: args\n  })\n}",...SizeVariations.parameters?.docs?.source}}},ColorThemes.parameters={...ColorThemes.parameters,docs:{...ColorThemes.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: ColorThemesStoryComponent,\n    props: args\n  })\n}",...ColorThemes.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: LoadingStateStoryComponent,\n    props: args\n  })\n}",...LoadingState.parameters?.docs?.source}}},ButtonIntegration.parameters={...ButtonIntegration.parameters,docs:{...ButtonIntegration.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: ButtonIntegrationStoryComponent,\n    props: args\n  })\n}",...ButtonIntegration.parameters?.docs?.source}}},LargeOverlay.parameters={...LargeOverlay.parameters,docs:{...LargeOverlay.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: LargeOverlayStoryComponent,\n    props: args\n  })\n}",...LargeOverlay.parameters?.docs?.source}}},CustomConfiguration.parameters={...CustomConfiguration.parameters,docs:{...CustomConfiguration.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    component: CustomConfigurationStoryComponent,\n    props: args\n  })\n}",...CustomConfiguration.parameters?.docs?.source}}}},"./projects/core/src/lib/shared/types/fkt-color.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{U:()=>fktColors});const fktColors=["red","primary","yellow","green"]}}]);