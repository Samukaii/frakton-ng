"use strict";(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[5915],{"./libs/frakton-ng/navigator/src/fkt-navigator.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_a28e18d91e0886f85aadeddb70a4d92b/node_modules/@storybook/addon-docs/dist/blocks.mjs"),fkt_navigator_stories=__webpack_require__("./libs/frakton-ng/navigator/src/fkt-navigator.stories.ts"),StoryDoc=__webpack_require__("./libs/frakton-ng/.storybook/blocks/StoryDoc.tsx");const rawExamples={basicExample:{name:"BasicExample",files:[{name:"basic-example.component.html",content:'<fkt-navigator\r\n\t\t\t[canGoToPrevious]="canGoToPrevious()"\r\n\t\t\t[canGoToNext]="canGoToNext()"\r\n\t\t\t(previous)="goToPrevious()"\r\n\t\t\t(next)="goToNext()"\r\n\t\t/>',language:"html"},{name:"basic-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'basic-example',\r\n\ttemplateUrl: './basic-example.component.html',\r\n\timports: [FktNavigatorComponent]\r\n})\r\nexport class BasicExampleComponent {\r\n\tprotected canGoToPrevious = input(true);\r\n\tprotected canGoToNext = input(true);\r\n\r\n\tprotected goToPrevious() {\r\n\t\tconsole.log('Navigate to previous');\r\n\t}\r\n\r\n\tprotected goToNext() {\r\n\t\tconsole.log('Navigate to next');\r\n\t}\r\n}\r\n",language:"typescript"},{name:"basic-example.component.scss",content:"",language:"css"}]},dateNavigationExample:{name:"DateNavigationExample",files:[{name:"date-navigation-example.component.html",content:'<div class="container">\r\n\t<fkt-navigator\r\n\t\t[canGoToPrevious]="true"\r\n\t\t[canGoToNext]="true"\r\n\t\t(previous)="previousMonth()"\r\n\t\t(next)="nextMonth()"\r\n\t>\r\n\t\t<div class="container__content">\r\n\t\t\t{{ formattedDate() }}\r\n\t\t</div>\r\n\t</fkt-navigator>\r\n</div>\r\n',language:"html"},{name:"date-navigation-example.component.ts",content:"import { Component, computed, signal } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'date-navigation-example',\r\n\ttemplateUrl: './date-navigation-example.component.html',\r\n\timports: [FktNavigatorComponent]\r\n})\r\nexport class DateNavigationExampleComponent {\r\n\tprotected currentDate = signal(new Date());\r\n\r\n\tprotected formattedDate = computed(() => {\r\n\t\treturn this.currentDate().toLocaleDateString('en-US', { month: 'long', year: 'numeric' })\r\n\t})\r\n\r\n\tprotected previousMonth() {\r\n\t\tthis.currentDate.update(date =>\r\n\t\t\tnew Date(date.getFullYear(), date.getMonth() - 1, 1)\r\n\t\t);\r\n\t}\r\n\r\n\tprotected nextMonth() {\r\n\t\tthis.currentDate.update(date =>\r\n\t\t\tnew Date(date.getFullYear(), date.getMonth() + 1, 1)\r\n\t\t);\r\n\t}\r\n}\r\n\r\n",language:"typescript"},{name:"date-navigation-example.component.scss",content:".container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__content {\r\n\t\ttext-align: center;\r\n\t\tfont-size: var(--font-size-lg);\r\n\t\tfont-weight: var(--font-medium);\r\n\t}\r\n}\r\n",language:"css"}]},disabledStateExample:{name:"DisabledStateExample",files:[{name:"disabled-state-example.component.html",content:'<div class="container">\r\n\t<div>\r\n\t\t<h3>Previous Disabled</h3>\r\n\t\t<fkt-navigator\r\n\t\t\t[canGoToPrevious]="false"\r\n\t\t\t[canGoToNext]="true"\r\n\t\t\t(previous)="onPrevious()"\r\n\t\t\t(next)="onNext()"\r\n\t\t/>\r\n\t</div>\r\n\t<div>\r\n\t\t<h3>Next Disabled</h3>\r\n\t\t<fkt-navigator\r\n\t\t\t[canGoToPrevious]="true"\r\n\t\t\t[canGoToNext]="false"\r\n\t\t\t(previous)="onPrevious()"\r\n\t\t\t(next)="onNext()"\r\n\t\t/>\r\n\t</div>\r\n\t<div>\r\n\t\t<h3>Both Disabled</h3>\r\n\t\t<fkt-navigator\r\n\t\t\t[canGoToPrevious]="false"\r\n\t\t\t[canGoToNext]="false"\r\n\t\t\t(previous)="onPrevious()"\r\n\t\t\t(next)="onNext()"\r\n\t\t/>\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"disabled-state-example.component.ts",content:"import { Component } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'disabled-states-example',\r\n\ttemplateUrl: './disabled-state-example.component.html',\r\n\timports: [FktNavigatorComponent]\r\n})\r\nexport class DisabledStateExampleComponent {\r\n\tprotected onPrevious() {\r\n\t\tconsole.log('Previous clicked');\r\n\t}\r\n\r\n\tprotected onNext() {\r\n\t\tconsole.log('Next clicked');\r\n\t}\r\n}\r\n",language:"typescript"},{name:"disabled-state-example.component.scss",content:"h3 {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-sm);\r\n\r\n\th3 {\r\n\t\tfont-weight: var(--font-medium);\r\n\t\tmargin-bottom: var(--space-xs);\r\n\t}\r\n}\r\n",language:"css"}]},itemNavigationExample:{name:"ItemNavigationExample",files:[{name:"item-navigation-example.component.html",content:'<div class="container">\r\n\t<div class="container__header">\r\n\t\t<h3>{{ currentItem().title }}</h3>\r\n\t\t<p>{{ currentItem().description }}</p>\r\n\t</div>\r\n\t<fkt-navigator\r\n\t\t[canGoToPrevious]="canGoToPrevious()"\r\n\t\t[canGoToNext]="canGoToNext()"\r\n\t\t(previous)="previousItem()"\r\n\t\t(next)="nextItem()"\r\n\t>\r\n\t\t<div class="container__content">\r\n\t\t\tItem {{ currentIndex() + 1 }} of {{ items.length }}\r\n\t\t</div>\r\n\t</fkt-navigator>\r\n</div>\r\n',language:"html"},{name:"item-navigation-example.component.ts",content:"import { Component, computed, signal } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'item-navigation-example',\r\n\ttemplateUrl: './item-navigation-example.component.html',\r\n\timports: [FktNavigatorComponent]\r\n})\r\nexport class ItemNavigationExampleComponent {\r\n\tprotected items = [\r\n\t\t{title: 'First Item', description: 'This is the first item in the list'},\r\n\t\t{title: 'Second Item', description: 'This is the second item in the list'},\r\n\t\t{title: 'Third Item', description: 'This is the third item in the list'}\r\n\t];\r\n\tprotected currentIndex = signal(0);\r\n\r\n\tprotected currentItem = computed(() => {\r\n\t\treturn this.items[this.currentIndex()];\r\n\t});\r\n\r\n\tprotected previousItem() {\r\n\t\tif (this.canGoToPrevious()) {\r\n\t\t\tthis.currentIndex.update(index => index - 1);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected nextItem() {\r\n\t\tif (this.canGoToNext()) {\r\n\t\t\tthis.currentIndex.update(index => index + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected canGoToPrevious = computed(() => {\r\n\t\treturn this.currentIndex() > 0;\r\n\t});\r\n\r\n\tprotected canGoToNext = computed(() => {\r\n\t\treturn this.currentIndex() < this.items.length - 1;\r\n\t});\r\n}\r\n",language:"typescript"},{name:"item-navigation-example.component.scss",content:"h3 {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__header {\r\n\t\ttext-align: center;\r\n\t\tpadding: var(--space-md);\r\n\t\tbackground-color: var(--color-gray-100);\r\n\t\tborder-radius: var(--radius-md);\r\n\r\n\t\th3 {\r\n\t\t\tfont-weight: var(--font-medium);\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tcolor: var(--color-gray-600);\r\n\t\t}\r\n\t}\r\n\r\n\t&__content {\r\n\t\ttext-align: center;\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},loadingExample:{name:"LoadingExample",files:[{name:"loading-example.component.html",content:'<div class="container">\r\n\t<fkt-button\r\n\t\t(click)="toggleLoading()"\r\n\t\t[text]="isLoading() ? \'Stop Loading\' : \'Start Loading\'"\r\n\t/>\r\n\t<fkt-navigator\r\n\t\t[canGoToPrevious]="!isLoading()"\r\n\t\t[canGoToNext]="!isLoading()"\r\n\t\t(previous)="handlePrevious()"\r\n\t\t(next)="handleNext()"\r\n\t>\r\n\t\t@if (isLoading()) {\r\n\t\t\t<fkt-spinner/>\r\n\t\t\t<div class="container__content">\r\n\t\t\t\tLoading...\r\n\t\t\t</div>\r\n\t\t}\r\n\t</fkt-navigator>\r\n\r\n</div>\r\n',language:"html"},{name:"loading-example.component.ts",content:"import { Component, signal } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FktSpinnerComponent } from 'frakton-ng/spinner';\r\n\r\n@Component({\r\n\tselector: 'loading-example',\r\n\ttemplateUrl: './loading-example.component.html',\r\n\timports: [FktNavigatorComponent, FktButtonComponent, FktSpinnerComponent]\r\n})\r\nexport class LoadingExampleComponent {\r\n\tprotected isLoading = signal(false);\r\n\r\n\tprotected toggleLoading() {\r\n\t\tthis.isLoading.update(loading => !loading);\r\n\t}\r\n\r\n\tprotected handlePrevious() {\r\n\t\tif (!this.isLoading()) {\r\n\t\t\tconsole.log('Previous navigation');\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleNext() {\r\n\t\tif (!this.isLoading()) {\r\n\t\t\tconsole.log('Next navigation');\r\n\t\t}\r\n\t}\r\n}\r\n",language:"typescript"},{name:"loading-example.component.scss",content:".container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__content {\r\n\t\ttext-align: center;\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},pageNavigationExample:{name:"PageNavigationExample",files:[{name:"page-navigation-example.component.html",content:'<div class="container">\r\n\t<fkt-navigator\r\n\t\t[canGoToPrevious]="canGoToPrevious()"\r\n\t\t[canGoToNext]="canGoToNext()"\r\n\t\t(previous)="previousPage()"\r\n\t\t(next)="nextPage()"\r\n\t>\r\n\t\t<div class="container__content">\r\n\t\t\tPage {{ currentPage() }} of {{ totalPages() }}\r\n\t\t</div>\r\n\t</fkt-navigator>\r\n</div>\r\n',language:"html"},{name:"page-navigation-example.component.ts",content:"import { Component, computed, signal } from '@angular/core';\r\nimport { FktNavigatorComponent } from 'frakton-ng/navigator';\r\n\r\n@Component({\r\n\tselector: 'page-navigation-example',\r\n\ttemplateUrl: './page-navigation-example.component.html',\r\n\timports: [FktNavigatorComponent]\r\n})\r\nexport class PageNavigationExampleComponent {\r\n\tprotected currentPage = signal(1);\r\n\tprotected totalPages = signal(10);\r\n\r\n\tprotected previousPage() {\r\n\t\tif (this.canGoToPrevious()) {\r\n\t\t\tthis.currentPage.update(page => page - 1);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected nextPage() {\r\n\t\tif (this.canGoToNext()) {\r\n\t\t\tthis.currentPage.update(page => page + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected canGoToPrevious = computed(() => {\r\n\t\treturn this.currentPage() > 1;\r\n\t});\r\n\r\n\tprotected canGoToNext = computed(() => {\r\n\t\treturn this.currentPage() < this.totalPages();\r\n\t});\r\n}\r\n",language:"typescript"},{name:"page-navigation-example.component.scss",content:".container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__content {\r\n\t\ttext-align: center;\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]}};function _createMdxContent(props){const _components={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{of:fkt_navigator_stories}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.strong,{children:"FktNavigator"})," component provides a reusable navigation control with previous/next buttons and a flexible content area. It's designed to be a consistent navigation pattern across different components and contexts."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Flexible Content"}),": Center content area using Angular's content projection"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Navigation Controls"}),": Previous and next buttons with customizable states"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Disabled State Support"}),": Individual control over button availability"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Consistent Styling"}),": Uniform appearance across different use cases"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Icon Integration"}),": Built-in chevron icons for navigation direction"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Event Emission"}),": Clean event handling for navigation actions"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Responsive Layout"}),": Proper spacing and alignment on all screen sizes"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,jsx_runtime.jsx)(blocks.ov,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.BasicNavigator,code:rawExamples.basicExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.PageNavigation,code:rawExamples.pageNavigationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.DateNavigation,code:rawExamples.dateNavigationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.ItemListNavigation,code:rawExamples.itemNavigationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.DisabledStates,code:rawExamples.disabledStateExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_navigator_stories.WithLoadingState,code:rawExamples.loadingExample}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"content-projection",children:"Content Projection"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The component accepts any content between its tags, which will be centered between the navigation buttons."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Perfect for page navigation, date navigation, item browsing, image galleries, multi-step forms, wizards, and any scenario requiring previous/next navigation patterns. Ideal for data pagination and sequential content display."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Tab navigation between buttons"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Screen Reader Support"}),": Proper ARIA labels on navigation buttons"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Focus Management"}),": Logical focus flow"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Disabled State"}),": Proper disabled attribute handling"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Semantic HTML"}),": Uses button elements for interactive controls"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"performance",children:"Performance"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Event Handling"}),": Efficient event emission without unnecessary processing"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Content Projection"}),": Minimal overhead for content rendering"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Button States"}),": Reactive updates without full re-rendering"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Memory Management"}),": No subscriptions or complex state management"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);