"use strict";(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[8131],{"./libs/frakton-ng/input/src/fkt-input.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_a28e18d91e0886f85aadeddb70a4d92b/node_modules/@storybook/addon-docs/dist/blocks.mjs"),fkt_input_stories=__webpack_require__("./libs/frakton-ng/input/src/fkt-input.stories.ts"),StoryDoc=__webpack_require__("./libs/frakton-ng/.storybook/blocks/StoryDoc.tsx");const rawExamples={basicExample:{name:"BasicExample",files:[{name:"basic-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\t[type]="type()"\r\n\t\t\t\t[spellcheck]="spellcheck()"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__text">\r\n\t\t\t\t<p>Current value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"basic-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktInputComponent, FktInputType } from 'frakton-ng/input';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-basic-example',\r\n\timports: [FktInputComponent],\r\n\tstyleUrl: './basic-example.component.scss',\r\n\ttemplateUrl: './basic-example.component.html'\r\n})\r\nexport class BasicExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Full Name');\r\n\tplaceholder = input('Enter your full name');\r\n\ttype = input<FktInputType>('text');\r\n\tspellcheck = input(true);\r\n}\r\n",language:"typescript"},{name:"basic-example.component.scss",content:".container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n}\r\n",language:"css"}]},currencyExample:{name:"CurrencyExample",files:[{name:"currency-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttransformer="currency"\r\n\t\t\t\ttype="text"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Raw value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<p>Formatted display: {{ formattedValue() }}</p>\r\n\t\t\t\t<p class="container__text">Automatically formats as currency (e.g., $1,234.56)</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"currency-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-currency-example',\r\n\timports: [FktInputComponent],\r\n\tstyleUrl: './currency-example.component.scss',\r\n\ttemplateUrl: './currency-example.component.html'\r\n})\r\nexport class CurrencyExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Product Price');\r\n\tplaceholder = input('0.00');\r\n\r\n\tformattedValue = computed(() => {\r\n\t\tconst value = this.control().viewValue();\r\n\t\tif (!value || value === '') return '(empty)';\r\n\r\n\t\treturn value;\r\n\t});\r\n}\r\n",language:"typescript"},{name:"currency-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},disabledExample:{name:"DisabledExample",files:[{name:"disabled-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttype="text"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p class="container__text">This field cannot be edited due to disabled state</p>\r\n\t\t\t</div>\r\n\t\t\t<div class="container__status">\r\n\t\t\t\tStatus:\r\n\t\t\t\t@if (control().disabled()) {\r\n\t\t\t\t\t<fkt-badge\r\n\t\t\t\t\t\ttext="Disabled"\r\n\t\t\t\t\t\tcolor="red"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t@else {\r\n\t\t\t\t\t<fkt-badge\r\n\t\t\t\t\t\ttext="Enabled"\r\n\t\t\t\t\t\tcolor="green"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div class="container__actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t(click)="toggleField()"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t[text]="control().disabled() ? \'Enable\' : \'Disable\'"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"disabled-example.component.ts",content:"import { Component, input, OnInit } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktBadgeComponent } from 'frakton-ng/badge';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\n\r\n@Component({\r\n\tselector: 'input-disabled-example',\r\n\timports: [FktInputComponent, FktBadgeComponent, FktButtonComponent],\r\n\tstyleUrl: './disabled-example.component.scss',\r\n\ttemplateUrl: './disabled-example.component.html'\r\n})\r\nexport class DisabledExampleComponent implements OnInit {\r\n\tcontrol = input(new SignalFormControl('This field is disabled'));\r\n\tlabel = input('Disabled Field');\r\n\tplaceholder = input('This field is disabled');\r\n\r\n\tngOnInit() {\r\n\t\tthis.control().disable();\r\n\t}\r\n\r\n\tprotected toggleField() {\r\n\t\tconst disabled = this.control().disabled();\r\n\r\n\t\tif (disabled)\r\n\t\t\tthis.control().enable();\r\n\t\telse this.control().disable();\r\n\t}\r\n}\r\n",language:"typescript"},{name:"disabled-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n\r\n\t&__status {\r\n\t\tdisplay: flex;\r\n\t\tgap: var(--space-xs);\r\n\t\talign-items: center;\r\n\t}\r\n}\r\n",language:"css"}]},emailExample:{name:"EmailExample",files:[{name:"email-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttype="email"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Current value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<p>Has &#64; symbol: {{ hasAtSymbol() ? \'✓\' : \'✗\' }}</p>\r\n\t\t\t\t<p class="container__text">This input is optimized for email addresses</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"email-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-email-example',\r\n\timports: [FktInputComponent],\r\n\tstyleUrl: './email-example.component.scss',\r\n\ttemplateUrl: './email-example.component.html'\r\n})\r\nexport class EmailExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Email Address');\r\n\tplaceholder = input('Enter your email address');\r\n\r\n\thasAtSymbol = computed(() => {\r\n\t\tconst value = this.control().value();\r\n\t\treturn value.includes('@');\r\n\t});\r\n}\r\n",language:"typescript"},{name:"email-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},formIntegrationExample:{name:"FormIntegrationExample",files:[{name:"form-integration-example.component.html",content:'<div class="container">\r\n\t\t\t<h3>User Profile Form</h3>\r\n\r\n\t\t\t<fkt-form [form]="form">\r\n\t\t\t\t<div class="container__form">\r\n\t\t\t\t\t<fkt-input\r\n\t\t\t\t\t\t[control]="form.controls.name"\r\n\t\t\t\t\t\tlabel="Full Name"\r\n\t\t\t\t\t\tplaceholder="Enter your full name"\r\n\t\t\t\t\t\ttype="text"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<fkt-input\r\n\t\t\t\t\t\t[control]="form.controls.email"\r\n\t\t\t\t\t\tlabel="Email Address"\r\n\t\t\t\t\t\tplaceholder="Enter your email"\r\n\t\t\t\t\t\ttype="email"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<fkt-input\r\n\t\t\t\t\t\t[control]="form.controls.age"\r\n\t\t\t\t\t\tlabel="Age"\r\n\t\t\t\t\t\tplaceholder="Enter your age"\r\n\t\t\t\t\t\ttype="number"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</fkt-form>\r\n\r\n\t\t\t<div class="container__info-container">\r\n\t\t\t\t<h4>Form Status</h4>\r\n\t\t\t\t<div class="container__info">\r\n\t\t\t\t\t<p [class]="formValidClass()">Form Valid: {{ form.valid() ? \'✓\' : \'✗\' }}</p>\r\n\t\t\t\t\t<p class="container__info-text">Form Data:</p>\r\n\t\t\t\t\t<pre class="container__info-form-value prismjs">{{ form.value() | json }}</pre>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"form-integration-example.component.ts",content:"import { Component, computed, inject } from '@angular/core';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormBuilder, SignalValidators } from 'frakton-ng/forms';\r\nimport { FktFormComponent } from 'frakton-ng/form';\r\n\r\n\r\n@Component({\r\n\tselector: 'input-form-integration-example',\r\n\timports: [FktInputComponent, JsonPipe, FktFormComponent],\r\n\tstyleUrl: './form-integration-example.component.scss',\r\n\ttemplateUrl: './form-integration-example.component.html'\r\n})\r\nexport class FormIntegrationExampleComponent {\r\n\tprivate fb = inject(SignalFormBuilder);\r\n\r\n\tprotected form = this.fb.group({\r\n\t\tname: ['', SignalValidators.required()],\r\n\t\temail: ['', [SignalValidators.required(), SignalValidators.email()]],\r\n\t\tage: [null as unknown as number, [SignalValidators.required(), SignalValidators.min(18), SignalValidators.max(100)]],\r\n\t})\r\n\r\n\tformValidClass = computed(() => {\r\n\t\treturn this.form.valid() ? 'container__info--valid' : 'container__info--invalid';\r\n\t});\r\n}\r\n",language:"typescript"},{name:"form-integration-example.component.scss",content:"h3, h4, p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-sm);\r\n\r\n\th3 {\r\n\t\tfont-size: var(--font-size-lg);\r\n\t\tfont-weight: var(--font-medium);\r\n\t\tcolor: var(--color-gray-900);\r\n\t}\r\n\r\n\t&__form {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-md);\r\n\t}\r\n\r\n\t&__info-container {\r\n\t\tborder-top: 1px solid var(--color-gray-400);\r\n\t\tpadding-top: var(--space-md);\r\n\r\n\t\th4 {\r\n\t\t\tfont-size: var(--font-size-md);\r\n\t\t}\r\n\t}\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-3xs);\r\n\r\n\t\t&--valid {\r\n\t\t\tcolor: var(--color-green-600);\r\n\t\t}\r\n\r\n\t\t&--invalid {\r\n\t\t\tcolor: var(--color-red-600);\r\n\t\t}\r\n\r\n\t\t&-text {\r\n\t\t\tcolor: var(--color-gray-600);\r\n\t\t}\r\n\r\n\t\t&-form-value {\r\n\t\t\tfont-family: JetBrains Mono, Consolas, Monaco, monospace !important;\r\n\t\t\tbackground-color: #2D2A2E !important;\r\n\t\t\tcolor: #FED75F !important;\r\n\t\t\tpadding: var(--space-md);\r\n\t\t\tborder-radius: var(--radius-xl);\r\n\t\t}\r\n\t}\r\n}\r\n",language:"css"}]},hourExample:{name:"HourExample",files:[{name:"hour-example.component.html",content:'<div class="container">\r\n\t<fkt-input\r\n\t\t[control]="control()"\r\n\t\t[label]="label()"\r\n\t\t[placeholder]="placeholder()"\r\n\t\ttransformer="hour"\r\n\t\ttype="text"\r\n\t/>\r\n\r\n\t<div class="container__info">\r\n\t\t<p>Raw value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t<p>Formatted display: {{ getFormattedValue() }}</p>\r\n\t\t<p class="container__text">Automatically formats as time duration (e.g., 8h 30m)</p>\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"hour-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-hour-example',\r\n\timports: [FktInputComponent],\r\n\tstyleUrl: './hour-example.component.scss',\r\n\ttemplateUrl: './hour-example.component.html'\r\n})\r\nexport class HourExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Work Duration');\r\n\tplaceholder = input('Enter time duration');\r\n\r\n\tgetFormattedValue = computed(() => {\r\n\t\tconst value = this.control().value();\r\n\t\tif (!value || value === '') return '(empty)';\r\n\r\n\t\tconst num = parseFloat(value.toString().replace(/[^\\d.-]/g, ''));\r\n\t\tif (isNaN(num)) return value;\r\n\r\n\t\tconst hours = Math.floor(num);\r\n\t\tconst minutes = Math.round((num - hours) * 60);\r\n\r\n\t\tif (hours === 0 && minutes === 0) return '0h';\r\n\t\tif (minutes === 0) return `${hours}h`;\r\n\t\tif (hours === 0) return `${minutes}m`;\r\n\r\n\t\treturn `${hours}h ${minutes}m`;\r\n\t});\r\n}\r\n",language:"typescript"},{name:"hour-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},loginFormExample:{name:"LoginFormExample",files:[{name:"login-form-example.component.html",content:'<div class="container">\r\n\t\t\t<h3>Login Form</h3>\r\n\r\n\t\t\t<fkt-form [form]="form">\r\n\t\t\t\t<div class="container__form">\r\n\t\t\t\t\t<fkt-input\r\n\t\t\t\t\t\t[control]="form.controls.email"\r\n\t\t\t\t\t\tlabel="Email Address"\r\n\t\t\t\t\t\tplaceholder="Enter your email"\r\n\t\t\t\t\t\ttype="email"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<fkt-input\r\n\t\t\t\t\t\t[control]="form.controls.password"\r\n\t\t\t\t\t\tlabel="Password"\r\n\t\t\t\t\t\tplaceholder="Enter your password"\r\n\t\t\t\t\t\ttype="password"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</fkt-form>\r\n\r\n\t\t\t<div class="container__actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t[disabled]="form.invalid()"\r\n\t\t\t\t\ttext="Log In"\r\n\t\t\t\t\t(click)="onLogin()"\r\n\t\t\t\t>\r\n\t\t\t\t</fkt-button>\r\n\r\n\t\t\t\t<div class="container__status">\r\n\t\t\t\t\t<p>Form Status: {{ form.valid() ? \'✓ Ready\' : \'✗ Incomplete\' }}</p>\r\n\t\t\t\t\t<p class="container__status-message">{{ getStatusMessage() }}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"login-form-example.component.ts",content:"import { Component, computed, inject } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormBuilder, SignalValidators } from 'frakton-ng/forms';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FktFormComponent } from 'frakton-ng/form';\r\n\r\n@Component({\r\n\tselector: 'input-login-form-example',\r\n\timports: [FktInputComponent, FktButtonComponent, FktFormComponent],\r\n\tstyleUrl: './login-form-example.component.scss',\r\n\ttemplateUrl: './login-form-example.component.html'\r\n})\r\nexport class LoginFormExampleComponent {\r\n\tprivate fb = inject(SignalFormBuilder);\r\n\r\n\tprotected form = this.fb.group({\r\n\t\temail: ['', [\r\n\t\t\tSignalValidators.required(),\r\n\t\t\tSignalValidators.email()\r\n\t\t]],\r\n\t\tpassword: ['', [\r\n\t\t\tSignalValidators.required(),\r\n\t\t\tSignalValidators.minLength(6)\r\n\t\t]]\r\n\t})\r\n\r\n\tgetStatusMessage = computed(() => {\r\n\t\tif (!this.form.controls.email.valid() && this.form.controls.email.touched()) {\r\n\t\t\treturn 'Please enter a valid email address';\r\n\t\t}\r\n\t\tif (!this.form.controls.password.valid() && this.form.controls.password.touched()) {\r\n\t\t\treturn 'Password must be at least 6 characters';\r\n\t\t}\r\n\t\tif (this.form.valid()) {\r\n\t\t\treturn 'Ready to log in';\r\n\t\t}\r\n\t\treturn 'Fill in both fields to continue';\r\n\t})\r\n\r\n\tonLogin(): void {\r\n\t\tif (this.form.valid()) return;\r\n\r\n\t\tconsole.log('Login attempt:', this.form.value());\r\n\t}\r\n}\r\n",language:"typescript"},{name:"login-form-example.component.scss",content:".container {\r\n\tpadding: var(--space-xl);\r\n\tmargin-top: var(--space-xl);\r\n\tborder-radius: var(--radius-lg);\r\n\twidth: 100%;\r\n\tmax-width: 28rem;\r\n\tborder: solid 1px var(--color-gray-400);\r\n\r\n\th3 {\r\n\t\tfont-size: var(--font-size-xl);\r\n\t\tfont-weight: var(--font-semibold);\r\n\t\tcolor: var(--color-gray-900);\r\n\t}\r\n\r\n\t&__form {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-md);\r\n\t}\r\n\r\n\t&__actions {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-sm);\r\n\t}\r\n\r\n\t&__status {\r\n\t\tcolor: var(--color-gray-600);\r\n\t\tfont-size: var(--font-size-sm);\r\n\r\n\t\t&-message {\r\n\t\t\tfont-size: var(--font-size-xs);\r\n\t\t\tmargin-top: var(--space-3xs);\r\n\t\t}\r\n\t}\r\n}\r\n",language:"css"}]},numberExample:{name:"NumberExample",files:[{name:"number-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttype="number"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Current value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<div>Is numeric:\r\n\t\t\t\t\t@if (!!control().value()) {\r\n\t\t\t\t\t\t<fkt-icon name="check" class="container__info--valid"/>\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t<fkt-icon name="x-mark" class="container__info--invalid"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p class="container__text">This input accepts only numeric values</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"number-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktIconComponent } from 'frakton-ng/icon';\r\n\r\n@Component({\r\n\tselector: 'input-number-example',\r\n\timports: [FktInputComponent, FktIconComponent],\r\n\tstyleUrl: './number-example.component.scss',\r\n\ttemplateUrl: './number-example.component.html'\r\n})\r\nexport class NumberExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Age');\r\n\tplaceholder = input('Enter your age');\r\n\r\n\tisNumeric = computed(() => {\r\n\t\tconst value = this.control().value();\r\n\t\treturn value !== null && value !== undefined && value !== '' && !isNaN(Number(value));\r\n\t})\r\n}\r\n",language:"typescript"},{name:"number-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\r\n\t\t&--valid {\r\n\t\t\tcolor: var(--color-green-600);\r\n\t\t}\r\n\r\n\t\t&--invalid {\r\n\t\t\tcolor: var(--color-red-600);\r\n\t\t}\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},passwordExample:{name:"PasswordExample",files:[{name:"password-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttype="password"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Password length: {{ control().value()?.length || 0 }} characters</p>\r\n\t\t\t\t<div>Has value:\r\n\t\t\t\t\t@if (!!control().value()) {\r\n\t\t\t\t\t\t<fkt-icon name="check" class="container__info--valid"/>\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t<fkt-icon name="x-mark" class="container__info--invalid"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<p class="container__text">Click the eye icon to toggle password visibility</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"password-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktIconComponent } from 'frakton-ng/icon';\r\n\r\n@Component({\r\n\tselector: 'input-password-example',\r\n\timports: [FktInputComponent, FktIconComponent],\r\n\tstyleUrl: './password-example.component.scss',\r\n\ttemplateUrl: './password-example.component.html'\r\n})\r\nexport class PasswordExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Password');\r\n\tplaceholder = input('Enter your password');\r\n}\r\n",language:"typescript"},{name:"password-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\r\n\t\t& > div {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tmargin: var(--space-3xs) 0;\r\n\t\t\tgap: var(--space-2xs);\r\n\t\t}\r\n\r\n\t\t&--valid {\r\n\t\t\tcolor: var(--color-green-600);\r\n\t\t}\r\n\r\n\t\t&--invalid {\r\n\t\t\tcolor: var(--color-red-600);\r\n\t\t}\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},percentExample:{name:"PercentExample",files:[{name:"percent-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttransformer="percent"\r\n\t\t\t\ttype="text"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Raw value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<p>Formatted display: {{ getFormattedValue() }}</p>\r\n\t\t\t\t<p class="container__text">Automatically formats as percentage (e.g., 45.5%)</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"percent-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-percent-example',\r\n\timports: [FktInputComponent],\r\n\tstyleUrl: './percent-example.component.scss',\r\n\ttemplateUrl: './percent-example.component.html'\r\n})\r\nexport class PercentExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Completion Rate');\r\n\tplaceholder = input('Enter percentage');\r\n\r\n\tgetFormattedValue = computed(() => {\r\n\t\tconst value = this.control().value();\r\n\t\tif (!value || value === '') return '(empty)';\r\n\r\n\t\tconst num = parseFloat(value.toString().replace(/[^\\d.-]/g, ''));\r\n\t\treturn isNaN(num) ? value : `${num}%`;\r\n\t});\r\n}\r\n",language:"typescript"},{name:"percent-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},suffixExample:{name:"SuffixExample",files:[{name:"suffix-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\tinputPadding="1rem 8rem 1rem 1rem"\r\n\t\t\t\ttype="text"\r\n\t\t\t>\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t*fktFormControlSuffix\r\n\t\t\t\t\ticon="magnifying-glass"\r\n\t\t\t\t\ticonPosition="left"\r\n\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\ttext="Search"\r\n\t\t\t\t\t(click)="performSearch()"\r\n\t\t\t\t>\r\n\t\t\t\t</fkt-button>\r\n\t\t\t</fkt-input>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p>Search term: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<p>Search clicked: {{ searchClicked() ? \'✓\' : \'✗\' }}</p>\r\n\t\t\t\t<p class="container__text">Click the search button to trigger the search action</p>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"suffix-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FormControlSuffixDirective, SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'input-suffix-example',\r\n\timports: [FktInputComponent, FormControlSuffixDirective, FktButtonComponent],\r\n\tstyleUrl: './suffix-example.component.scss',\r\n\ttemplateUrl: './suffix-example.component.html'\r\n})\r\nexport class SuffixExampleComponent {\r\n\tcontrol = input(new SignalFormControl(''));\r\n\tlabel = input('Search Products');\r\n\tplaceholder = input('Search products...');\r\n\tsearchClicked = input(false);\r\n\r\n\tperformSearch(): void {\r\n\t\tconst query = this.control().value();\r\n\t\tif (!query?.trim()) return;\r\n\r\n\t\tconsole.log('Searching for:', query);\r\n\t}\r\n}\r\n",language:"typescript"},{name:"suffix-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tfont-size: var(--font-size-sm);\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__text {\r\n\t\tfont-size: var(--font-size-xs);\r\n\t\tcolor: var(--color-gray-500);\r\n\t}\r\n}\r\n",language:"css"}]},validationExample:{name:"ValidationExample",files:[{name:"validation-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-input\r\n\t\t\t\t[control]="control()"\r\n\t\t\t\t[label]="label()"\r\n\t\t\t\t[placeholder]="placeholder()"\r\n\t\t\t\ttype="email"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<p class="container__value">Current value: {{ control().value() || \'(empty)\' }}</p>\r\n\t\t\t\t<div class="container__status-container" [class]="statusInfo().classes">\r\n\t\t\t\t\t<p>Status:</p>\r\n\r\n\t\t\t\t\t<div class="container__status">\r\n\t\t\t\t\t\t<fkt-icon [name]="statusInfo().icon"/>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{{ statusInfo().label }}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"validation-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktInputComponent } from '../../../index';\r\nimport { SignalFormControl, SignalValidators } from 'frakton-ng/forms';\r\nimport { FktIconComponent, FktIconName } from 'frakton-ng/icon';\r\n\r\n@Component({\r\n\tselector: 'input-validation-example',\r\n\timports: [FktInputComponent, FktIconComponent],\r\n\tstyleUrl: './validation-example.component.scss',\r\n\ttemplateUrl: './validation-example.component.html'\r\n})\r\nexport class ValidationExampleComponent {\r\n\tcontrol = input(new SignalFormControl('', {\r\n\t\tvalidators: [\r\n\t\t\tSignalValidators.required(),\r\n\t\t\tSignalValidators.email()\r\n\t\t]\r\n\t}));\r\n\tlabel = input('Email Address (Required)');\r\n\tplaceholder = input('Enter your email address');\r\n\r\n\tstatus = computed(() => {\r\n\t\tconst control = this.control();\r\n\r\n\t\tif (control.valid()) return 'valid';\r\n\t\tif (control.invalid() && control.touched()) return 'invalid';\r\n\t\treturn 'non-validated';\r\n\t})\r\n\r\n\tstatusInfo = computed(() => {\r\n\t\tconst status = this.status();\r\n\r\n\t\tconst icons: Record<'valid' | 'invalid' | 'non-validated', {\r\n\t\t\tlabel: string;\r\n\t\t\ticon: FktIconName;\r\n\t\t\tclasses: string\r\n\t\t}> = {\r\n\t\t\tinvalid: {\r\n\t\t\t\tlabel: \"Invalid\",\r\n\t\t\t\ticon: 'x-mark',\r\n\t\t\t\tclasses: 'text-red-600'\r\n\t\t\t},\r\n\t\t\t'non-validated': {\r\n\t\t\t\tlabel: \"Non validated\",\r\n\t\t\t\ticon: 'clock',\r\n\t\t\t\tclasses: 'text-orange-600'\r\n\t\t\t},\r\n\t\t\tvalid: {\r\n\t\t\t\tlabel: \"Valid\",\r\n\t\t\t\ticon: 'check',\r\n\t\t\t\tclasses: 'text-green-600'\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\treturn icons[status];\r\n\t});\r\n}\r\n",language:"typescript"},{name:"validation-example.component.scss",content:"p {\r\n\tmargin: 0;\r\n}\r\n\r\n.container {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n\r\n\t&__info {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--space-3xs);\r\n\t}\r\n\r\n\t&__value {\r\n\t\tcolor: var(--color-gray-600);\r\n\t}\r\n\r\n\t&__status-container {\r\n\t\tdisplay: flex;\r\n\t\tgap: var(--space-xs);\r\n\r\n\t\t& > p {\r\n\t\t\tline-height: 1rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__status {\r\n\t\tdisplay: flex;\r\n\t\tgap: var(--space-3xs);\r\n\r\n\t\tfkt-icon {\r\n\t\t\tfont-size: var(--font-size-sm);\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tline-height: 1rem;\r\n\t\t}\r\n\t}\r\n}\r\n",language:"css"}]}};function _createMdxContent(props){const _components={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{of:fkt_input_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"input",children:"Input"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.em,{children:"A versatile form input component with multiple types, data transformers, and comprehensive validation support. Built with Angular signals for reactive form integration."})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Multiple Input Types"}),": Text, password, number, and email with optimized behavior"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Data Transformers"}),": Built-in formatters for currency, percentage, and time duration"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Password Toggle"}),": Show/hide functionality with accessible eye icon"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Form Validation"}),": Real-time validation with visual error states"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Custom Suffix"}),": Content projection for buttons, icons, and additional elements"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Signal Integration"}),": Native Angular signals with SignalFormControl"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,jsx_runtime.jsx)(blocks.ov,{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"types",children:"Types"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-typescript",children:"import {SignalFormControlTransformer} from \"frakton-ng/forms\";\r\n\r\ntype FktInputType = 'text' | 'password' | 'number' | 'email';\r\n\r\ntype FktInputTransformer = 'currency' | 'percent' | 'hour' | SignalFormControlTransformer;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.BasicInput,code:rawExamples.basicExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.PasswordField,code:rawExamples.passwordExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.NumericField,code:rawExamples.numberExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.EmailField,code:rawExamples.emailExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.CurrencyTransformer,code:rawExamples.currencyExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.PercentTransformer,code:rawExamples.percentExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.HourTransformer,code:rawExamples.hourExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.WithValidation,code:rawExamples.validationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.DisabledState,code:rawExamples.disabledExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.WithCustomSuffix,code:rawExamples.suffixExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_input_stories.FormIntegration,code:rawExamples.formIntegrationExample}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"User Registration Forms"})," - Email addresses, passwords, personal information with validation."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"E-commerce Applications"})," - Product pricing, quantities, discount percentages with currency formatting."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Financial Data Entry"})," - Investment amounts, interest rates, account balances with precise formatting."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Content Management"})," - Article titles, descriptions, metadata with spell-check control."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Tab order and shortcuts work as expected."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Screen Reader Support"}),": ARIA labels and validation announcements."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Focus Management"}),": Clear focus indicators and logical navigation flow."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Other Notes"}),": Supports high contrast modes and respects user preferences."]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);