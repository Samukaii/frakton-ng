(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[833],{"!!raw-loader!./order-status/order-status-example.component.scss":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".container {\n  border: solid 1px var(--color-gray-400);\n  display: flex;\n  flex-direction: column;\n  border-radius: var(--radius-md);\n  padding: var(--space-md);\n  gap: var(--space-md);\n}\n.container__item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-sm);\n}\n.container__item h3 {\n  margin: 0;\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-semibold);\n}\n.container__status {\n  font-size: var(--font-size-sm);\n  color: var(--color-gray-600);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"!!raw-loader!./priority/priority-example.component.scss":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".container {\n  padding: var(--space-md);\n  border: solid 1px var(--color-gray-400);\n  border-radius: var(--space-md);\n}\n.container h3 {\n  font-size: var(--font-size-lg);\n  font-weight: var(--font-semibold);\n  margin-bottom: var(--space-sm);\n}\n.container__selector {\n  display: flex;\n  align-items: center;\n  gap: var(--space-sm);\n}\n.container__selector label {\n  font-size: var(--font-size-sm);\n  font-weight: var(--font-medium);\n}\n.container__description {\n  margin-top: var(--space-sm);\n  font-size: var(--font-size-sm);\n  color: var(--color-gray-600);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/frakton-ng/badge-selector/src/fkt-badge-selector.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  width: fit-content;\n  display: flex;\n}\n:host * {\n  box-sizing: border-box;\n}\n\n.badge {\n  cursor: pointer;\n  transition: var(--transition-base);\n  display: block;\n}\n.badge:hover {\n  scale: 105%;\n}\n.badge__content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-xs);\n}\n.badge__content p {\n  margin: 0;\n  white-space: nowrap;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/frakton-ng/badge-selector/src/fkt-badge-selector.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Category:()=>Category,OrderStatus:()=>OrderStatus,Preview:()=>Preview,Priority:()=>Priority,ProjectStatus:()=>ProjectStatus,TeamAssignment:()=>TeamAssignment,UserStatus:()=>UserStatus,__namedExportsOrder:()=>__namedExportsOrder,default:()=>fkt_badge_selector_stories});var dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@9.1.1_73ef9e1b642e0aee87d2d1d4ea585c4e/node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var fkt_badge_selector_componentngResource=__webpack_require__("./libs/frakton-ng/badge-selector/src/fkt-badge-selector.component.scss?ngResource"),fkt_badge_selector_componentngResource_default=__webpack_require__.n(fkt_badge_selector_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/core.mjs"),root_effect_scheduler=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/root_effect_scheduler.mjs"),debug_node=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/debug_node.mjs"),resource=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/resource.mjs"),fkt_overlay_service=__webpack_require__("./libs/frakton-ng/overlay/src/fkt-overlay.service.ts");var badge_selector_modal_componentngResource=__webpack_require__("./libs/frakton-ng/badge-selector/src/modal/badge-selector-modal.component.scss?ngResource"),badge_selector_modal_componentngResource_default=__webpack_require__.n(badge_selector_modal_componentngResource),utils=__webpack_require__("./libs/frakton-ng/internal/utils/index.ts"),fkt_icon_component=__webpack_require__("./libs/frakton-ng/icon/src/fkt-icon.component.ts"),fkt_badge_component=__webpack_require__("./libs/frakton-ng/badge/src/fkt-badge.component.ts");let BadgeSelectorModalComponent=class BadgeSelectorModalComponent{options=core.input.required();selected=(0,core.input)();select=(0,core.output)();close=(0,core.output)();autoclose=(0,utils.TZ)(()=>{this.close.emit()});static propDecorators={options:[{type:debug_node.pde,args:[{isSignal:!0,alias:"options",required:!0,transform:void 0}]}],selected:[{type:debug_node.pde,args:[{isSignal:!0,alias:"selected",required:!1,transform:void 0}]}],select:[{type:debug_node.k7i,args:["select"]}],close:[{type:debug_node.k7i,args:["close"]}]}};(0,tslib_es6.Cg)([(0,utils.Bo)()],BadgeSelectorModalComponent.prototype,"autoclose",void 0),BadgeSelectorModalComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"fkt-badge-selector-modal",imports:[fkt_badge_component.U,fkt_icon_component.I],template:'<div class="container">\r\n\t<div class="container__first-row">\r\n\t\t@for (option of options().slice(0, 3); track option.id) {\r\n\t\t\t<fkt-badge\r\n\t\t\t\tclass="container__badge"\r\n\t\t\t\t(click)="select.emit(option)"\r\n\t\t\t\t[color]="option.color"\r\n\t\t\t>\r\n\t\t\t\t<div badge-content class="container__badge-content">\r\n\t\t\t\t\t<p>{{ option.name }}</p>\r\n\r\n\t\t\t\t\t@if (option.id === selected()?.id) {\r\n\t\t\t\t\t\t<fkt-icon name="check"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</fkt-badge>\r\n\t\t}\r\n\t</div>\r\n\r\n\t@let secondRowOptions = options().slice(3);\r\n\r\n\t@if (secondRowOptions.length) {\r\n\t\t<div class="container__second-row">\r\n\t\t\t@for (option of secondRowOptions; track option.id) {\r\n\t\t\t\t<fkt-badge\r\n\t\t\t\t\tclass="container__badge"\r\n\t\t\t\t\t(click)="select.emit(option)"\r\n\t\t\t\t\t[color]="option.color"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div badge-content class="container__badge-content">\r\n\t\t\t\t\t\t<p>{{ option.name }}</p>\r\n\t\t\t\t\t\t@if (option.id === selected()?.id) {\r\n\t\t\t\t\t\t\t<fkt-icon name="check"/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fkt-badge>\r\n\t\t\t}\r\n\t\t</div>\r\n\t}\r\n\r\n</div>\r\n',styles:[badge_selector_modal_componentngResource_default()]})],BadgeSelectorModalComponent);let FktBadgeSelectorComponent=class FktBadgeSelectorComponent{options=core.input.required();currentBadgeId=(0,core.model)();overlay=(0,root_effect_scheduler.WQX)(fkt_overlay_service.r);ref=null;elementRef=(0,root_effect_scheduler.WQX)(debug_node.aKT);selectedOption=(0,resource.EW)(()=>{const currentBadgeId=this.currentBadgeId();return this.options().find(option=>option.id===currentBadgeId)});select(){this.ref||(this.ref=this.overlay.open({component:BadgeSelectorModalComponent,data:{options:this.options,selected:this.selectedOption,select:badge=>{this.currentBadgeId.set(badge.id),this.close()}},anchorElementRef:this.elementRef,panelOptions:{position:"bottom-start",minWidth:"fit-content",width:"fit-content",maxHeight:"fit-content",outsideClick:()=>{this.close()}}}))}close(){this.ref?.close(),this.ref=null}static propDecorators={options:[{type:debug_node.pde,args:[{isSignal:!0,alias:"options",required:!0,transform:void 0}]}],currentBadgeId:[{type:debug_node.pde,args:[{isSignal:!0,alias:"currentBadgeId",required:!1}]},{type:debug_node.k7i,args:["currentBadgeIdChange"]}]}};FktBadgeSelectorComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"fkt-badge-selector",imports:[fkt_badge_component.U,fkt_icon_component.I],template:'@let selectedOptionValue = selectedOption();\r\n\r\n@if (selectedOptionValue) {\r\n\t<fkt-badge\r\n\t\tclass="badge"\r\n\t\t(click)="select()"\r\n\t\t[color]="selectedOptionValue.color"\r\n\t>\r\n\t\t<div badge-content class="badge__content">\r\n\t\t\t<p>\r\n\t\t\t\t{{ selectedOption()?.name }}\r\n\r\n\t\t\t</p>\r\n\t\t\t<fkt-icon\r\n\t\t\t\tname="chevron-down"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</fkt-badge>\r\n}\r\n',styles:[fkt_badge_selector_componentngResource_default()]})],FktBadgeSelectorComponent);var order_status_example_component=__webpack_require__("!!raw-loader!./order-status/order-status-example.component.scss"),order_status_example_component_default=__webpack_require__.n(order_status_example_component);let OrderStatusExampleComponent=class OrderStatusExampleComponent{options=(0,core.input)([{id:"pending",color:"orange",name:"Pending"},{id:"processing",color:"blue",name:"Processing"},{id:"shipped",color:"blue",name:"Shipped"},{id:"delivered",color:"green",name:"Delivered"},{id:"cancelled",color:"red",name:"Cancelled"}]);currentBadgeId=(0,core.model)("processing");currentStatusLabel=(0,resource.EW)(()=>{const statusId=this.currentBadgeId(),status=this.options().find(status=>status.id===statusId);return status?status.name:"None"});static propDecorators={options:[{type:debug_node.pde,args:[{isSignal:!0,alias:"options",required:!1,transform:void 0}]}],currentBadgeId:[{type:debug_node.pde,args:[{isSignal:!0,alias:"currentBadgeId",required:!1}]},{type:debug_node.k7i,args:["currentBadgeIdChange"]}]}};OrderStatusExampleComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"order-status-example",template:'<div class="container">\r\n\t<div class="container__item">\r\n\t\t<h3>Order #1234 Status:</h3>\r\n\t\t<fkt-badge-selector\r\n\t\t\t[(currentBadgeId)]="currentBadgeId"\r\n\t\t\t[options]="options()"\r\n\t\t/>\r\n\t</div>\r\n\r\n\t<div class="container__status">\r\n\t\tCurrent status:\r\n\t\t<strong>\r\n\t\t\t{{ currentStatusLabel() }}\r\n\t\t</strong>\r\n\t</div>\r\n</div>\r\n',imports:[FktBadgeSelectorComponent],styles:[order_status_example_component_default()]})],OrderStatusExampleComponent);var priority_example_component=__webpack_require__("!!raw-loader!./priority/priority-example.component.scss"),priority_example_component_default=__webpack_require__.n(priority_example_component);let PriorityExampleComponent=class PriorityExampleComponent{options=(0,core.input)([{id:"low",color:"green",name:"Low"},{id:"medium",color:"orange",name:"Medium"},{id:"high",color:"red",name:"High"},{id:"critical",color:"red",name:"Critical"}]);currentBadgeId=(0,core.model)("medium");priorityDescription=(0,resource.EW)(()=>({low:"Tasks that can be completed when time permits",medium:"Tasks that should be completed within normal timeframes",high:"Tasks requiring prompt attention and completion",critical:"Urgent tasks requiring immediate action"}[this.currentBadgeId()]||"Select a priority level"));static propDecorators={options:[{type:debug_node.pde,args:[{isSignal:!0,alias:"options",required:!1,transform:void 0}]}],currentBadgeId:[{type:debug_node.pde,args:[{isSignal:!0,alias:"currentBadgeId",required:!1}]},{type:debug_node.k7i,args:["currentBadgeIdChange"]}]}};PriorityExampleComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"priority-example",template:'<div class="container">\r\n\t<h3>Task Priority</h3>\r\n\r\n\t<div class="container__selector">\r\n\t\t<label>Priority Level:</label>\r\n\t\t<fkt-badge-selector\r\n\t\t\t[(currentBadgeId)]="currentBadgeId"\r\n\t\t\t[options]="options()"\r\n\t\t/>\r\n\t</div>\r\n\r\n\t<div class="container__description">\r\n\t\t{{ priorityDescription() }}\r\n\t</div>\r\n</div>\r\n',imports:[FktBadgeSelectorComponent],styles:[priority_example_component_default()]})],PriorityExampleComponent);const meta={title:"Components/Badge selector",component:FktBadgeSelectorComponent,decorators:[(0,dist.Iz)({imports:[OrderStatusExampleComponent,PriorityExampleComponent]})],parameters:{layout:"centered"},argTypes:{options:{control:"object",options:[],type:{name:"array",value:{name:"object",value:{}},required:!0},table:{category:"Attributes",type:{detail:"import {FktBadge} from 'frakton-ng/badge-selector'",summary:"FktBadge<T>[]"},defaultValue:{summary:"[]"}}},currentBadgeId:{control:"object",table:{category:"Attributes",type:{summary:"T"},defaultValue:{summary:"undefined"}}}}},Preview={parameters:{docs:{description:{story:"Interactive badge selector with predefined status options. Click to open dropdown and select an option."}}},args:{options:[{id:"opt-1",color:"green",name:"Success"},{id:"opt-2",color:"red",name:"Cancelled"},{id:"opt-3",color:"blue",name:"Reserved"},{id:"opt-4",color:"orange",name:"Paused"}],currentBadgeId:"opt-1"}},OrderStatus={parameters:{docs:{description:{story:"Badge selector for managing order status with multiple workflow states."}}},render:args=>({props:args,template:'<order-status-example [options]="options" [(currentBadgeId)]="currentBadgeId"></order-status-example>'}),args:{options:[{id:"pending",color:"orange",name:"Pending"},{id:"processing",color:"blue",name:"Processing"},{id:"shipped",color:"blue",name:"Shipped"},{id:"delivered",color:"green",name:"Delivered"},{id:"cancelled",color:"red",name:"Cancelled"}],currentBadgeId:"processing"}},Priority={parameters:{docs:{description:{story:"Badge selector for task or issue priority levels with visual hierarchy."}}},render:args=>({props:args,template:'<priority-example [options]="options" [(currentBadgeId)]="currentBadgeId"></priority-example>'}),args:{options:[{id:"low",color:"green",name:"Low"},{id:"medium",color:"orange",name:"Medium"},{id:"high",color:"red",name:"High"},{id:"critical",color:"red",name:"Critical"}],currentBadgeId:"medium"}},ProjectStatus={parameters:{docs:{description:{story:"Displays the status of a project using colored badges for each phase.\nUse this example for dashboards, kanbans or project summary views where it's important to visualize the current stage—like Planning, Development, Testing, Deployment, or Maintenance—at a glance."}}},args:{options:[{id:"planning",color:"blue",name:"Planning"},{id:"development",color:"orange",name:"Development"},{id:"testing",color:"orange",name:"Testing"},{id:"deployed",color:"green",name:"Deployed"},{id:"maintenance",color:"blue",name:"Maintenance"}],currentBadgeId:"development"}},UserStatus={parameters:{docs:{description:{story:"Represents the status of a user with classic availability badges (Online, Away, Busy, Offline).\nThis is useful in chat apps, team dashboards, or any context where you want to provide a quick visual cue of user presence."}}},args:{options:[{id:"online",color:"green",name:"Online"},{id:"away",color:"orange",name:"Away"},{id:"busy",color:"red",name:"Busy"},{id:"offline",color:"blue",name:"Offline"}],currentBadgeId:"online"}},TeamAssignment={parameters:{docs:{description:{story:"Showcases different team assignments using distinctive badge colors.\nHandy for project management tools, HR apps, or anywhere you want to display team allocation or filter by squads (Frontend, Backend, DevOps, QA, etc)."}}},args:{options:[{id:"frontend",color:"blue",name:"Frontend Team"},{id:"backend",color:"green",name:"Backend Team"},{id:"devops",color:"orange",name:"DevOps Team"},{id:"qa",color:"red",name:"QA Team"}],currentBadgeId:"frontend"}},Category={parameters:{docs:{description:{story:"Demonstrates badges for product or content categories, with different colors for each segment.\nUse this pattern for e-commerce, content tagging, search filters, or any interface that organizes information by category (Electronics, Clothing, Books, Home & Garden, etc)."}}},args:{options:[{id:"electronics",color:"blue",name:"Electronics"},{id:"clothing",color:"green",name:"Clothing"},{id:"books",color:"orange",name:"Books"},{id:"home-garden",color:"red",name:"Home & Garden"}],currentBadgeId:"electronics"}},fkt_badge_selector_stories=meta,__namedExportsOrder=["Preview","OrderStatus","Priority","ProjectStatus","UserStatus","TeamAssignment","Category"];Preview.parameters={...Preview.parameters,docs:{...Preview.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "Interactive badge selector with predefined status options. Click to open dropdown and select an option."\n      }\n    }\n  },\n  args: {\n    options: [{\n      id: "opt-1",\n      color: "green",\n      name: "Success"\n    }, {\n      id: "opt-2",\n      color: "red",\n      name: "Cancelled"\n    }, {\n      id: "opt-3",\n      color: "blue",\n      name: "Reserved"\n    }, {\n      id: "opt-4",\n      color: "orange",\n      name: "Paused"\n    }],\n    currentBadgeId: \'opt-1\' as any\n  }\n}',...Preview.parameters?.docs?.source}}},OrderStatus.parameters={...OrderStatus.parameters,docs:{...OrderStatus.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "Badge selector for managing order status with multiple workflow states."\n      }\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `<order-status-example [options]="options" [(currentBadgeId)]="currentBadgeId"></order-status-example>`\n  }),\n  args: {\n    options: [{\n      id: "pending",\n      color: "orange",\n      name: "Pending"\n    }, {\n      id: "processing",\n      color: "blue",\n      name: "Processing"\n    }, {\n      id: "shipped",\n      color: "blue",\n      name: "Shipped"\n    }, {\n      id: "delivered",\n      color: "green",\n      name: "Delivered"\n    }, {\n      id: "cancelled",\n      color: "red",\n      name: "Cancelled"\n    }],\n    currentBadgeId: \'processing\'\n  }\n}',...OrderStatus.parameters?.docs?.source}}},Priority.parameters={...Priority.parameters,docs:{...Priority.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "Badge selector for task or issue priority levels with visual hierarchy."\n      }\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `<priority-example [options]="options" [(currentBadgeId)]="currentBadgeId"></priority-example>`\n  }),\n  args: {\n    options: [{\n      id: "low",\n      color: "green",\n      name: "Low"\n    }, {\n      id: "medium",\n      color: "orange",\n      name: "Medium"\n    }, {\n      id: "high",\n      color: "red",\n      name: "High"\n    }, {\n      id: "critical",\n      color: "red",\n      name: "Critical"\n    }],\n    currentBadgeId: \'medium\'\n  }\n}',...Priority.parameters?.docs?.source}}},ProjectStatus.parameters={...ProjectStatus.parameters,docs:{...ProjectStatus.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: `Displays the status of a project using colored badges for each phase.\nUse this example for dashboards, kanbans or project summary views where it\'s important to visualize the current stage—like Planning, Development, Testing, Deployment, or Maintenance—at a glance.`\n      }\n    }\n  },\n  args: {\n    options: [{\n      id: "planning",\n      color: "blue",\n      name: "Planning"\n    }, {\n      id: "development",\n      color: "orange",\n      name: "Development"\n    }, {\n      id: "testing",\n      color: "orange",\n      name: "Testing"\n    }, {\n      id: "deployed",\n      color: "green",\n      name: "Deployed"\n    }, {\n      id: "maintenance",\n      color: "blue",\n      name: "Maintenance"\n    }],\n    currentBadgeId: \'development\' as any\n  }\n}',...ProjectStatus.parameters?.docs?.source}}},UserStatus.parameters={...UserStatus.parameters,docs:{...UserStatus.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: `Represents the status of a user with classic availability badges (Online, Away, Busy, Offline).\nThis is useful in chat apps, team dashboards, or any context where you want to provide a quick visual cue of user presence.`\n      }\n    }\n  },\n  args: {\n    options: [{\n      id: "online",\n      color: "green",\n      name: "Online"\n    }, {\n      id: "away",\n      color: "orange",\n      name: "Away"\n    }, {\n      id: "busy",\n      color: "red",\n      name: "Busy"\n    }, {\n      id: "offline",\n      color: "blue",\n      name: "Offline"\n    }],\n    currentBadgeId: \'online\' as any\n  }\n}',...UserStatus.parameters?.docs?.source}}},TeamAssignment.parameters={...TeamAssignment.parameters,docs:{...TeamAssignment.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: `Showcases different team assignments using distinctive badge colors.\nHandy for project management tools, HR apps, or anywhere you want to display team allocation or filter by squads (Frontend, Backend, DevOps, QA, etc).`\n      }\n    }\n  },\n  args: {\n    options: [{\n      id: "frontend",\n      color: "blue",\n      name: "Frontend Team"\n    }, {\n      id: "backend",\n      color: "green",\n      name: "Backend Team"\n    }, {\n      id: "devops",\n      color: "orange",\n      name: "DevOps Team"\n    }, {\n      id: "qa",\n      color: "red",\n      name: "QA Team"\n    }],\n    currentBadgeId: \'frontend\' as any\n  }\n}',...TeamAssignment.parameters?.docs?.source}}},Category.parameters={...Category.parameters,docs:{...Category.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: `Demonstrates badges for product or content categories, with different colors for each segment.\nUse this pattern for e-commerce, content tagging, search filters, or any interface that organizes information by category (Electronics, Clothing, Books, Home & Garden, etc).`\n      }\n    }\n  },\n  args: {\n    options: [{\n      id: "electronics",\n      color: "blue",\n      name: "Electronics"\n    }, {\n      id: "clothing",\n      color: "green",\n      name: "Clothing"\n    }, {\n      id: "books",\n      color: "orange",\n      name: "Books"\n    }, {\n      id: "home-garden",\n      color: "red",\n      name: "Home & Garden"\n    }],\n    currentBadgeId: \'electronics\' as any\n  }\n}',...Category.parameters?.docs?.source}}}},"./libs/frakton-ng/badge-selector/src/modal/badge-selector-modal.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"* {\n  box-sizing: border-box;\n}\n\np {\n  margin: 0;\n}\n\n.container {\n  padding: var(--space-xs);\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-xs);\n}\n.container__first-row {\n  display: flex;\n  gap: var(--space-xs);\n}\n.container__second-row {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-xs);\n}\n.container__badge {\n  display: block;\n  cursor: pointer;\n}\n.container__badge:hover {\n  scale: 105%;\n}\n.container__badge-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-xs);\n}\n.container__badge-content p {\n  white-space: nowrap;\n}\n.container__badge-content fkt-icon {\n  font-size: var(--font-size-sm) !important;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/frakton-ng/badge/src/fkt-badge.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".badge {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: fit-content;\n  width: fit-content;\n  border-radius: var(--radius-md);\n  color: var(--color-neutral-100);\n  gap: var(--space-xs);\n  padding: var(--space-3xs) var(--space-xs);\n  font-weight: var(--font-semibold);\n  font-size: var(--font-size-sm);\n}\n.badge.badge--opaque.badge--red {\n  background-color: var(--color-red-500);\n}\n.badge.badge--opaque.badge--blue {\n  background-color: var(--color-blue-500);\n}\n.badge.badge--opaque.badge--orange {\n  background-color: var(--color-orange-500);\n}\n.badge.badge--opaque.badge--green {\n  background-color: var(--color-green-500);\n}\n.badge.badge--faded.badge--red {\n  background-color: var(--color-red-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--blue {\n  background-color: var(--color-blue-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--orange {\n  background-color: var(--color-orange-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--green {\n  background-color: var(--color-green-200);\n  color: var(--color-neutral-950);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/frakton-ng/badge/src/fkt-badge.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{U:()=>FktBadgeComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var fkt_badge_componentngResource=__webpack_require__("./libs/frakton-ng/badge/src/fkt-badge.component.scss?ngResource"),fkt_badge_componentngResource_default=__webpack_require__.n(fkt_badge_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/core.mjs"),resource=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/resource.mjs"),debug_node=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/debug_node.mjs");let FktBadgeComponent=class FktBadgeComponent{text=(0,core.input)();color=core.input.required();variant=(0,core.input)("opaque");classes=(0,resource.EW)(()=>[`badge--${this.color()}`,`badge--${this.variant()}`,"badge"]);static propDecorators={text:[{type:debug_node.pde,args:[{isSignal:!0,alias:"text",required:!1,transform:void 0}]}],color:[{type:debug_node.pde,args:[{isSignal:!0,alias:"color",required:!0,transform:void 0}]}],variant:[{type:debug_node.pde,args:[{isSignal:!0,alias:"variant",required:!1,transform:void 0}]}]}};FktBadgeComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"fkt-badge",imports:[],template:'<div [class]="classes()">\r\n\t<ng-content select="[badge-content]">\r\n\t\t{{ text() }}\r\n\t</ng-content>\r\n</div>\r\n',styles:[fkt_badge_componentngResource_default()]})],FktBadgeComponent)},"./node_modules/.pnpm/@storybook+angular@9.1.1_73ef9e1b642e0aee87d2d1d4ea585c4e/node_modules/@storybook/angular/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{L4:()=>applicationConfig,by:()=>argsToTemplate,Iz:()=>moduleMetadata});var chunk_LXSTVAFF=__webpack_require__("./node_modules/.pnpm/@storybook+angular@9.1.1_73ef9e1b642e0aee87d2d1d4ea585c4e/node_modules/@storybook/angular/dist/chunk-LXSTVAFF.mjs");__webpack_require__("storybook/preview-api");var moduleMetadata=metadata=>storyFn=>{let story=storyFn(),storyMetadata=story.moduleMetadata||{};return metadata=metadata||{},{...story,moduleMetadata:{declarations:[...metadata.declarations||[],...storyMetadata.declarations||[]],entryComponents:[...metadata.entryComponents||[],...storyMetadata.entryComponents||[]],imports:[...metadata.imports||[],...storyMetadata.imports||[]],schemas:[...metadata.schemas||[],...storyMetadata.schemas||[]],providers:[...metadata.providers||[],...storyMetadata.providers||[]]}}};function applicationConfig(config){return storyFn=>{let story=storyFn(),storyConfig=story.applicationConfig;return{...story,applicationConfig:storyConfig||config?{...config,...storyConfig,providers:[...config?.providers||[],...storyConfig?.providers||[]]}:void 0}}}function argsToTemplate(args,options={}){let includeSet=options.include?new Set(options.include):null,excludeSet=options.exclude?new Set(options.exclude):null;return Object.entries(args).filter(([key])=>void 0!==args[key]).filter(([key])=>includeSet?includeSet.has(key):!excludeSet||!excludeSet.has(key)).map(([key,value])=>"function"==typeof value?`(${key})="${(0,chunk_LXSTVAFF.oK)(key)}($event)"`:`[${key}]="${(0,chunk_LXSTVAFF.oK)(key)}"`).join(" ")}__webpack_require__("./node_modules/.pnpm/@storybook+angular@9.1.1_73ef9e1b642e0aee87d2d1d4ea585c4e/node_modules/@storybook/angular/dist/chunk-CUDJAP6K.mjs")},"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}}}]);