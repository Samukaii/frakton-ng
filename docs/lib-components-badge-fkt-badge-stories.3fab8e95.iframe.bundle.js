(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[5541],{"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./projects/core/src/lib/components/badge/fkt-badge.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.2_esbuild@0.25.9_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".badge {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: fit-content;\n  width: fit-content;\n  border-radius: var(--radius-md);\n  color: var(--color-neutral-100);\n  gap: var(--space-xs);\n  padding: var(--space-3xs) var(--space-xs);\n  font-weight: var(--font-semibold);\n  font-size: var(--font-size-sm);\n}\n.badge.badge--opaque.badge--red {\n  background-color: var(--color-red-500);\n}\n.badge.badge--opaque.badge--blue {\n  background-color: var(--color-blue-500);\n}\n.badge.badge--opaque.badge--orange {\n  background-color: var(--color-orange-500);\n}\n.badge.badge--opaque.badge--green {\n  background-color: var(--color-green-500);\n}\n.badge.badge--faded.badge--red {\n  background-color: var(--color-red-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--blue {\n  background-color: var(--color-blue-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--orange {\n  background-color: var(--color-orange-200);\n  color: var(--color-neutral-950);\n}\n.badge.badge--faded.badge--green {\n  background-color: var(--color-green-200);\n  color: var(--color-neutral-950);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/core/src/lib/components/badge/fkt-badge.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{U:()=>FktBadgeComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var fkt_badge_componentngResource=__webpack_require__("./projects/core/src/lib/components/badge/fkt-badge.component.scss?ngResource"),fkt_badge_componentngResource_default=__webpack_require__.n(fkt_badge_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/core.mjs"),resource=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/resource.mjs"),debug_node=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/debug_node.mjs"),to_class_pipe=__webpack_require__("./projects/core/src/lib/pipes/to-class.pipe.ts");let FktBadgeComponent=class FktBadgeComponent{text=(0,core.input)();color=core.input.required();variant=(0,core.input)("opaque");classes=(0,resource.EW)(()=>[`badge--${this.color()}`,`badge--${this.variant()}`,"badge"]);static propDecorators={text:[{type:debug_node.pde,args:[{isSignal:!0,alias:"text",required:!1,transform:void 0}]}],color:[{type:debug_node.pde,args:[{isSignal:!0,alias:"color",required:!0,transform:void 0}]}],variant:[{type:debug_node.pde,args:[{isSignal:!0,alias:"variant",required:!1,transform:void 0}]}]}};FktBadgeComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"fkt-badge",imports:[to_class_pipe.s],template:'<div [class]="classes() | toClass">\r\n\t<ng-content select="[badge-content]">\r\n\t\t{{ text() }}\r\n\t</ng-content>\r\n</div>\r\n',styles:[fkt_badge_componentngResource_default()]})],FktBadgeComponent)},"./projects/core/src/lib/components/badge/fkt-badge.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Category:()=>Category,CategoryBadge:()=>CategoryBadge,Count:()=>Count,CountBadge:()=>CountBadge,Error:()=>Error,Info:()=>Info,LongText:()=>LongText,LongTextBadge:()=>LongTextBadge,Priority:()=>Priority,PriorityBadge:()=>PriorityBadge,Status:()=>Status,StatusBadge:()=>StatusBadge,Success:()=>Success,Variations:()=>Variations,Warning:()=>Warning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>fkt_badge_stories});const meta={title:"Components/Badge",component:__webpack_require__("./projects/core/src/lib/components/badge/fkt-badge.component.ts").U,argTypes:{text:{control:"text"},variant:{control:"select",options:["opaque","faded"]},color:{control:"select",options:["green","red","blue","orange"]}}},Success={args:{text:"Success",color:"green",variant:"opaque"}},Error={args:{text:"Error",color:"red",variant:"opaque"}},Warning={args:{text:"Warning",color:"orange",variant:"opaque"}},Info={args:{text:"Info",color:"blue",variant:"faded"}},Variations={render:args=>({props:args,template:'\n            <div class="flex flex-col gap-4">\n                <div class="flex flex-col gap-2">\n                    <h2 class="text-lg font-semibold border-b border-gray-200 pb-1">Opaque Variant</h2>\n                    <div class="flex gap-2 items-center flex-wrap">\n                        <fkt-badge text="Green" color="green" variant="opaque" />\n                        <fkt-badge text="Red" color="red" variant="opaque" />\n                        <fkt-badge text="Blue" color="blue" variant="opaque" />\n                        <fkt-badge text="Orange" color="orange" variant="opaque" />\n                    </div>\n                </div>\n                <div class="flex flex-col gap-2">\n                    <h2 class="text-lg font-semibold border-b border-gray-200 pb-1">Faded Variant</h2>\n                    <div class="flex gap-2 items-center flex-wrap">\n                        <fkt-badge text="Green" color="green" variant="faded" />\n                        <fkt-badge text="Red" color="red" variant="faded" />\n                        <fkt-badge text="Blue" color="blue" variant="faded" />\n                        <fkt-badge text="Orange" color="orange" variant="faded" />\n                    </div>\n                </div>\n            </div>\n        '}),args:{}},Count={args:{text:"5",color:"blue",variant:"opaque"}},Status={args:{text:"Online",color:"green",variant:"opaque"}},Category={args:{text:"Electronics",color:"blue",variant:"faded"}},Priority={args:{text:"High Priority",color:"red",variant:"opaque"}},LongText={args:{text:"Very Long Category Name",color:"blue",variant:"faded"}},CountBadge=Count,StatusBadge=Status,CategoryBadge=Category,PriorityBadge=Priority,LongTextBadge=LongText,fkt_badge_stories=meta,__namedExportsOrder=["Success","Error","Warning","Info","Variations","Count","Status","Category","Priority","LongText","CountBadge","StatusBadge","CategoryBadge","PriorityBadge","LongTextBadge"];Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Success',\n    color: 'green',\n    variant: 'opaque'\n  }\n}",...Success.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Error',\n    color: 'red',\n    variant: 'opaque'\n  }\n}",...Error.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Warning',\n    color: 'orange',\n    variant: 'opaque'\n  }\n}",...Warning.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Info',\n    color: 'blue',\n    variant: 'faded'\n  }\n}",...Info.parameters?.docs?.source}}},Variations.parameters={...Variations.parameters,docs:{...Variations.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n            <div class="flex flex-col gap-4">\n                <div class="flex flex-col gap-2">\n                    <h2 class="text-lg font-semibold border-b border-gray-200 pb-1">Opaque Variant</h2>\n                    <div class="flex gap-2 items-center flex-wrap">\n                        <fkt-badge text="Green" color="green" variant="opaque" />\n                        <fkt-badge text="Red" color="red" variant="opaque" />\n                        <fkt-badge text="Blue" color="blue" variant="opaque" />\n                        <fkt-badge text="Orange" color="orange" variant="opaque" />\n                    </div>\n                </div>\n                <div class="flex flex-col gap-2">\n                    <h2 class="text-lg font-semibold border-b border-gray-200 pb-1">Faded Variant</h2>\n                    <div class="flex gap-2 items-center flex-wrap">\n                        <fkt-badge text="Green" color="green" variant="faded" />\n                        <fkt-badge text="Red" color="red" variant="faded" />\n                        <fkt-badge text="Blue" color="blue" variant="faded" />\n                        <fkt-badge text="Orange" color="orange" variant="faded" />\n                    </div>\n                </div>\n            </div>\n        `\n  }),\n  args: {}\n}',...Variations.parameters?.docs?.source}}},Count.parameters={...Count.parameters,docs:{...Count.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: '5',\n    color: 'blue',\n    variant: 'opaque'\n  }\n}",...Count.parameters?.docs?.source}}},Status.parameters={...Status.parameters,docs:{...Status.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Online',\n    color: 'green',\n    variant: 'opaque'\n  }\n}",...Status.parameters?.docs?.source}}},Category.parameters={...Category.parameters,docs:{...Category.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Electronics',\n    color: 'blue',\n    variant: 'faded'\n  }\n}",...Category.parameters?.docs?.source}}},Priority.parameters={...Priority.parameters,docs:{...Priority.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'High Priority',\n    color: 'red',\n    variant: 'opaque'\n  }\n}",...Priority.parameters?.docs?.source}}},LongText.parameters={...LongText.parameters,docs:{...LongText.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Very Long Category Name',\n    color: 'blue',\n    variant: 'faded'\n  }\n}",...LongText.parameters?.docs?.source}}},CountBadge.parameters={...CountBadge.parameters,docs:{...CountBadge.parameters?.docs,source:{originalSource:"Count",...CountBadge.parameters?.docs?.source}}},StatusBadge.parameters={...StatusBadge.parameters,docs:{...StatusBadge.parameters?.docs,source:{originalSource:"Status",...StatusBadge.parameters?.docs?.source}}},CategoryBadge.parameters={...CategoryBadge.parameters,docs:{...CategoryBadge.parameters?.docs,source:{originalSource:"Category",...CategoryBadge.parameters?.docs?.source}}},PriorityBadge.parameters={...PriorityBadge.parameters,docs:{...PriorityBadge.parameters?.docs,source:{originalSource:"Priority",...PriorityBadge.parameters?.docs?.source}}},LongTextBadge.parameters={...LongTextBadge.parameters,docs:{...LongTextBadge.parameters?.docs,source:{originalSource:"LongText",...LongTextBadge.parameters?.docs?.source}}}},"./projects/core/src/lib/pipes/to-class.pipe.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>ToClassPipe});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@angular+core@20.2.3_@angul_c9ee8335d2256103e29db4665678f6ce/node_modules/@angular/core/fesm2022/debug_node.mjs");let ToClassPipe=class ToClassPipe{transform(value){return value.join(" ")}};ToClassPipe=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.nT_)({name:"toClass"})],ToClassPipe)}}]);