(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[1937,8731],{"./node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@19.1.10_react@19.1.1/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/.pnpm/@storybook+addon-docs@9.1.1_1e3dbc6425d957f744da9273d11c9cb8/node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/@storybook+addon-docs@9.1.1_1e3dbc6425d957f744da9273d11c9cb8/node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/.pnpm/storybook@9.1.1_@testing-li_2ef7df0cb221d90fbbfc72c9d4670579/node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/storybook@9.1.1_@testing-li_2ef7df0cb221d90fbbfc72c9d4670579/node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/.pnpm/storybook@9.1.1_@testing-li_2ef7df0cb221d90fbbfc72c9d4670579/node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/.pnpm/storybook@9.1.1_@testing-li_2ef7df0cb221d90fbbfc72c9d4670579/node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./projects/core/src/lib/components/dialog/fkt-dialog.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_1e3dbc6425d957f744da9273d11c9cb8_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.0_@types+react@19.1.10_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_1e3dbc6425d957f744da9273d11c9cb8/node_modules/@storybook/addon-docs/dist/blocks.mjs"),_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./projects/core/src/lib/components/dialog/fkt-dialog.stories.ts");function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_1e3dbc6425d957f744da9273d11c9cb8_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.W8,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"FktDialog"})," service provides a powerful and flexible system for creating modal dialogs in your Angular applications.\r\nBuilt with modern Angular signals and reactive patterns, it supports advanced TypeScript inference, custom components, various sizing options, and pre-built confirmation dialogs with seamless data binding."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Advanced TypeScript Inference"}),": Automatic type inference for dialog data based on component signal inputs, outputs, and models"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Signal-Based Architecture"}),": Built for Angular's new signal APIs with full reactivity support"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Component Agnostic Design"}),": Dialog components work anywhere - in dialogs, overlays, or standalone"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Flexible Sizing"}),": Configure dialog width, height, positioning, and responsive behavior"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Backdrop Interaction"}),": Intelligent handling of clicks outside the dialog with customizable behavior"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Memory Safe"}),": Automatic lifecycle management with proper cleanup and destroy callbacks"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Performance Optimized"}),": Efficient DOM management and minimal re-renders"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Multiple Dialogs"}),": Support for multiple dialogs simultaneously with independent management"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Confirmation Dialogs"}),": Pre-built confirmation dialog with customizable actions and themes"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Accessibility"}),": ARIA attributes, focus management, and keyboard navigation support"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"simple-dialog",children:"Simple Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Basic dialog examples demonstrating signal-based components and reactive content. Shows how dialogs maintain reactivity and handle simple interactions."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.SimpleDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"@Component({\r\n\tselector: 'demo-simple-dialog',\r\n\ttemplate: `\r\n\t\t<h2 class=\"text-xl font-semibold mb-4\">{{ title() }}</h2>\r\n\t\t<p class=\"text-gray-600 mb-6\">{{ message() }}</p>\r\n\t\t<fkt-buttons-list\r\n\t\t\t[actions]=\"actions()\"\r\n\t\t\thorizontalAlignment=\"end\"\r\n\t\t\tclass=\"w-full\"\r\n\t\t></fkt-buttons-list>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonsListComponent]\r\n})\r\nexport class FktSimpleDialogDemoComponent {\r\n\ttitle = input('Simple Dialog');\r\n\tmessage = input('This is a simple dialog with basic content.');\r\n\r\n\tcloseDialog = output<void>();\r\n\r\n\tactions = computed((): FktButtonAction[] => [\r\n\t\t{\r\n\t\t\tidentifier: 'close',\r\n\t\t\ttext: 'Close',\r\n\t\t\ttheme: 'raised',\r\n\t\t\tclick: () => this.closeDialog.emit()\r\n\t\t}\r\n\t]);\r\n}\r\n\r\n@Component({\r\n\tselector: 'simple-dialog-example',\r\n\ttemplate: `\r\n\t\t<div class=\"p-4 space-y-3\">\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext=\"Open Simple Dialog\" \r\n\t\t\t\ttheme=\"raised\" \r\n\t\t\t\t(click)=\"openDialog()\" \r\n\t\t\t/>\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext=\"Update Message\" \r\n\t\t\t\ttheme=\"stroked\" \r\n\t\t\t\tcolor=\"green\"\r\n\t\t\t\t(click)=\"updateMessage()\" \r\n\t\t\t/>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktSimpleDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\tmessageSignal = signal('This message comes from a reactive signal!');\r\n\r\n\topenDialog() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktSimpleDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Dynamic Simple Dialog',\r\n\t\t\t\tmessage: this.messageSignal,  // Reactive signal\r\n\t\t\t\tonClose: () => {\r\n\t\t\t\t\tconsole.log('Dialog closed');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { \r\n\t\t\t\twidth: '400px', \r\n\t\t\t\tpadding: '2rem' \r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdateMessage() {\r\n\t\tthis.messageSignal.set('Message updated! See how it changes in open dialogs.');\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"form-dialog",children:"Form Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Advanced dialogs containing forms with validation, submission handling, and data binding. Demonstrates how to handle complex user interactions within dialog contexts."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.FormDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-1",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FormData {\r\n\tname: string;\r\n\temail: string;\r\n}\r\n\r\n@Component({\r\n\tselector: 'demo-form-dialog',\r\n\ttemplate: `\r\n\t\t\t<h2 class=\"text-xl font-semibold mb-2\">{{title()}}</h2>\r\n\t\t\t<p class=\"text-gray-600 mb-4\">{{description()}}</p>\r\n\r\n\t\t\t<div class=\"space-y-4 mb-6\">\r\n\t\t\t\t<fkt-input\r\n\t\t\t\t\t[control]=\"nameControl\"\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tplaceholder=\"Enter your name\"\r\n\t\t\t\t></fkt-input>\r\n\r\n\t\t\t\t<fkt-input\r\n\t\t\t\t\t[control]=\"emailControl\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t></fkt-input>\r\n\t\t\t</div>\r\n\r\n\t\t\t<fkt-buttons-list\r\n\t\t\t\t[actions]=\"actions()\"\r\n\t\t\t\tclass=\"w-full\"\r\n\t\t\t\tfill\r\n\t\t\t></fkt-buttons-list>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktInputComponent, FktButtonsListComponent]\r\n})\r\nexport class FktFormDialogDemoComponent {\r\n\t// Input signals\r\n\ttitle = input('Form Dialog');\r\n\tdescription = input('Fill out the form below:');\r\n\tinitialName = input('');\r\n\tinitialEmail = input('');\r\n\r\n\t// Output signals\r\n\tformSubmit = output<FormData>();\r\n\tformCancel = output<void>();\r\n\r\n\t// Form controls\r\n\tnameControl = new SignalFormControl(this.initialName());\r\n\temailControl = new SignalFormControl(this.initialEmail());\r\n\r\n\t// Computed actions\r\n\tactions = computed((): FktButtonAction[] => [\r\n\t\t{\r\n\t\t\tidentifier: 'cancel',\r\n\t\t\ttext: 'Cancel',\r\n\t\t\ttheme: 'stroked',\r\n\t\t\tclick: () => this.cancel()\r\n\t\t},\r\n\t\t{\r\n\t\t\tidentifier: 'save',\r\n\t\t\ttext: 'Save',\r\n\t\t\ttheme: 'raised',\r\n\t\t\tclick: () => this.save()\r\n\t\t},\r\n\t]);\r\n\r\n\tprivate save() {\r\n\t\tconst formData: FormData = {\r\n\t\t\tname: this.nameControl.value(),\r\n\t\t\temail: this.emailControl.value()\r\n\t\t};\r\n\t\tthis.formSubmit.emit(formData);\r\n\t}\r\n\r\n\tprivate cancel() {\r\n\t\tthis.formCancel.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'form-dialog-example',\r\n\ttemplate: `\r\n\t\t<div class=\"space-y-3\">\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext=\"Contact Form\" \r\n\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t(click)=\"openContactForm()\" \r\n\t\t\t/>\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext=\"User Registration\" \r\n\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\tcolor=\"green\"\r\n\t\t\t\t(click)=\"openRegistrationForm()\" \r\n\t\t\t/>\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext=\"Feedback Form\" \r\n\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t(click)=\"openFeedbackForm()\" \r\n\t\t\t/>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktFormDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\r\n\topenContactForm() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFormDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Contact Us',\r\n\t\t\t\tdescription: 'We would love to hear from you. Send us a message and we will respond as soon as possible.',\r\n\t\t\t\tinitialName: '',\r\n\t\t\t\tinitialEmail: '',\r\n\t\t\t\tformSubmit: (formData) => {\r\n\t\t\t\t\tconsole.log('Contact form submitted:', formData);\r\n\t\t\t\t\talert(`Thank you ${formData.name}! We received your message.`);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tformCancel: () => {\r\n\t\t\t\t\tconsole.log('Contact form cancelled');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenRegistrationForm() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFormDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'User Registration',\r\n\t\t\t\tdescription: 'Create your account by providing the required information.',\r\n\t\t\t\tinitialName: '',\r\n\t\t\t\tinitialEmail: '',\r\n\t\t\t\tformSubmit: (formData) => {\r\n\t\t\t\t\tconsole.log('Registration form submitted:', formData);\r\n\t\t\t\t\talert(`Welcome ${formData.name}! Your account has been created.`);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tformCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenFeedbackForm() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFormDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Share Your Feedback',\r\n\t\t\t\tdescription: 'Help us improve by sharing your thoughts and suggestions.',\r\n\t\t\t\tinitialName: 'John Doe',\r\n\t\t\t\tinitialEmail: 'john@example.com',\r\n\t\t\t\tformSubmit: (formData) => {\r\n\t\t\t\t\tconsole.log('Feedback form submitted:', formData);\r\n\t\t\t\t\talert(`Thanks for your feedback, ${formData.name}!`);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tformCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"custom-dialog",children:"Custom Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Advanced dialogs with complex content, icons, expandable details, and dynamic data. Shows custom styling, signal updates, and sophisticated user interactions."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.CustomDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-2",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"@Component({\r\n\tselector: 'fkt-custom-dialog-demo',\r\n\ttemplate: `\r\n\t\t<div class=\"space-y-4 min-w-96\">\r\n\t\t\t<div class=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\r\n\t\t\t\t<div class=\"p-2 bg-primary-100 rounded-lg\">\r\n\t\t\t\t\t<fkt-icon [name]=\"iconName()\" size=\"24\" class=\"text-primary-600\"></fkt-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">{{title()}}</h3>\r\n\t\t\t\t\t<p class=\"text-sm text-gray-500\">{{subtitle()}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t@if(showBadge()) {\r\n\t\t\t\t\t<fkt-badge\r\n\t\t\t\t\t\t[text]=\"badgeText()\"\r\n\t\t\t\t\t\t[color]=\"badgeColor()\"\r\n\t\t\t\t\t\tvariant=\"opaque\"\r\n\t\t\t\t\t\tclass=\"ml-auto\"\r\n\t\t\t\t\t></fkt-badge>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"text-gray-700\">\r\n\t\t\t\t<p>{{description()}}</p>\r\n\t\t\t\t\r\n\t\t\t\t@if(showDetails()) {\r\n\t\t\t\t\t<div class=\"mt-4 p-3 bg-gray-50 rounded-lg\">\r\n\t\t\t\t\t\t<h4 class=\"font-medium mb-2\">Additional Details:</h4>\r\n\t\t\t\t\t\t<ul class=\"text-sm space-y-1\">\r\n\t\t\t\t\t\t\t@for(detail of details(); track detail) {\r\n\t\t\t\t\t\t\t\t<li class=\"flex items-center gap-2\">\r\n\t\t\t\t\t\t\t\t\t<fkt-icon name=\"check-circle\" size=\"16\" class=\"text-green-500\"></fkt-icon>\r\n\t\t\t\t\t\t\t\t\t{{detail}}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t@if(showCounter()) {\r\n\t\t\t\t\t<div class=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n\t\t\t\t\t\t<div class=\"flex items-center justify-between\">\r\n\t\t\t\t\t\t\t<span class=\"font-medium\">Counter: {{counter()}}</span>\r\n\t\t\t\t\t\t\t<div class=\"flex gap-1\">\r\n\t\t\t\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t\t\t\ttext=\"-\"\r\n\t\t\t\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\t\t\t\t(click)=\"decrement()\"\r\n\t\t\t\t\t\t\t\t\t[disabled]=\"counter() <= 0\"\r\n\t\t\t\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t\t\t\ttext=\"+\"\r\n\t\t\t\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\t\t\t\t(click)=\"increment()\"\r\n\t\t\t\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\ttext=\"Toggle Details\"\r\n\t\t\t\t\ttheme=\"basic\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"toggleDetails()\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t\t<div class=\"flex gap-2\">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"Cancel\"\r\n\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\t(click)=\"handleCancel()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"Confirm\"\r\n\t\t\t\t\t\ttheme=\"raised\"\r\n\t\t\t\t\t\t[color]=\"primaryColor()\"\r\n\t\t\t\t\t\t(click)=\"handleConfirm()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent, FktIconComponent, FktBadgeComponent]\r\n})\r\nexport class FktCustomDialogDemoComponent {\r\n\ttitle = input('Custom Dialog');\r\n\tsubtitle = input('Advanced dialog example');\r\n\tdescription = input('This dialog demonstrates advanced features like expandable content, counters, and dynamic updates.');\r\n\ticonName = input('cog-6-tooth');\r\n\tshowBadge = input(true);\r\n\tbadgeText = input('NEW');\r\n\tbadgeColor = input<'primary' | 'green' | 'yellow' | 'red'>('primary');\r\n\tprimaryColor = input<'primary' | 'green' | 'yellow' | 'red'>('primary');\r\n\tshowCounter = input(true);\r\n\r\n\tcounter = model(0);\r\n\tdetails = input<string[]>(['Feature A enabled', 'Premium support included', 'Advanced analytics available']);\r\n\r\n\tonConfirm = output<{counter: number, detailsVisible: boolean}>();\r\n\tonCancel = output<void>();\r\n\r\n\tshowDetails = signal(false);\r\n\r\n\tincrement() {\r\n\t\tthis.counter.set(this.counter() + 1);\r\n\t}\r\n\r\n\tdecrement() {\r\n\t\tif (this.counter() > 0) {\r\n\t\t\tthis.counter.set(this.counter() - 1);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleDetails() {\r\n\t\tthis.showDetails.set(!this.showDetails());\r\n\t}\r\n\r\n\thandleConfirm() {\r\n\t\tthis.onConfirm.emit({\r\n\t\t\tcounter: this.counter(),\r\n\t\t\tdetailsVisible: this.showDetails()\r\n\t\t});\r\n\t}\r\n\r\n\thandleCancel() {\r\n\t\tthis.onCancel.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'custom-dialog-example',\r\n\ttemplate: `\r\n\t\t<div class=\"space-y-3\">\r\n\t\t\t<div class=\"grid grid-cols-2 gap-3\">\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Settings Dialog\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"openSettingsDialog()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Premium Features\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t(click)=\"openPremiumDialog()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Warning Dialog\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t(click)=\"openWarningDialog()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Error Report\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t(click)=\"openErrorDialog()\" \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktCustomDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\r\n\t// Shared reactive state\r\n\tsharedCounter = signal(5);\r\n\r\n\topenSettingsDialog() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktCustomDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Application Settings',\r\n\t\t\t\tsubtitle: 'Configure your preferences',\r\n\t\t\t\tdescription: 'Adjust the settings below to customize your experience. Changes are saved automatically.',\r\n\t\t\t\ticonName: 'cog-6-tooth',\r\n\t\t\t\tbadgeText: 'BETA',\r\n\t\t\t\tbadgeColor: 'primary' as const,\r\n\t\t\t\tprimaryColor: 'primary' as const,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tdetails: ['Dark mode available', 'Notifications enabled', 'Auto-save active'],\r\n\t\t\t\tonConfirm: (data) => {\r\n\t\t\t\t\tconsole.log('Settings confirmed:', data);\r\n\t\t\t\t\talert(`Settings saved! Counter: ${data.counter}, Details shown: ${data.detailsVisible}`);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t\tconsole.log('Settings cancelled');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenPremiumDialog() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktCustomDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Upgrade to Premium',\r\n\t\t\t\tsubtitle: 'Unlock advanced features',\r\n\t\t\t\tdescription: 'Get access to premium features including advanced analytics, priority support, and exclusive content.',\r\n\t\t\t\ticonName: 'star',\r\n\t\t\t\tbadgeText: 'PRO',\r\n\t\t\t\tbadgeColor: 'green' as const,\r\n\t\t\t\tprimaryColor: 'green' as const,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tshowCounter: false,\r\n\t\t\t\tdetails: ['Priority support', 'Advanced analytics', 'Custom themes', 'API access'],\r\n\t\t\t\tonConfirm: (data) => {\r\n\t\t\t\t\tconsole.log('Premium upgrade confirmed:', data);\r\n\t\t\t\t\talert('Welcome to Premium! 🌟');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenWarningDialog() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktCustomDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'System Warning',\r\n\t\t\t\tsubtitle: 'Action required',\r\n\t\t\t\tdescription: 'We detected some issues that require your attention. Please review the details and take action.',\r\n\t\t\t\ticonName: 'exclamation-triangle',\r\n\t\t\t\tbadgeText: 'WARNING',\r\n\t\t\t\tbadgeColor: 'yellow' as const,\r\n\t\t\t\tprimaryColor: 'yellow' as const,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tdetails: ['Disk space running low', 'Security update available', 'Backup recommended'],\r\n\t\t\t\tonConfirm: (data) => {\r\n\t\t\t\t\tconsole.log('Warning acknowledged:', data);\r\n\t\t\t\t\talert('Thanks for acknowledging the warning.');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenErrorDialog() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktCustomDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Error Report',\r\n\t\t\t\tsubtitle: 'Something went wrong',\r\n\t\t\t\tdescription: 'An unexpected error occurred. Please review the details and try again or contact support.',\r\n\t\t\t\ticonName: 'x-circle',\r\n\t\t\t\tbadgeText: 'ERROR',\r\n\t\t\t\tbadgeColor: 'red' as const,\r\n\t\t\t\tprimaryColor: 'red' as const,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tdetails: ['Connection failed', 'Data corrupted', 'Retry recommended'],\r\n\t\t\t\tonConfirm: (data) => {\r\n\t\t\t\t\tconsole.log('Error report sent:', data);\r\n\t\t\t\t\talert('Error report sent to our team.');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '500px', padding: '2rem' }\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"confirmation-dialog",children:"Confirmation Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Pre-built confirmation dialogs for destructive actions and important decisions. Demonstrates the built-in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"confirm()"})," method with customizable buttons, colors, and actions."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.ConfirmationDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-3",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"@Component({\r\n\tselector: 'confirmation-dialog-example',\r\n\ttemplate: `\r\n\t\t<div class=\"space-y-4\">\r\n\t\t\t<h3 class=\"text-lg font-semibold\">Confirmation Dialogs</h3>\r\n\t\t\t<p class=\"text-gray-600\">Pre-built dialogs for common confirmation scenarios.</p>\r\n\t\t\t\r\n\t\t\t<div class=\"grid grid-cols-2 gap-3\">\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Delete Item\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t(click)=\"confirmDelete()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Save Changes\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t(click)=\"confirmSave()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Discard Draft\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t(click)=\"confirmDiscard()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Reset Settings\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"confirmReset()\" \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n\t\t\t\t<h4 class=\"font-medium mb-2\">Action Log:</h4>\r\n\t\t\t\t<div class=\"max-h-32 overflow-y-auto\">\r\n\t\t\t\t\t@for(log of actionLogs(); track $index) {\r\n\t\t\t\t\t\t<div class=\"text-sm text-gray-600 py-1\">\r\n\t\t\t\t\t\t\t<span class=\"font-mono\">{{log.timestamp}}</span> - {{log.action}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t@if(actionLogs().length === 0) {\r\n\t\t\t\t\t\t<p class=\"text-sm text-gray-500 italic\">No actions yet...</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Clear Log\" \r\n\t\t\t\t\ttheme=\"basic\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclass=\"mt-2\"\r\n\t\t\t\t\t(click)=\"clearLog()\"\r\n\t\t\t\t\t[disabled]=\"actionLogs().length === 0\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktConfirmationDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\t\r\n\tactionLogs = signal<{timestamp: string, action: string}[]>([]);\r\n\r\n\tprivate logAction(action: string) {\r\n\t\tconst timestamp = new Date().toLocaleTimeString();\r\n\t\tthis.actionLogs.update(logs => [...logs, { timestamp, action }]);\r\n\t}\r\n\r\n\tconfirmDelete() {\r\n\t\tthis.dialogService.confirm({\r\n\t\t\ttitle: 'Delete Item?',\r\n\t\t\tdescription: 'This action cannot be undone. The item will be permanently deleted from your account.',\r\n\t\t\tactions: {\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\ttext: 'Delete',\r\n\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\tclick: () => {\r\n\t\t\t\t\t\tthis.logAction('Item deleted successfully');\r\n\t\t\t\t\t\tconsole.log('Item deleted');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsecondary: {\r\n\t\t\t\t\ttext: 'Cancel'\r\n\t\t\t\t\t// Automatically closes the dialog\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbackdropClick: () => {\r\n\t\t\t\tthis.logAction('Delete cancelled (backdrop click)');\r\n\t\t\t\tconsole.log('Delete cancelled via backdrop');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconfirmSave() {\r\n\t\tthis.dialogService.confirm({\r\n\t\t\ttitle: 'Save Changes?',\r\n\t\t\tdescription: 'Do you want to save your changes? This will overwrite the existing data.',\r\n\t\t\tactions: {\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\ttext: 'Save',\r\n\t\t\t\t\tcolor: 'green',\r\n\t\t\t\t\tclick: () => {\r\n\t\t\t\t\t\tthis.logAction('Changes saved successfully');\r\n\t\t\t\t\t\tconsole.log('Changes saved');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsecondary: {\r\n\t\t\t\t\ttext: 'Don\\'t Save',\r\n\t\t\t\t\tclick: () => {\r\n\t\t\t\t\t\tthis.logAction('Changes discarded');\r\n\t\t\t\t\t\tconsole.log('Changes not saved');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconfirmDiscard() {\r\n\t\tthis.dialogService.confirm({\r\n\t\t\ttitle: 'Discard Draft?',\r\n\t\t\tdescription: 'Are you sure you want to discard this draft? Any unsaved changes will be lost.',\r\n\t\t\tactions: {\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\ttext: 'Discard',\r\n\t\t\t\t\tcolor: 'yellow',\r\n\t\t\t\t\tclick: () => {\r\n\t\t\t\t\t\tthis.logAction('Draft discarded');\r\n\t\t\t\t\t\tconsole.log('Draft discarded');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsecondary: {\r\n\t\t\t\t\ttext: 'Keep Editing'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbackdropClick: () => {\r\n\t\t\t\tthis.logAction('Discard cancelled (backdrop click)');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconfirmReset() {\r\n\t\tthis.dialogService.confirm({\r\n\t\t\ttitle: 'Reset All Settings?',\r\n\t\t\tdescription: 'This will restore all settings to their default values. Your current preferences will be lost.',\r\n\t\t\tactions: {\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\ttext: 'Reset',\r\n\t\t\t\t\tcolor: 'primary',\r\n\t\t\t\t\tclick: () => {\r\n\t\t\t\t\t\tthis.logAction('Settings reset to defaults');\r\n\t\t\t\t\t\tconsole.log('Settings reset');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsecondary: {\r\n\t\t\t\t\ttext: 'Cancel'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tclearLog() {\r\n\t\tthis.actionLogs.set([]);\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"full-screen-dialog",children:"Full Screen Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Large dialogs covering most of the viewport (90vw × 80vh). Perfect for immersive experiences, detailed forms, complex content, or applications that need maximum screen real estate."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.FullScreenDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-4",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:'@Component({\r\n\tselector: \'fkt-fullscreen-dialog-demo\',\r\n\ttemplate: `\r\n\t\t<div class="h-full flex flex-col">\r\n\t\t\t\x3c!-- Header --\x3e\r\n\t\t\t<div class="flex items-center justify-between p-4 border-b border-gray-200 bg-white">\r\n\t\t\t\t<div class="flex items-center gap-3">\r\n\t\t\t\t\t<fkt-icon [name]="iconName()" size="24" class="text-primary-600"></fkt-icon>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2 class="text-xl font-semibold text-gray-900">{{title()}}</h2>\r\n\t\t\t\t\t\t<p class="text-sm text-gray-500">{{subtitle()}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="flex items-center gap-2">\r\n\t\t\t\t\t@if(showProgress()) {\r\n\t\t\t\t\t\t<div class="flex items-center gap-2 mr-4">\r\n\t\t\t\t\t\t\t<span class="text-sm text-gray-600">Progress:</span>\r\n\t\t\t\t\t\t\t<div class="w-24 h-2 bg-gray-200 rounded-full">\r\n\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\tclass="h-full bg-primary-500 rounded-full transition-all duration-300"\r\n\t\t\t\t\t\t\t\t\t[style.width.%]="progress()"\r\n\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span class="text-sm font-medium">{{progress()}}%</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext="✕"\r\n\t\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\t\tvariant="icon"\r\n\t\t\t\t\t\t(click)="handleClose()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\x3c!-- Content Area --\x3e\r\n\t\t\t<div class="flex-1 overflow-y-auto p-6 bg-gray-50">\r\n\t\t\t\t<div class="max-w-4xl mx-auto space-y-6">\r\n\t\t\t\t\t<div class="bg-white rounded-lg p-6">\r\n\t\t\t\t\t\t<h3 class="text-lg font-semibold mb-4">{{contentTitle()}}</h3>\r\n\t\t\t\t\t\t<p class="text-gray-700 mb-4">{{contentDescription()}}</p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t@if(showTabs()) {\r\n\t\t\t\t\t\t\t<div class="border-b border-gray-200 mb-6">\r\n\t\t\t\t\t\t\t\t<nav class="flex gap-8">\r\n\t\t\t\t\t\t\t\t\t@for(tab of tabs(); track tab.id) {\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclass="py-2 px-1 border-b-2 font-medium text-sm transition-colors"\r\n\t\t\t\t\t\t\t\t\t\t\t[class.border-primary-500]="activeTab() === tab.id"\r\n\t\t\t\t\t\t\t\t\t\t\t[class.text-primary-600]="activeTab() === tab.id"\r\n\t\t\t\t\t\t\t\t\t\t\t[class.border-transparent]="activeTab() !== tab.id"\r\n\t\t\t\t\t\t\t\t\t\t\t[class.text-gray-500]="activeTab() !== tab.id"\r\n\t\t\t\t\t\t\t\t\t\t\t(click)="setActiveTab(tab.id)"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{{tab.label}}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="min-h-64">\r\n\t\t\t\t\t\t\t\t@switch(activeTab()) {\r\n\t\t\t\t\t\t\t\t\t@case(\'overview\') {\r\n\t\t\t\t\t\t\t\t\t\t<div class="grid grid-cols-2 gap-6">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="space-y-4">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 class="font-medium">Key Metrics</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="grid grid-cols-2 gap-4">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="p-4 bg-blue-50 rounded-lg">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="text-2xl font-bold text-blue-600">1,234</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="text-sm text-blue-600">Total Users</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="p-4 bg-green-50 rounded-lg">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="text-2xl font-bold text-green-600">98.5%</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="text-sm text-green-600">Uptime</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="space-y-4">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 class="font-medium">Recent Activity</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="space-y-2">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t@for(activity of activities(); track activity.id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="flex items-center gap-3 p-3 bg-gray-50 rounded">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<fkt-icon [name]="activity.icon" size="16" class="text-gray-500"></fkt-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="text-sm">{{activity.text}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case(\'settings\') {\r\n\t\t\t\t\t\t\t\t\t\t<div class="space-y-6">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 class="font-medium">Application Settings</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="grid grid-cols-2 gap-6">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="space-y-4">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="block text-sm font-medium text-gray-700 mb-2">Theme</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="w-full p-2 border border-gray-300 rounded-md">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Light</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Dark</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Auto</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="block text-sm font-medium text-gray-700 mb-2">Language</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class="w-full p-2 border border-gray-300 rounded-md">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>English</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Spanish</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>French</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="space-y-4">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="flex items-center justify-between">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="text-sm font-medium text-gray-700">Notifications</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="rounded">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="flex items-center justify-between">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="text-sm font-medium text-gray-700">Auto-save</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="rounded" checked>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="flex items-center justify-between">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="text-sm font-medium text-gray-700">Analytics</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" class="rounded">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case(\'data\') {\r\n\t\t\t\t\t\t\t\t\t\t<div class="space-y-4">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 class="font-medium">Data Management</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="overflow-x-auto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<table class="min-w-full divide-y divide-gray-200">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<thead class="bg-gray-50">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Updated</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody class="bg-white divide-y divide-gray-200">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@for(item of dataItems(); track item.id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{item.name}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="px-6 py-4 whitespace-nowrap">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [class.bg-green-100]="item.status === \'active\'"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [class.text-green-800]="item.status === \'active\'"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [class.bg-red-100]="item.status === \'inactive\'"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [class.text-red-800]="item.status === \'inactive\'">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{item.status}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{item.lastUpdated}}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class="text-primary-600 hover:text-primary-900 mr-2">Edit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class="text-red-600 hover:text-red-900">Delete</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\x3c!-- Footer --\x3e\r\n\t\t\t<div class="flex items-center justify-between p-4 border-t border-gray-200 bg-white">\r\n\t\t\t\t<div class="flex items-center gap-4">\r\n\t\t\t\t\t@if(showCounter()) {\r\n\t\t\t\t\t\t<div class="flex items-center gap-2">\r\n\t\t\t\t\t\t\t<span class="text-sm text-gray-600">Counter:</span>\r\n\t\t\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t\t\ttext="-"\r\n\t\t\t\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t\t\t\tvariant="icon"\r\n\t\t\t\t\t\t\t\tsize="sm"\r\n\t\t\t\t\t\t\t\t(click)="decrement()"\r\n\t\t\t\t\t\t\t\t[disabled]="counter() <= 0"\r\n\t\t\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t\t\t<span class="mx-2 font-mono text-lg">{{counter()}}</span>\r\n\t\t\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t\t\ttext="+"\r\n\t\t\t\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t\t\t\tvariant="icon"\r\n\t\t\t\t\t\t\t\tsize="sm"\r\n\t\t\t\t\t\t\t\t(click)="increment()"\r\n\t\t\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext="Update Progress"\r\n\t\t\t\t\t\ttheme="basic"\r\n\t\t\t\t\t\tsize="sm"\r\n\t\t\t\t\t\t(click)="updateProgress()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="flex gap-2">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext="Cancel"\r\n\t\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\t\t(click)="handleCancel()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext="Save Changes"\r\n\t\t\t\t\t\ttheme="raised"\r\n\t\t\t\t\t\t(click)="handleSave()"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent, FktIconComponent]\r\n})\r\nexport class FktFullscreenDialogDemoComponent {\r\n\ttitle = input(\'Full Screen Dialog\');\r\n\tsubtitle = input(\'Managing complex data and settings\');\r\n\ticonName = input(\'squares-plus\');\r\n\tcontentTitle = input(\'Dashboard Overview\');\r\n\tcontentDescription = input(\'This full-screen dialog demonstrates complex layouts, tabbed content, data tables, and interactive elements suitable for detailed management interfaces.\');\r\n\t\r\n\tshowProgress = input(true);\r\n\tshowTabs = input(true);\r\n\tshowCounter = input(true);\r\n\t\r\n\tprogress = signal(45);\r\n\tcounter = model(10);\r\n\tactiveTab = signal(\'overview\');\r\n\t\r\n\ttabs = input([\r\n\t\t{ id: \'overview\', label: \'Overview\' },\r\n\t\t{ id: \'settings\', label: \'Settings\' },\r\n\t\t{ id: \'data\', label: \'Data\' }\r\n\t]);\r\n\t\r\n\tactivities = input([\r\n\t\t{ id: 1, icon: \'user-plus\', text: \'New user registered\' },\r\n\t\t{ id: 2, icon: \'document-check\', text: \'Report generated\' },\r\n\t\t{ id: 3, icon: \'bell\', text: \'Notification sent\' },\r\n\t\t{ id: 4, icon: \'arrow-up-tray\', text: \'Data exported\' }\r\n\t]);\r\n\t\r\n\tdataItems = input([\r\n\t\t{ id: 1, name: \'Dataset A\', status: \'active\', lastUpdated: \'2 hours ago\' },\r\n\t\t{ id: 2, name: \'Dataset B\', status: \'inactive\', lastUpdated: \'1 day ago\' },\r\n\t\t{ id: 3, name: \'Dataset C\', status: \'active\', lastUpdated: \'30 minutes ago\' },\r\n\t\t{ id: 4, name: \'Dataset D\', status: \'active\', lastUpdated: \'5 hours ago\' }\r\n\t]);\r\n\r\n\tonSave = output<{tab: string, counter: number, progress: number}>();\r\n\tonCancel = output<void>();\r\n\tonClose = output<void>();\r\n\r\n\tsetActiveTab(tabId: string) {\r\n\t\tthis.activeTab.set(tabId);\r\n\t}\r\n\r\n\tincrement() {\r\n\t\tthis.counter.set(this.counter() + 1);\r\n\t}\r\n\r\n\tdecrement() {\r\n\t\tif (this.counter() > 0) {\r\n\t\t\tthis.counter.set(this.counter() - 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tconst newProgress = Math.min(100, this.progress() + Math.floor(Math.random() * 20) + 5);\r\n\t\tthis.progress.set(newProgress);\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tthis.onSave.emit({\r\n\t\t\ttab: this.activeTab(),\r\n\t\t\tcounter: this.counter(),\r\n\t\t\tprogress: this.progress()\r\n\t\t});\r\n\t}\r\n\r\n\thandleCancel() {\r\n\t\tthis.onCancel.emit();\r\n\t}\r\n\r\n\thandleClose() {\r\n\t\tthis.onClose.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: \'fullscreen-dialog-example\',\r\n\ttemplate: `\r\n\t\t<div class="space-y-3">\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext="Open Dashboard" \r\n\t\t\t\ttheme="raised"\r\n\t\t\t\tcolor="primary"\r\n\t\t\t\t(click)="openDashboard()" \r\n\t\t\t/>\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext="Data Manager" \r\n\t\t\t\ttheme="stroked"\r\n\t\t\t\tcolor="green"\r\n\t\t\t\t(click)="openDataManager()" \r\n\t\t\t/>\r\n\t\t\t<fkt-button \r\n\t\t\t\ttext="System Settings" \r\n\t\t\t\ttheme="stroked"\r\n\t\t\t\tcolor="yellow"\r\n\t\t\t\t(click)="openSystemSettings()" \r\n\t\t\t/>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktFullscreenDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\tsharedCounter = signal(15);\r\n\r\n\topenDashboard() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFullscreenDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: \'Application Dashboard\',\r\n\t\t\t\tsubtitle: \'Complete overview and management\',\r\n\t\t\t\ticonName: \'chart-bar-square\',\r\n\t\t\t\tcontentTitle: \'Dashboard Overview\',\r\n\t\t\t\tcontentDescription: \'Monitor your application performance, manage users, and configure settings all in one place.\',\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tonSave: (data) => {\r\n\t\t\t\t\tconsole.log(\'Dashboard data saved:\', data);\r\n\t\t\t\t\talert(`Dashboard saved! Active tab: ${data.tab}, Counter: ${data.counter}`);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t\tconsole.log(\'Dashboard cancelled\');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonClose: () => {\r\n\t\t\t\t\tconsole.log(\'Dashboard closed\');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { \r\n\t\t\t\twidth: \'90vw\', \r\n\t\t\t\theight: \'80vh\',\r\n\t\t\t\tpadding: \'0\'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenDataManager() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFullscreenDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: \'Data Management Center\',\r\n\t\t\t\tsubtitle: \'Import, export, and manage your data\',\r\n\t\t\t\ticonName: \'circle-stack\',\r\n\t\t\t\tcontentTitle: \'Data Operations\',\r\n\t\t\t\tcontentDescription: \'Comprehensive data management tools for importing, processing, and exporting your datasets.\',\r\n\t\t\t\tshowTabs: false,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tonSave: (data) => {\r\n\t\t\t\t\tconsole.log(\'Data manager saved:\', data);\r\n\t\t\t\t\talert(\'Data operations completed successfully!\');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close(),\r\n\t\t\t\tonClose: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { \r\n\t\t\t\twidth: \'90vw\', \r\n\t\t\t\theight: \'80vh\',\r\n\t\t\t\tpadding: \'0\'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenSystemSettings() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktFullscreenDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: \'System Configuration\',\r\n\t\t\t\tsubtitle: \'Advanced system settings and preferences\',\r\n\t\t\t\ticonName: \'cog-8-tooth\',\r\n\t\t\t\tcontentTitle: \'System Settings\',\r\n\t\t\t\tcontentDescription: \'Configure advanced system preferences, security settings, and integration options.\',\r\n\t\t\t\tshowCounter: false,\r\n\t\t\t\tcounter: this.sharedCounter,\r\n\t\t\t\tonSave: (data) => {\r\n\t\t\t\t\tconsole.log(\'System settings saved:\', data);\r\n\t\t\t\t\talert(\'System settings updated successfully!\');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close(),\r\n\t\t\t\tonClose: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { \r\n\t\t\t\twidth: \'90vw\', \r\n\t\t\t\theight: \'80vh\',\r\n\t\t\t\tpadding: \'0\'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"small-dialog",children:"Small Dialog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Compact dialogs (300px width) perfect for quick confirmations, simple interactions, and mobile-friendly experiences. Ideal for lightweight operations and minimal UI disruption."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.gG,{of:_fkt_dialog_stories__WEBPACK_IMPORTED_MODULE_4__.SmallDialog}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"code-5",children:"Code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"@Component({\r\n\tselector: 'fkt-small-dialog-demo',\r\n\ttemplate: `\r\n\t\t<div class=\"text-center space-y-4\">\r\n\t\t\t@if(showIcon()) {\r\n\t\t\t\t<div class=\"flex justify-center\">\r\n\t\t\t\t\t<div class=\"p-3 rounded-full\" [class]=\"iconBgClass()\">\r\n\t\t\t\t\t\t<fkt-icon [name]=\"iconName()\" size=\"24\" [class]=\"iconColorClass()\"></fkt-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h3 class=\"text-lg font-semibold text-gray-900\">{{title()}}</h3>\r\n\t\t\t\t@if(message()) {\r\n\t\t\t\t\t<p class=\"text-sm text-gray-600 mt-2\">{{message()}}</p>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t@if(showInput()) {\r\n\t\t\t\t<div class=\"text-left\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t#inputRef\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t[placeholder]=\"inputPlaceholder()\"\r\n\t\t\t\t\t\tclass=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n\t\t\t\t\t\t(keyup.enter)=\"handleConfirm(inputRef.value)\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t@if(showCounter()) {\r\n\t\t\t\t<div class=\"flex items-center justify-center gap-3\">\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"-\"\r\n\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t(click)=\"decrement()\"\r\n\t\t\t\t\t\t[disabled]=\"counter() <= minValue()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t\t<span class=\"text-lg font-mono min-w-[3ch] text-center\">{{counter()}}</span>\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\ttext=\"+\"\r\n\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t(click)=\"increment()\"\r\n\t\t\t\t\t\t[disabled]=\"counter() >= maxValue()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<div class=\"flex gap-2 justify-center\">\r\n\t\t\t\t@if(showCancel()) {\r\n\t\t\t\t\t<fkt-button\r\n\t\t\t\t\t\t[text]=\"cancelText()\"\r\n\t\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t(click)=\"handleCancel()\"\r\n\t\t\t\t\t></fkt-button>\r\n\t\t\t\t}\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t[text]=\"confirmText()\"\r\n\t\t\t\t\ttheme=\"raised\"\r\n\t\t\t\t\t[color]=\"confirmColor()\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t(click)=\"handleConfirm()\"\r\n\t\t\t\t></fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent, FktIconComponent]\r\n})\r\nexport class FktSmallDialogDemoComponent {\r\n\ttitle = input('Quick Action');\r\n\tmessage = input('');\r\n\ticonName = input('check-circle');\r\n\tshowIcon = input(true);\r\n\tshowInput = input(false);\r\n\tshowCounter = input(false);\r\n\tshowCancel = input(true);\r\n\t\r\n\tinputPlaceholder = input('Enter value...');\r\n\tconfirmText = input('OK');\r\n\tcancelText = input('Cancel');\r\n\tconfirmColor = input<'primary' | 'green' | 'yellow' | 'red'>('primary');\r\n\t\r\n\tcounter = model(1);\r\n\tminValue = input(1);\r\n\tmaxValue = input(10);\r\n\r\n\tonConfirm = output<string | number>();\r\n\tonCancel = output<void>();\r\n\r\n\ticonBgClass = computed(() => {\r\n\t\tconst colorMap = {\r\n\t\t\t'primary': 'bg-primary-100',\r\n\t\t\t'green': 'bg-green-100',\r\n\t\t\t'yellow': 'bg-yellow-100',\r\n\t\t\t'red': 'bg-red-100'\r\n\t\t};\r\n\t\treturn colorMap[this.confirmColor()] || 'bg-primary-100';\r\n\t});\r\n\r\n\ticonColorClass = computed(() => {\r\n\t\tconst colorMap = {\r\n\t\t\t'primary': 'text-primary-600',\r\n\t\t\t'green': 'text-green-600',\r\n\t\t\t'yellow': 'text-yellow-600',\r\n\t\t\t'red': 'text-red-600'\r\n\t\t};\r\n\t\treturn colorMap[this.confirmColor()] || 'text-primary-600';\r\n\t});\r\n\r\n\tincrement() {\r\n\t\tif (this.counter() < this.maxValue()) {\r\n\t\t\tthis.counter.set(this.counter() + 1);\r\n\t\t}\r\n\t}\r\n\r\n\tdecrement() {\r\n\t\tif (this.counter() > this.minValue()) {\r\n\t\t\tthis.counter.set(this.counter() - 1);\r\n\t\t}\r\n\t}\r\n\r\n\thandleConfirm(inputValue?: string) {\r\n\t\tif (this.showInput()) {\r\n\t\t\tthis.onConfirm.emit(inputValue || '');\r\n\t\t} else if (this.showCounter()) {\r\n\t\t\tthis.onConfirm.emit(this.counter());\r\n\t\t} else {\r\n\t\t\tthis.onConfirm.emit('confirmed');\r\n\t\t}\r\n\t}\r\n\r\n\thandleCancel() {\r\n\t\tthis.onCancel.emit();\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'small-dialog-example',\r\n\ttemplate: `\r\n\t\t<div class=\"space-y-4\">\r\n\t\t\t<h3 class=\"text-lg font-semibold\">Small Dialogs</h3>\r\n\t\t\t<p class=\"text-gray-600\">Compact dialogs for quick interactions and mobile-friendly experiences.</p>\r\n\t\t\t\r\n\t\t\t<div class=\"grid grid-cols-2 gap-3\">\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Quick Confirm\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t(click)=\"openQuickConfirm()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Text Input\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t(click)=\"openTextInput()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Number Counter\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t(click)=\"openCounter()\" \r\n\t\t\t\t/>\r\n\t\t\t\t<fkt-button \r\n\t\t\t\t\ttext=\"Delete Warning\" \r\n\t\t\t\t\ttheme=\"stroked\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t(click)=\"openDeleteWarning()\" \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n\t\t\t\t<h4 class=\"font-medium mb-2\">Recent Actions:</h4>\r\n\t\t\t\t<div class=\"space-y-1 max-h-24 overflow-y-auto\">\r\n\t\t\t\t\t@for(action of recentActions(); track $index) {\r\n\t\t\t\t\t\t<div class=\"text-sm text-gray-600\">{{action}}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t@if(recentActions().length === 0) {\r\n\t\t\t\t\t\t<p class=\"text-sm text-gray-500 italic\">No actions yet...</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true,\r\n\timports: [FktButtonComponent]\r\n})\r\nexport class FktSmallDialogExampleComponent {\r\n\tprivate dialogService = inject(FktDialogService);\r\n\t\r\n\trecentActions = signal<string[]>([]);\r\n\r\n\tprivate addAction(action: string) {\r\n\t\tthis.recentActions.update(actions => [\r\n\t\t\t`${new Date().toLocaleTimeString()}: ${action}`,\r\n\t\t\t...actions.slice(0, 4) // Keep only last 5 actions\r\n\t\t]);\r\n\t}\r\n\r\n\topenQuickConfirm() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktSmallDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Quick Confirm',\r\n\t\t\t\tmessage: 'Are you sure you want to proceed?',\r\n\t\t\t\ticonName: 'question-mark-circle',\r\n\t\t\t\tconfirmText: 'Yes',\r\n\t\t\t\tconfirmColor: 'primary' as const,\r\n\t\t\t\tonConfirm: (value) => {\r\n\t\t\t\t\tthis.addAction('Quick action confirmed');\r\n\t\t\t\t\tconsole.log('Quick confirm:', value);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t\tthis.addAction('Quick action cancelled');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '300px', padding: '1.5rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenTextInput() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktSmallDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Enter Name',\r\n\t\t\t\tmessage: 'Please enter your name below:',\r\n\t\t\t\ticonName: 'user',\r\n\t\t\t\tshowInput: true,\r\n\t\t\t\tinputPlaceholder: 'Your name...',\r\n\t\t\t\tconfirmText: 'Save',\r\n\t\t\t\tconfirmColor: 'green' as const,\r\n\t\t\t\tonConfirm: (value) => {\r\n\t\t\t\t\tif (typeof value === 'string' && value.trim()) {\r\n\t\t\t\t\t\tthis.addAction(`Name entered: \"${value}\"`);\r\n\t\t\t\t\t\tconsole.log('Name entered:', value);\r\n\t\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert('Please enter a valid name');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t\tthis.addAction('Name input cancelled');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '300px', padding: '1.5rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenCounter() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktSmallDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Select Quantity',\r\n\t\t\t\tmessage: 'How many items do you want?',\r\n\t\t\t\ticonName: 'calculator',\r\n\t\t\t\tshowCounter: true,\r\n\t\t\t\tshowCancel: false,\r\n\t\t\t\tminValue: 1,\r\n\t\t\t\tmaxValue: 20,\r\n\t\t\t\tconfirmText: 'Select',\r\n\t\t\t\tconfirmColor: 'yellow' as const,\r\n\t\t\t\tonConfirm: (value) => {\r\n\t\t\t\t\tthis.addAction(`Quantity selected: ${value}`);\r\n\t\t\t\t\tconsole.log('Quantity selected:', value);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => dialogInstance.close()\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '300px', padding: '1.5rem' }\r\n\t\t});\r\n\t}\r\n\r\n\topenDeleteWarning() {\r\n\t\tconst dialogInstance = this.dialogService.open({\r\n\t\t\tcomponent: FktSmallDialogDemoComponent,\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: 'Delete Item',\r\n\t\t\t\tmessage: 'This action cannot be undone.',\r\n\t\t\t\ticonName: 'exclamation-triangle',\r\n\t\t\t\tconfirmText: 'Delete',\r\n\t\t\t\tcancelText: 'Keep',\r\n\t\t\t\tconfirmColor: 'red' as const,\r\n\t\t\t\tonConfirm: (value) => {\r\n\t\t\t\t\tthis.addAction('Item deleted');\r\n\t\t\t\t\tconsole.log('Item deleted:', value);\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: () => {\r\n\t\t\t\t\tthis.addAction('Delete cancelled');\r\n\t\t\t\t\tdialogInstance.close();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpanelOptions: { width: '300px', padding: '1.5rem' }\r\n\t\t});\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"typescript-inference--component-design",children:"TypeScript Inference & Component Design"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"required-signal-based-component-apis",children:"Required: Signal-Based Component APIs"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Important"}),": The FktDialog service requires components to use Angular's signal-based APIs (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"input()"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"output()"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model()"}),") for proper TypeScript inference. Decorator-based components (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Input"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@Output"}),") are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"not supported"})," due to TypeScript compilation limitations."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// ✅ REQUIRED: Signal-based component (fully supported)\r\n@Component({\r\n\tselector: 'my-dialog-component',\r\n\ttemplate: `...`\r\n})\r\nexport class MyDialogComponent {\r\n\t// Signal inputs - Required for TypeScript inference\r\n\ttitle = input('Default Title');\r\n\tuserData = input<User>();\r\n\tconfig = input<DialogConfig>({ theme: 'light' });\r\n\t\r\n\t// Signal outputs - Required for callback type inference\r\n\tonSave = output<FormData>();\r\n\tonCancel = output<void>();\r\n\tonAction = output<{ type: string, payload: any }>();\r\n\t\r\n\t// Signal models - Required for two-way binding\r\n\tcounter = model(0);\r\n\titems = model<string[]>([]);\r\n}\r\n\r\n// Perfect TypeScript inference when using signal-based components:\r\nconst dialogRef = this.dialogService.open({\r\n\tcomponent: MyDialogComponent,\r\n\tdata: {\r\n\t\t// ✅ Full IntelliSense for all inputs\r\n\t\ttitle: 'Custom Title',          // string - auto-completed\r\n\t\tuserData: this.currentUser,     // User type enforced\r\n\t\tconfig: { theme: 'dark' },      // DialogConfig type enforced\r\n\t\t\r\n\t\t// ✅ TypeScript automatically infers callback parameter types\r\n\t\tonSave: (data) => {             // data is automatically typed as FormData\r\n\t\t\tconsole.log('Form saved:', data);\r\n\t\t\tdialogRef.close();\r\n\t\t},\r\n\t\tonCancel: () => {               // void - no parameters\r\n\t\t\tdialogRef.close();\r\n\t\t},\r\n\t\tonAction: (event) => {          // event is automatically typed as { type: string, payload: any }\r\n\t\t\tthis.handleAction(event.type, event.payload);\r\n\t\t},\r\n\t\t\r\n\t\t// ✅ Two-way signal binding with type safety\r\n\t\tcounter: this.sharedCounter,    // WritableSignal<number>\r\n\t\titems: this.sharedItems,        // WritableSignal<string[]>\r\n\t}\r\n});\r\n\r\n// ❌ NOT SUPPORTED: Decorator-based components won't compile\r\n@Component({\r\n\tselector: 'decorator-component',\r\n\ttemplate: `...`\r\n})\r\nexport class DecoratorComponent {\r\n\t@Input() title: string = 'Default';         // ❌ Won't work\r\n\t@Input() userData?: User;                   // ❌ Won't work\r\n\t@Output() onSave = new EventEmitter<FormData>(); // ❌ Won't work\r\n}\r\n\r\n// This will result in TypeScript compilation errors:\r\nconst willNotCompile = this.dialogService.open({\r\n\tcomponent: DecoratorComponent,  // ❌ TypeScript error\r\n\tdata: { /* ... */ }             // ❌ No inference available\r\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"component-agnostic-design-benefits",children:"Component Agnostic Design Benefits"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Using signal-based APIs makes your dialog components truly ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"reusable"})," across different contexts:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:'@Component({\r\n\tselector: \'user-profile-form\',\r\n\ttemplate: `\r\n\t\t<div class="p-4">\r\n\t\t\t<h3>{{ title() }}</h3>\r\n\t\t\t<form (ngSubmit)="handleSubmit()">\r\n\t\t\t\t<input [(ngModel)]="name" placeholder="Name" [readonly]="readonly()" />\r\n\t\t\t\t<input [(ngModel)]="email" placeholder="Email" [readonly]="readonly()" />\r\n\t\t\t\t<div class="flex gap-2">\r\n\t\t\t\t\t@if (!readonly()) {\r\n\t\t\t\t\t\t<button type="submit" [disabled]="!isValid()">Save</button>\r\n\t\t\t\t\t\t<button type="button" (click)="handleCancel()">Cancel</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t`,\r\n\tstandalone: true\r\n})\r\nexport class UserProfileFormComponent {\r\n\t// Signal inputs - work everywhere\r\n\ttitle = input(\'Edit Profile\');\r\n\tinitialName = input(\'\');\r\n\tinitialEmail = input(\'\');\r\n\treadonly = input(false);\r\n\t\r\n\t// Signal outputs - work everywhere\r\n\tonSubmit = output<{ name: string, email: string }>();\r\n\tonCancel = output<void>();\r\n\t\r\n\t// Internal component state\r\n\tname = signal(\'\');\r\n\temail = signal(\'\');\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.name.set(this.initialName());\r\n\t\tthis.email.set(this.initialEmail());\r\n\t}\r\n\t\r\n\tisValid = computed(() => \r\n\t\tthis.name().trim().length > 0 && \r\n\t\tthis.email().includes(\'@\')\r\n\t);\r\n\t\r\n\thandleSubmit() {\r\n\t\tif (this.isValid()) {\r\n\t\t\tthis.onSubmit.emit({ \r\n\t\t\t\tname: this.name(), \r\n\t\t\t\temail: this.email() \r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleCancel() {\r\n\t\tthis.onCancel.emit();\r\n\t}\r\n}\r\n\r\n// This component works seamlessly in ALL contexts:\r\n\r\n// 1. ✅ In FktDialog (with automatic type inference)\r\nthis.dialogService.open({\r\n\tcomponent: UserProfileFormComponent,\r\n\tdata: {\r\n\t\ttitle: \'Create New User\',\r\n\t\tinitialName: \'\',\r\n\t\tinitialEmail: \'\',\r\n\t\treadonly: false,\r\n\t\tonSubmit: (userData) => {\r\n\t\t\t// userData is automatically typed as { name: string, email: string }\r\n\t\t\tthis.userService.create(userData);\r\n\t\t\tdialogRef.close();\r\n\t\t},\r\n\t\tonCancel: () => dialogRef.close()\r\n\t}\r\n});\r\n\r\n// 2. ✅ In FktOverlay\r\nthis.overlayService.open({\r\n\tcomponent: UserProfileFormComponent,\r\n\tdata: {\r\n\t\ttitle: \'Edit User\',\r\n\t\tinitialName: user.name,\r\n\t\tinitialEmail: user.email,\r\n\t\treadonly: !canEdit,\r\n\t\tonSubmit: (userData) => this.updateUser(userData),\r\n\t\tonCancel: () => overlayRef.close()\r\n\t}\r\n});\r\n\r\n// 3. ✅ As standalone component in templates\r\n@Component({\r\n\ttemplate: `\r\n\t\t<user-profile-form\r\n\t\t\t[title]="\'User Settings\'"\r\n\t\t\t[initialName]="currentUser.name"\r\n\t\t\t[initialEmail]="currentUser.email"\r\n\t\t\t[readonly]="!canEditProfile"\r\n\t\t\t(onSubmit)="updateProfile($event)"\r\n\t\t\t(onCancel)="navigateBack()"\r\n\t\t/>\r\n\t`\r\n})\r\nexport class ProfilePageComponent { /* ... */ }\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"how-the-typescript-inference-works",children:"How the TypeScript Inference Works"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The FktDialog service uses advanced TypeScript reflection to analyze your component's signal-based API at compile time:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// The dialog service automatically extracts:\r\ntype ComponentInputs<T> = {\r\n\t[K in keyof T as T[K] extends InputSignal<any> ? K : never]: InputValue<T[K]>\r\n};\r\n\r\ntype ComponentOutputs<T> = {\r\n\t[K in keyof T as T[K] extends OutputEmitterRef<any> ? K : never]: CallbackFor<T[K]>\r\n};\r\n\r\ntype ComponentModels<T> = {\r\n\t[K in keyof T as T[K] extends ModelSignal<any> ? K : never]: WritableSignal<ModelValue<T[K]>>\r\n};\r\n\r\n// Results in perfectly typed dialog data:\r\ntype FktDialogData<T> = \r\n\t& Partial<ComponentInputs<T>>   // All inputs become optional data properties\r\n\t& ComponentOutputs<T>           // All outputs become required callback functions\r\n\t& Partial<ComponentModels<T>>;  // All models become optional signal bindings\r\n\r\n// This magic only works with signal-based APIs!\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"migration-from-decorator-components",children:"Migration from Decorator Components"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If you have existing decorator-based components, here's how to migrate them:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// Before: Decorator-based (won't work with FktDialog)\r\n@Component({ /* ... */ })\r\nexport class OldComponent {\r\n\t@Input() title: string = '';\r\n\t@Input() data?: MyData;\r\n\t@Input() config: Config = { theme: 'light' };\r\n\t@Output() save = new EventEmitter<FormData>();\r\n\t@Output() cancel = new EventEmitter<void>();\r\n}\r\n\r\n// After: Signal-based (works perfectly with FktDialog)\r\n@Component({ /* ... */ })\r\nexport class NewComponent {\r\n\ttitle = input('');\r\n\tdata = input<MyData>();\r\n\tconfig = input<Config>({ theme: 'light' });\r\n\tsave = output<FormData>();\r\n\tcancel = output<void>();\r\n\t\r\n\t// Migration tip: Keep the same logic, just change the API\r\n\thandleSave() {\r\n\t\tconst formData = this.buildFormData();\r\n\t\tthis.save.emit(formData); // Same emit pattern\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"fktdialogoptions-interface",children:"FktDialogOptions Interface"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FktDialogOptions<T> {\r\n\tcomponent: Type<T>;                    // Angular component to display\r\n\tdata: FktReactiveComponentData<T>;     // Data to pass to the component with signal support\r\n\tpanelOptions?: {                       // Panel configuration options\r\n\t\twidth?: string;                    // Dialog width (default: '100%')\r\n\t\theight?: string;                   // Dialog height (default: 'fit-content')\r\n\t\tmaxHeight?: string;                // Maximum height (default: '90vh')\r\n\t\tmaxWidth?: string;                 // Maximum width (default: '1200px')\r\n\t\tpadding?: string;                  // Internal padding (default: '1rem')\r\n\t\tborderRadius?: string;             // Border radius (default: '1rem')\r\n\t\tbackgroundColor?: string;          // Background color (default: 'white')\r\n\t\tbackdropClick?: () => void;        // Backdrop click handler\r\n\t};\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"fktdialogref-interface",children:"FktDialogRef Interface"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FktDialogRef<T> {\r\n\tcomponentRef: ComponentRef<T>;         // Reference to the dialog component\r\n\tclose: () => void;                     // Method to close the dialog\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"confirmation-dialog-options",children:"Confirmation Dialog Options"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"export interface FktConfirmActionOptions {\r\n\ttitle: string;                         // Dialog title\r\n\tdescription?: string;                  // Optional description\r\n\tactions?: {\r\n\t\tprimary?: Partial<FktButtonAction>;   // Primary action button\r\n\t\tsecondary?: Partial<FktButtonAction>; // Secondary action button\r\n\t};\r\n\tbackdropClick?: () => void;            // Backdrop click handler\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"dialog-sizing-options",children:"Dialog Sizing Options"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The dialog service provides flexible sizing through ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"panelOptions"}),":"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"predefined-sizes",children:"Predefined Sizes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Small"}),": ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"width: '300px'"})," - Perfect for quick confirmations"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Medium"}),": ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"width: '500px'"})," - Standard forms and content"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Large"}),": ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"width: '700px'"})," - Detailed forms and complex content"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Extra Large"}),": ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"width: '900px'"})," - Data tables and comprehensive interfaces"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Full Screen"}),": ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"width: '90vw', height: '80vh'"})," - Immersive experiences"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"responsive-sizing",children:"Responsive Sizing"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"panelOptions: {\r\n\twidth: 'min(90vw, 600px)',  // Responsive width\r\n\tmaxHeight: '80vh',          // Constrain height\r\n\theight: 'fit-content'       // Adapt to content\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"advanced-features--tips",children:"Advanced Features & Tips"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"reactive-data-binding",children:"Reactive Data Binding"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"While not required, signals enable powerful reactive patterns:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"// Option 1: Static data (simple and fine for most cases)\r\ndata: {\r\n\ttitle: 'Static Title',\r\n\tmessage: 'This won\\'t change after dialog opens'\r\n}\r\n\r\n// Option 2: Reactive data (when you need live updates)\r\ndata: {\r\n\ttitle: this.dynamicTitle,      // Signal that can update\r\n\tmessage: this.liveMessage,     // Updates reflect in dialog\r\n\tcounter: this.sharedCounter    // Two-way binding with models\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"multiple-dialog-management",children:"Multiple Dialog Management"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"class MyComponent {\r\n\tprivate activeDialogs = new Map<string, FktDialogRef<any>>();\r\n\r\n\topenNamedDialog(id: string, config: any) {\r\n\t\t// Close existing dialog with same ID\r\n\t\tthis.closeDialog(id);\r\n\r\n\t\tconst dialogRef = this.dialogService.open(config);\r\n\t\tthis.activeDialogs.set(id, dialogRef);\r\n\t\treturn dialogRef;\r\n\t}\r\n\r\n\tcloseDialog(id: string) {\r\n\t\tconst dialog = this.activeDialogs.get(id);\r\n\t\tif (dialog) {\r\n\t\t\tdialog.close();\r\n\t\t\tthis.activeDialogs.delete(id);\r\n\t\t}\r\n\t}\r\n\r\n\tcloseAllDialogs() {\r\n\t\tthis.activeDialogs.forEach(dialog => dialog.close());\r\n\t\tthis.activeDialogs.clear();\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-backdrop-behavior",children:"Custom Backdrop Behavior"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-typescript",children:"panelOptions: {\r\n\tbackdropClick: () => {\r\n\t\tif (this.hasUnsavedChanges()) {\r\n\t\t\tif (confirm('Discard changes?')) {\r\n\t\t\t\tdialogRef.close();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdialogRef.close();\r\n\t\t}\r\n\t}\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"component-design",children:"Component Design"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Use signal-based APIs"}),": Required for TypeScript inference and reactivity"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Keep components focused"}),": Each dialog component should have a single responsibility"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Design for reusability"}),": Signal-based components work in dialogs, overlays, and standalone"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Handle edge cases"}),": Consider what happens when users navigate away or refresh"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"data-management",children:"Data Management"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Static vs Reactive"}),": Use static data for simple dialogs, reactive for live updates"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Callback functions"}),": Handle dialog outputs by passing callback functions in data"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"State management"}),": Consider using signals for shared state across dialogs"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Validation"}),": Implement proper form validation and user feedback"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"performance--memory",children:"Performance & Memory"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Close properly"}),": Always call close() to prevent memory leaks"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Limit concurrent dialogs"}),": Avoid opening too many dialogs simultaneously"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Optimize templates"}),": Keep dialog templates lightweight and efficient"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Lazy loading"}),": Consider loading heavy content only when needed"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"user-experience",children:"User Experience"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Appropriate sizing"}),": Choose sizes that fit content without overwhelming users"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Clear actions"}),": Make primary and secondary actions obvious"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Mobile friendly"}),": Test dialogs on various screen sizes"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Keyboard navigation"}),": Ensure dialogs are accessible via keyboard"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Focus management"}),": Handle focus properly when opening and closing"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Focus Management"}),": Focus is automatically managed when dialogs open and close"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Keyboard Support"}),": ESC key closes dialogs, Tab navigation works within dialog content"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"ARIA Attributes"}),": Dialogs include proper ARIA roles and labels automatically"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Screen Reader Support"}),": Dialog content is properly announced to screen readers"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Backdrop Interaction"}),": Clicking outside the dialog provides expected behavior"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"performance",children:"Performance"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Efficient Rendering"}),": Dialogs use efficient DOM management and minimal re-renders"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Memory Safe"}),": Components are properly destroyed when dialogs close"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Position Optimization"}),": Dialog positioning calculations are optimized for performance"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Lazy Destruction"}),": Dialog elements are removed from DOM after closing animation"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"quick-actions",children:"Quick Actions"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Confirmations"}),": Delete actions, save confirmations, navigation warnings"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Input Collection"}),": Single field inputs, quick settings, preferences"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Status Updates"}),": Success messages, error notifications, progress updates"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"forms--data-entry",children:"Forms & Data Entry"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"User Registration"}),": Account creation, profile setup, preferences"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Data Collection"}),": Surveys, feedback forms, contact information"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Content Creation"}),": Post creation, comment forms, media uploads"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"content-display",children:"Content Display"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Details View"}),": User profiles, item details, expanded information"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Media Preview"}),": Image galleries, video players, document viewers"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Help & Documentation"}),": Tutorials, feature explanations, guidelines"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"system-operations",children:"System Operations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Settings Management"}),": Application preferences, user settings, system configuration"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Data Management"}),": Import/export operations, data processing, bulk actions"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Administrative Tasks"}),": User management, system monitoring, configuration"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,C_Users_samuel_programming_frakton_ng_node_modules_pnpm_storybook_addon_docs_9_1_1_1e3dbc6425d957f744da9273d11c9cb8_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_2__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);