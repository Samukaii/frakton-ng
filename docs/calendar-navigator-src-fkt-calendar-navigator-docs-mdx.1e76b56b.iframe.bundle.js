"use strict";(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[9443],{"./libs/frakton-ng/calendar-navigator/src/fkt-calendar-navigator.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_a28e18d91e0886f85aadeddb70a4d92b/node_modules/@storybook/addon-docs/dist/blocks.mjs"),fkt_calendar_navigator_stories=__webpack_require__("./libs/frakton-ng/calendar-navigator/src/fkt-calendar-navigator.stories.ts"),StoryDoc=__webpack_require__("./libs/frakton-ng/.storybook/blocks/StoryDoc.tsx");const rawExamples={dynamicModeExample:{name:"DynamicModeExample",files:[{name:"dynamic-mode-example.component.html",content:'<div class="container">\r\n\t\t\t<fkt-calendar-navigator\r\n\t\t\t\t[mode]="internalMode()"\r\n\t\t\t\t[currentDate]="internalDate()"\r\n\t\t\t/>\r\n\r\n\t\t\t<div class="container__info">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<fkt-badge\r\n\t\t\t\t\t\ttext="Mode: {{internalMode()}}"\r\n\t\t\t\t\t\tcolor="blue">\r\n\r\n\t\t\t\t\t</fkt-badge>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<strong class="container__info-selected">\r\n\t\t\t\t\tSelected: {{ internalDate() | date:\'fullDate\' }}\r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="container__actions">\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t(click)="goToToday()"\r\n\t\t\t\t\ttext="Today"\r\n\t\t\t\t>\r\n\t\t\t\t</fkt-button>\r\n\r\n\t\t\t\t<fkt-button\r\n\t\t\t\t\t(click)="toggleMode()"\r\n\t\t\t\t\ttheme="stroked"\r\n\t\t\t\t\ttext="Switch to {{ internalMode() === \'month\' ? \'Year\' : \'Month\' }} mode"\r\n\t\t\t\t>\r\n\t\t\t\t</fkt-button>\r\n\t\t\t</div>\r\n\t\t</div>',language:"html"},{name:"dynamic-mode-example.component.ts",content:"import { Component, input, linkedSignal } from '@angular/core';\r\nimport { FktCalendarNavigatorComponent, FktCalendarNavigatorMode } from 'frakton-ng/calendar-navigator';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\nimport { FktBadgeComponent } from 'frakton-ng/badge';\r\n\r\n@Component({\r\n\tselector: 'dynamic-mode-example',\r\n\ttemplateUrl: './dynamic-mode-example.component.html',\r\n\tstyleUrl: './dynamic-mode-example.component.scss',\r\n\timports: [FktCalendarNavigatorComponent, DatePipe, FktButtonComponent, FktBadgeComponent]\r\n})\r\nexport class ExampleComponent {\r\n\tprotected currentDate = input(new Date());\r\n\tprotected mode = input<FktCalendarNavigatorMode>('month');\r\n\r\n\tprotected internalMode = linkedSignal(this.mode);\r\n\tprotected internalDate = linkedSignal(this.currentDate);\r\n\r\n\tprotected toggleMode() {\r\n\t\tthis.internalMode.update(currentMode => currentMode === 'month' ? 'year' : 'month');\r\n\t}\r\n\r\n\tprotected goToToday() {\r\n\t\tthis.internalDate.set(new Date());\r\n\t}\r\n}\r\n",language:"typescript"},{name:"dynamic-mode-example.component.scss",content:".container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-xl);\r\n\r\n\t&__info {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-top: var(--space-xs);\r\n\t\tpadding-top: var(--space-xs);\r\n\t\tborder-top: 1px solid var(--color-gray-200);\r\n\t\tcolor: var(--color-gray-600);\r\n\r\n\t\t&-selected {\r\n\t\t\tcolor: var(--color-gray-600);\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-weight: var(--font-semibold);\r\n\t\t}\r\n\t}\r\n\r\n\t&__actions {\r\n\t\tgap: var(--space-xs);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t}\r\n}\r\n",language:"css"}]},formIntegrationExample:{name:"FormIntegrationExample",files:[{name:"form-integration-example.component.html",content:'<div class="navigator">\r\n\t\t\t<fkt-calendar-navigator\r\n\t\t\t\t[mode]="mode()"\r\n\t\t\t\t[currentDate]="currentDate()"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div class="info">\r\n\t\t\tSelected: {{ dateForm.controls.selectedDate.value() | date:\'fullDate\' }}\r\n\t\t</div>',language:"html"},{name:"form-integration-example.component.ts",content:"import { Component, effect, inject, input } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FktCalendarNavigatorComponent, FktCalendarNavigatorMode } from 'frakton-ng/calendar-navigator';\r\nimport { SignalFormBuilder } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'form-integration-example',\r\n\ttemplateUrl: './form-integration-example.component.html',\r\n\tstyleUrl: './form-integration-example.component.scss',\r\n\timports: [FktCalendarNavigatorComponent, DatePipe]\r\n})\r\nexport class ExampleComponent {\r\n\tcurrentDate = input(new Date());\r\n\tmode = input<FktCalendarNavigatorMode>('month');\r\n\r\n\tprivate fb = inject(SignalFormBuilder);\r\n\r\n\tprotected dateForm = this.fb.group({\r\n\t\tselectedDate: [new Date()]\r\n\t});\r\n\r\n\tupdateFormDate = effect(() => {\r\n\t\tthis.dateForm.patchValue({\r\n\t\t\tselectedDate: this.currentDate()\r\n\t\t});\r\n\t});\r\n}\r\n",language:"typescript"},{name:"form-integration-example.component.scss",content:".navigator {\r\n\tborder-bottom: solid 1px var(--color-gray-200);\r\n\tpadding-bottom: var(--space-xs);\r\n\tmargin-bottom: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tcolor: var(--color-gray-500);\r\n\ttext-align: center;\r\n\tfont-weight: var(--font-semibold);\r\n}\r\n",language:"css"}]},monthModeExample:{name:"MonthModeExample",files:[{name:"month-mode-example.component.html",content:'<fkt-calendar-navigator\r\n\t\t\t[mode]="mode()"\r\n\t\t\t[currentDate]="currentDate()"\r\n\t\t/>',language:"html"},{name:"month-mode-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktCalendarNavigatorComponent, FktCalendarNavigatorMode } from 'frakton-ng/calendar-navigator';\r\n\r\n@Component({\r\n\tselector: 'month-mode-example',\r\n\ttemplateUrl: './month-mode-example.component.html',\r\n\tstyleUrl: './month-mode-example.component.scss',\r\n\timports: [FktCalendarNavigatorComponent]\r\n})\r\nexport class ExampleComponent {\r\n\tcurrentDate = input(new Date());\r\n\tmode = input<FktCalendarNavigatorMode>('month');\r\n}\r\n",language:"typescript"},{name:"month-mode-example.component.scss",content:"",language:"css"}]},yearModeExample:{name:"YearModeExample",files:[{name:"year-mode-example.component.html",content:'<fkt-calendar-navigator\r\n\t\t\t[mode]="mode()"\r\n\t\t\t[currentDate]="currentDate()"\r\n\t\t/>',language:"html"},{name:"year-mode-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktCalendarNavigatorComponent, FktCalendarNavigatorMode } from 'frakton-ng/calendar-navigator';\r\n\r\n@Component({\r\n\tselector: 'year-mode-example',\r\n\ttemplateUrl: './year-mode-example.component.html',\r\n\tstyleUrl: './year-mode-example.component.scss',\r\n\timports: [FktCalendarNavigatorComponent]\r\n})\r\nexport class ExampleComponent {\r\n\tcurrentDate = input(new Date());\r\n\tmode = input<FktCalendarNavigatorMode>('month');\r\n}\r\n",language:"typescript"},{name:"year-mode-example.component.scss",content:"",language:"css"}]}};function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{of:fkt_calendar_navigator_stories}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.strong,{children:"FktCalendarNavigator"})," component provides an interactive calendar header with navigation controls and modal-based date selection. It displays the current month/year and allows users to navigate between dates with modal overlays for detailed selection."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Multiple Modes"}),": Switch between 'month' and 'year' display modes"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Modal Integration"}),": Opens detailed calendar modals for date/month/year selection"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Navigation Controls"}),": Previous/next navigation with customizable button states"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Two-way Binding"}),": Reactive date binding with model signals"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Overlay System"}),": Advanced modal positioning and management"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Click Navigation"}),": Clickable month/year labels that open selection modals"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Responsive Design"}),": Adapts to different screen sizes and containers"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,jsx_runtime.jsx)(blocks.ov,{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"types",children:"Types"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-typescript",children:"type FktCalendarNavigatorMode = 'month' | 'year';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_calendar_navigator_stories.MonthModeNavigator,code:rawExamples.monthModeExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_calendar_navigator_stories.YearModeNavigator,code:rawExamples.yearModeExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_calendar_navigator_stories.FormIntegration,code:rawExamples.formIntegrationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_calendar_navigator_stories.DynamicModeSwitching,code:rawExamples.dynamicModeExample}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"navigation-behavior",children:"Navigation Behavior"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Month Mode"}),": Previous/Next buttons navigate by month, Month/Year labels open selection modals"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Year Mode"}),": Previous/Next buttons navigate by year, Year label opens multi-year selection modal"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Perfect for date picker headers, event calendar controls, dashboard date filters, and appointment scheduling interfaces. Integrates seamlessly with form controls and data filtering systems."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Tab navigation through controls"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Screen Reader Support"}),": Proper ARIA labels for navigation buttons"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Focus Management"}),": Logical focus flow through interactive elements"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Date Announcements"}),": Screen readers announce selected dates"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);