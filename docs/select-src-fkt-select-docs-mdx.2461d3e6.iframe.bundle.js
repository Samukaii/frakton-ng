"use strict";(self.webpackChunkfrakton_ng=self.webpackChunkfrakton_ng||[]).push([[8263],{"./libs/frakton-ng/select/src/fkt-select.docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@19.1.1/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.1.1_@types+react@19.1.12_react@19.1.1/node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@9.1.1_a28e18d91e0886f85aadeddb70a4d92b/node_modules/@storybook/addon-docs/dist/blocks.mjs"),fkt_select_stories=__webpack_require__("./libs/frakton-ng/select/src/fkt-select.stories.ts"),StoryDoc=__webpack_require__("./libs/frakton-ng/.storybook/blocks/StoryDoc.tsx");const rawExamples={asyncLoadingExample:{name:"AsyncLoadingExample",files:[{name:"async-loading-example.component.html",content:'<div class="info">\r\n\t<strong>\r\n\t\tClick field to load users\r\n\t</strong>\r\n\t<p>\r\n\t\t<strong>Status:</strong>\r\n\t\t{{ loading() ? \'Loading users from API...\' : \'Users loaded successfully\' }}\r\n\t</p>\r\n</div>\r\n<fkt-select\r\n\t[control]="control"\r\n\t(selectOpened)="loadOptions()"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n\t[loading]="loading()"\r\n/>\r\n',language:"html"},{name:"async-loading-example.component.ts",content:"import { Component, input, signal } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-async-loading-example',\r\n\ttemplateUrl: './async-loading-example.component.html',\r\n\tstyleUrl: './async-loading-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class AsyncLoadingExampleComponent {\r\n\tcontrol = new SignalFormControl('');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = signal<FktSelectOption[]>([]);\r\n\tloading = signal(false);\r\n\r\n\tasync loadOptions() {\r\n\t\tthis.loading.set(true);\r\n\t\tthis.options.set([]);\r\n\r\n\t\t// Simulate API call\r\n\t\tawait new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n\t\tconst users: FktSelectOption[] = [\r\n\t\t\t{value: 'user1', label: 'John Doe'},\r\n\t\t\t{value: 'user2', label: 'Jane Smith'},\r\n\t\t\t{value: 'user3', label: 'Bob Johnson'},\r\n\t\t\t{value: 'user4', label: 'Alice Williams'},\r\n\t\t\t{value: 'user5', label: 'Charlie Brown'},\r\n\t\t];\r\n\r\n\t\tthis.options.set(users);\r\n\t\tthis.loading.set(false);\r\n\t}\r\n}\r\n",language:"typescript"},{name:"async-loading-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\np {\r\n\tmargin: 0;\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n",language:"css"}]},defaultExample:{name:"DefaultExample",files:[{name:"default-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n\t[loading]="loading()"\r\n\t[noResults]="noResults()"\r\n/>\r\n<div class="info">\r\n\t<strong>Selected Value:</strong> {{ control.value() || \'None\' }}\r\n</div>\r\n',language:"html"},{name:"default-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-default-example',\r\n\ttemplateUrl: './default-example.component.html',\r\n\tstyleUrl: './default-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class DefaultExampleComponent {\r\n\tcontrol = new SignalFormControl('');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n\tloading = input<boolean>(false);\r\n\tnoResults = input<any>();\r\n}\r\n",language:"typescript"},{name:"default-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n}\r\n",language:"css"}]},disabledExample:{name:"DisabledExample",files:[{name:"disabled-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n/>\r\n<fkt-button\r\n\t(click)="toggleDisabled()"\r\n\ttheme="stroked"\r\n\t[text]="control.disabled() ? \'Enable field\' : \'Disable field\'"\r\n>\r\n</fkt-button>\r\n',language:"html"},{name:"disabled-example.component.ts",content:"import { Component, input, OnInit } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktButtonComponent } from 'frakton-ng/button';\r\n\r\n@Component({\r\n\tselector: 'select-disabled-example',\r\n\tstyleUrl: './disabled-example.component.scss',\r\n\ttemplateUrl: './disabled-example.component.html',\r\n\timports: [FktSelectComponent, FktButtonComponent]\r\n})\r\nexport class DisabledExampleComponent implements OnInit {\r\n\tcontrol = new SignalFormControl('option2');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n\r\n\tngOnInit() {\r\n\t\tthis.control.disable();\r\n\t}\r\n\r\n\ttoggleDisabled() {\r\n\t\tif (this.control.disabled()) {\r\n\t\t\tthis.control.enable();\r\n\t\t} else {\r\n\t\t\tthis.control.disable();\r\n\t\t}\r\n\t}\r\n}\r\n",language:"typescript"},{name:"disabled-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n",language:"css"}]},emptyStateExample:{name:"EmptyStateExample",files:[{name:"empty-state-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n\t[loading]="loading()"\r\n\t[noResults]="noResults()!"\r\n/>\r\n<div class="info">\r\n\tClick the dropdown to see the custom "no results" message\r\n</div>\r\n',language:"html"},{name:"empty-state-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\nimport { FktNoResults } from 'frakton-ng/no-results';\r\n\r\n@Component({\r\n\tselector: 'select-empty-state-example',\r\n\ttemplateUrl: './empty-state-example.component.html',\r\n\tstyleUrl: './empty-state-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class EmptyStateExampleComponent {\r\n\tcontrol = new SignalFormControl('');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n\tloading = input<boolean>(false);\r\n\tnoResults = input<FktNoResults>();\r\n}\r\n",language:"typescript"},{name:"empty-state-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n}\r\n",language:"css"}]},largeListExample:{name:"LargeListExample",files:[{name:"large-list-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n/>\r\n<div class="info">\r\n\t<p>\r\n\t\tScrollable dropdown with {{ options().length }} options\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Selected:</strong> {{ control.value() || \'None\' }}\r\n\t</p>\r\n</div>\r\n',language:"html"},{name:"large-list-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-large-list-example',\r\n\ttemplateUrl: './large-list-example.component.html',\r\n\tstyleUrl: './large-list-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class LargeListExampleComponent {\r\n\tcontrol = new SignalFormControl('');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n}\r\n",language:"typescript"},{name:"large-list-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n\r\n\tp {\r\n\t\tmargin: var(--space-xs) 0 0;\r\n\t}\r\n}\r\n",language:"css"}]},loadingExample:{name:"LoadingExample",files:[{name:"loading-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n\t[loading]="loading()"\r\n/>\r\n<div class="info">\r\n\t<p>\r\n\t\t<strong>Loading State:</strong> {{ loading() ? \'Loading options...\' : \'Ready\' }}\r\n\t</p>\r\n</div>\r\n',language:"html"},{name:"loading-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-loading-example',\r\n\ttemplateUrl: './loading-example.component.html',\r\n\tstyleUrl: './loading-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class LoadingExampleComponent {\r\n\tcontrol = new SignalFormControl('');\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n\tloading = input<boolean>(true);\r\n}\r\n",language:"typescript"},{name:"loading-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n}\r\n",language:"css"}]},preselectedExample:{name:"PreselectedExample",files:[{name:"preselected-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n/>\r\n<div class="info">\r\n\t<strong>Pre-selected Country:</strong> {{ selectedLabel() }}\r\n</div>\r\n',language:"html"},{name:"preselected-example.component.ts",content:"import { Component, computed, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-preselected-example',\r\n\ttemplateUrl: './preselected-example.component.html',\r\n\tstyleUrl: './preselected-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class PreselectedExampleComponent {\r\n\tcontrol = new SignalFormControl('us'); // Pre-selected value\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n\r\n\tselectedLabel = computed(() => {\r\n\t\tconst value = this.control.value();\r\n\t\tconst option = this.options().find(opt => opt.value === value);\r\n\t\treturn option ? option.label : 'None';\r\n\t});\r\n}\r\n",language:"typescript"},{name:"preselected-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n}\r\n",language:"css"}]},validationExample:{name:"ValidationExample",files:[{name:"validation-example.component.html",content:'<fkt-select\r\n\t[control]="control"\r\n\t[label]="label()"\r\n\t[placeholder]="placeholder()"\r\n\t[options]="options()"\r\n/>\r\n<div class="info">\r\n\t<p>\r\n\t\t<strong>Validation Status:</strong>\r\n\t\t{{ control.valid() ? \'Valid ✓\' : \'Invalid - Priority is required\' }}\r\n\t</p>\r\n\t<div>\r\n\t\tTouch field and click outside to Show Error\r\n\t</div>\r\n</div>\r\n',language:"html"},{name:"validation-example.component.ts",content:"import { Component, input } from '@angular/core';\r\nimport { FktSelectComponent, FktSelectOption } from 'frakton-ng/select';\r\nimport { SignalFormControl, SignalValidators } from 'frakton-ng/forms';\r\n\r\n@Component({\r\n\tselector: 'select-validation-example',\r\n\ttemplateUrl: './validation-example.component.html',\r\n\tstyleUrl: './validation-example.component.scss',\r\n\timports: [FktSelectComponent]\r\n})\r\nexport class ValidationExampleComponent {\r\n\tcontrol = new SignalFormControl('', {\r\n\t\tvalidators: [SignalValidators.required()]\r\n\t});\r\n\tlabel = input<string>();\r\n\tplaceholder = input<string>();\r\n\toptions = input.required<FktSelectOption[]>();\r\n}\r\n",language:"typescript"},{name:"validation-example.component.scss",content:":host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: var(--space-md);\r\n}\r\n\r\n.info {\r\n\tpadding: var(--space-md);\r\n\tbackground-color: var(--color-blue-50);\r\n\tborder-radius: var(--radius-md);\r\n\tfont-size: var(--font-size-sm);\r\n\tcolor: var(--color-blue-900);\r\n\r\n\tdiv {\r\n\t\tmargin-top: var(--space-xs);\r\n\t\tfont-weight: var(--font-semibold);\r\n\t}\r\n}\r\n",language:"css"}]}};function _createMdxContent(props){const _components={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{of:fkt_select_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"fktselect",children:"FktSelect"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.em,{children:"A dropdown selection component that provides a clean and accessible interface for choosing options. Built with Angular signals and reactive forms, it offers a styled alternative to native select elements with enhanced functionality and consistent design."})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"key-features",children:"Key Features"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Custom Styling"}),": Beautiful dropdown design that works consistently across all browsers"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Form Integration"}),": Seamless integration with SignalFormControl and reactive forms"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Full keyboard support for accessibility and efficiency"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Loading States"}),": Built-in support for dynamic option loading with loading indicators"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Custom No Results"}),": Configurable messaging when no options are available"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Async Loading"}),": Support for loading options dynamically from APIs"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,jsx_runtime.jsx)(blocks.ov,{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"types",children:"Types"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-typescript",children:'import {FktIconName} from "frakton-ng/icon";\r\nimport {FktButtonAction} from "frakton-ng/button";\r\n\r\ninterface FktSelectOption {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface FktNoResults {\r\n  label: string;\r\n  icon?: {\r\n\t  name: FktIconName;\r\n\t  size?: string\r\n  };\r\n  description?: string;\r\n  action?: FktButtonAction;\r\n}\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.BasicSelect,code:rawExamples.defaultExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.PreSelectedOption,code:rawExamples.preselectedExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.LargeOptionsList,code:rawExamples.largeListExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.LoadingState,code:rawExamples.loadingExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.EmptyState,code:rawExamples.emptyStateExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.WithValidation,code:rawExamples.validationExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.DisabledState,code:rawExamples.disabledExample}),"\n",(0,jsx_runtime.jsx)(StoryDoc.q,{of:fkt_select_stories.AsyncLoading,code:rawExamples.asyncLoading}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"[Real-world application scenarios where the FktSelect component provides value]"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Form Selection"}),": Country/region selection, status and priority selection, user and role assignment"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Configuration Settings"}),": Theme and appearance options, language and locale selection, feature toggles"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Data Filtering"}),": Sort order selection, filter criteria selection, date range presets"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Business Applications"}),": Department and team selection, project status and priority, customer and vendor selection"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Keyboard Navigation"}),": Arrow keys navigate options, Enter selects, Escape closes dropdown, Tab moves focus"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Screen Reader Support"}),": ARIA labels for combobox role, aria-expanded state, aria-activedescendant for highlighted option"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Focus Management"}),": Logical tab order, visible focus indicators, focus trap when dropdown is open"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Other Notes"}),": Supports high contrast mode, respects prefers-reduced-motion for animations"]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);